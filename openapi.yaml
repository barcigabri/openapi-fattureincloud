openapi: 3.1.0
info:
  title: Fatture in Cloud API v2 - API Reference
  description: "## Request informations\nIn every request description you will be able to find some additional informations about context, permissions and supported functionality:\n\n| Parameter | Description |\n|-----------|-------------|\n| \U0001F465 Context | Indicate the subject of the request. Can be `company`, `user` or `accountant`.  |\n| \U0001F512 Required scope | If present, indicates the required scope to fulfill the request. |\n| \U0001F50D Filtering | If present, indicates which fields support the filtering feature. |\n| ↕️ Sorting | If present, indicates which fields support the sorting feature. |\n| \U0001F4C4 Paginated results | If present, indicate that the results are paginated. |\n| \U0001F3A9 Customized responses supported | If present, indicate that you can use `field` or `fieldset` to customize the response body. |\n\nFor example the request `GET /entities/{entityRole}` have tis informations: \\\n\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:r` or `entity.suppliers:r` (depending on `entityRole`) \\\n\U0001F50D Filtering: `id`, `name` \\\n↕️ Sorting: `id`, `name` \\\n\U0001F4C4 Paginated results \\\n\U0001F3A9 Customized responses supported\n\nKeep in mind that if you are making **company realted requests**, you will need to specify the company id in the requests:\n```\nGET /c/{companyId}/issued_documents\n```"
  contact:
    name: Fatture in Cloud
    url: 'https://www.fattureincloud.it'
    email: info@fattureincloud.it
  license:
    name: ''
    url: 'https://www.fattureincloud.it'
  version: v2.0
servers:
  - url: 'https://api-v2.fattureincloud.it'
tags:
  - name: Clients
  - name: Issued Documents
  - name: Products
  - name: Suppliers
  - name: User
paths:
  /user/info:
    get:
      tags:
        - User
      summary: Get user info
      responses:
        '200':
          $ref: '#/components/responses/UserInfoResponse'
        '401':
          description: Unauthorized.
      operationId: userInfo
      description: "Makes possible to retrieve the current user's info.\n\n\U0001F464 Person context\n\nGet user email, name and id."
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  /user/companies:
    get:
      summary: userCompanies
      tags:
        - User
      responses:
        '200':
          $ref: '#/components/responses/UserCompaniesResponse'
        '401':
          description: Unauthorized
      operationId: userCompanies
      description: "\U0001F464 Person context\n\nGet a list of the controlled companies and their CompanyAuthentication tokens."
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/c/{companyId}/company/info':
    parameters:
      - $ref: '#/components/parameters/CompanyId'
    get:
      summary: Your GET endpoint
      tags:
        - Company
      responses:
        '200':
          $ref: '#/components/responses/CompanyInfoResponse'
        '401':
          description: Unauthorized.
      operationId: companyInfo
      description: 'Get company info like email, license expire date and access info for each document and section'
      security:
        - OAuth2AuthenticationCodeFlow: []
  '/c/{companyId}/entities/clients':
    parameters:
      - $ref: '#/components/parameters/CompanyId'
    get:
      summary: List Clients
      tags:
        - Clients
      responses:
        '200':
          $ref: '#/components/responses/ListCompaniesResponse'
        '401':
          description: Unauthorized
      operationId: listClients
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.clients:r\n\U0001F50D Filtering: id, code, name, type, vat_number, tax_code, address_street, address_postal_code, address_city, address_province, country, email, certified_email, phone, fax, notes, imported, atoka_show, e_invoice, ei_code, created_at, updated_at\n↕️ Sorting: code, name, type, vat_number, tax_code, address_street, address_postal_code, address_city, address_province, country, email, certified_email, phone, fax, notes, e_invoice, ei_code, created_at, updated_at\n\U0001F4C4 Paginated results\n\U0001F3A9 Customized responses supported\n\nGet a list of clients that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.clients:r'
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/FieldSet'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/ById'
    post:
      summary: Create Client
      operationId: createClient
      responses:
        '200':
          $ref: '#/components/responses/CreateClientResponse'
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:a`\n\nCreate a new client."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.clients:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/CreateClientRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
                    default_vat:
                      id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
                    default_payment_terms: 30
                    default_payment_terms_type: standard
                    default_payment_method:
                      id: 0
                      name: string
                      type: standard
                      default_payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      details:
                        - title: string
                          description: string
                    bank_name: string
                    bank_iban: string
                    bank_swift_code: string
                    shipping_address: string
                    e_invoice: false
                    ei_code: string
        description: The client to create
      tags:
        - Clients
  '/c/{companyId}/entities/suppliers':
    parameters:
      - $ref: '#/components/parameters/CompanyId'
    get:
      summary: List Suppliers
      responses:
        '200':
          $ref: '#/components/responses/ListSuppliersResponse'
        '401':
          description: Unauthorized
      operationId: listSuppliers
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.suppliers:r\n\U0001F50D Filtering: id, code, name, type, vat_number, tax_code, address_street, address_postal_code, address_city, address_province, country, email, certified_email, phone, fax, notes, imported, atoka_show, created_at, updated_at\n↕️ Sorting: code, name, type, vat_number, tax_code, address_street, address_postal_code, address_city, address_province, country, email, certified_email, phone, fax, notes, created_at, updated_at\n\U0001F4C4 Paginated results\n\U0001F3A9 Customized responses supported\n\nGet a list of suppliers that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.suppliers:r'
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/FieldSet'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/ById'
      tags:
        - Suppliers
    post:
      summary: Create Supplier
      operationId: createSupplier
      responses:
        '200':
          $ref: '#/components/responses/CreateSupplierResponse'
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.suppliers:a`\n\nCreate a new supplier."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.suppliers:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/CreateSupplierRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
        description: The supplier to create
      tags:
        - Suppliers
  '/c/{companyId}/entities/clients/{clientId}':
    parameters:
      - $ref: '#/components/parameters/CompanyId'
      - $ref: '#/components/parameters/ClientId'
    get:
      summary: Get Client
      tags:
        - Clients
      responses:
        '200':
          $ref: '#/components/responses/GetClientResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getClient
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.clients:r'
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.clients:r\n\U0001F3A9 Customized responses supported\n\nGet details of an existing client by its unique id."
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/FieldSet'
        - $ref: '#/components/parameters/Authorization'
    put:
      summary: Modify Client
      operationId: modifyClient
      responses:
        '200':
          $ref: '#/components/responses/ModifyClientResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.clients:a\n\nEdit an existing client by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.clients:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ModifyClientRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
                    default_vat:
                      id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
                    default_payment_terms: 30
                    default_payment_terms_type: standard
                    default_payment_method:
                      id: 0
                      name: string
                      type: standard
                      default_payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      details:
                        - title: string
                          description: string
                    bank_name: string
                    bank_iban: string
                    bank_swift_code: string
                    shipping_address: string
                    e_invoice: false
                    ei_code: string
        description: The modified Client. First level parameters are managed in delta mode.
      tags:
        - Clients
    delete:
      summary: Delete Client
      operationId: deleteClient
      responses:
        '200':
          description: Entity Removed
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.clients:a\n\nDelete an existing client by its unique id."
      parameters:
        - $ref: '#/components/parameters/Authorization'
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.clients:a'
      tags:
        - Clients
  '/c/{companyId}/entities/suppliers/{supplierId}':
    parameters:
      - $ref: '#/components/parameters/CompanyId'
      - $ref: '#/components/parameters/SupplierId'
    get:
      summary: Get Supplier
      responses:
        '200':
          $ref: '#/components/responses/GetSupplierResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getSupplier
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.suppliers:r'
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.suppliers:r\n\U0001F3A9 Customized responses supported\n\nGet details of an existing supplier by its unique id."
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/FieldSet'
        - $ref: '#/components/parameters/Authorization'
      tags:
        - Suppliers
    put:
      summary: Modify Supplier
      operationId: modifySupplier
      responses:
        '200':
          $ref: '#/components/responses/ModifySupplierResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.suppliers:a\n\nEdit an existing supplier by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.suppliers:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ModifySupplierRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
        description: The modified Supplier. First level parameters are managed in delta mode.
      tags:
        - Suppliers
    delete:
      summary: Delete Supplier
      operationId: deleteSupplier
      responses:
        '200':
          description: Entity Removed
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.suppliers:a\n\nDelete an existing supplier by its unique id."
      parameters:
        - $ref: '#/components/parameters/Authorization'
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.suppliers:a'
      tags:
        - Suppliers
  '/c/{companyId}/products':
    parameters:
      - $ref: '#/components/parameters/CompanyId'
    get:
      summary: List Products
      tags:
        - Products
      responses:
        '200':
          $ref: '#/components/responses/ListProductsResponse'
        '401':
          description: Unauthorized
      operationId: listProducts
      description: "\U0001F465 Company context\n\U0001F512 Required scope: products:r\n\U0001F50D Filtering: id, name, code, net_price, gross_price, net_cost, description, category, notes, in_stock, created_at, updated_at\n↕️ Sorting: name, code, net_price, gross_price, net_cost, description, category, notes, in_stock, created_at, updated_at\n\U0001F4C4 Paginated results\n\U0001F3A9 Customized responses supported\n\nGet a list of products that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'products:r'
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/FieldSet'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/ById'
    post:
      summary: ''
      operationId: createProduct
      responses:
        '200':
          $ref: '#/components/responses/CreateProductResponse'
      tags:
        - Products
      description: "\U0001F465 Company context\n\U0001F512 Required scope: products:a\n\nCreate a new product."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'products:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/c/{companyId}/products/{productId}':
    parameters:
      - $ref: '#/components/parameters/CompanyId'
      - $ref: '#/components/parameters/ProductId'
    get:
      summary: Get Product
      tags:
        - Products
      responses:
        '200':
          $ref: '#/components/responses/GetProductResponse'
      operationId: getProduct
      description: "\U0001F465 Company context\n\U0001F512 Required scope: products:r\n\U0001F3A9 Customized responses supported\n\nGet product details"
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'products:r'
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/FieldSet'
    put:
      summary: Modify Product
      operationId: modifyProduct
      responses:
        '200':
          $ref: '#/components/responses/ModifyProductResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: products:a\n\nEdit an existing product by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'products:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ModifyProductRequest.yaml
        description: Modified product details.
      tags:
        - Products
    delete:
      summary: ''
      operationId: deleteProduct
      responses:
        '200':
          description: Product removed.
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: Delete Product
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'products:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      tags:
        - Products
  '/c/{companyId}/issued_documents':
    parameters:
      - $ref: '#/components/parameters/CompanyId'
    get:
      summary: List Issued Documents
      tags:
        - Issued Documents
      responses:
        '200':
          $ref: '#/components/responses/ListIssuedDocumentsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: listIssuedDocuments
      description: "\U0001F465 Company context\n\U0001F512 Required scope: issued_documents.[documentType]:r\n\U0001F50D Filtering: type, entity.id, entity.name, entity.vat_number, entity.tax_code, entity.city, entity.province, entity.country, date, number, numeration, any_subject, amount_net, amount_vat, amount_gross, next_due_date, created_at, updated_at\n↕️ Sorting: entity.id, entity.name, entity.vat_number, entity.tax_code, entity.city, entity.province, entity.country, date, number, numeration, amount_net, amount_vat, amount_gross, next_due_date, created_at, updated_at\n\U0001F4C4 Paginated results\n\U0001F3A9 Customized responses supported\n\nGet a list of documents that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'issued_documents.invoice:r'
            - 'issued_documents.credit_note:r'
            - 'issued_documents.receipt:r'
            - 'issued_documents.order:r'
            - 'issued_documents.quote:r'
            - 'issued_documents.proforma:r'
            - 'issued_documents.delivery_note:r'
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/DocumentType'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/FieldSet'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/ById'
        - $ref: '#/components/parameters/PerPage'
    post:
      summary: Create Issued Document
      operationId: createIssuedDocument
      responses:
        '200':
          $ref: '#/components/responses/CreateIssuedDocumentResponse'
        '401':
          description: Unauthorized
      tags:
        - Issued Documents
      description: "\U0001F465 Company context\n\U0001F512 Required scope: issued_documents.[documentType]:a\n\nCreate a new document."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'issued_documents.invoice:a'
            - 'issued_documents.credit_note:a'
            - 'issued_documents.receipt:a'
            - 'issued_documents.order:a'
            - 'issued_documents.quote:a'
            - 'issued_documents.proforma:a'
            - 'issued_documents.delivery_note:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/CreateIssuedDocumentRequest.yaml
        description: The Issued Document
  '/c/{companyId}/issued_documents/{documentId}':
    parameters:
      - $ref: '#/components/parameters/CompanyId'
      - $ref: '#/components/parameters/DocumentId'
    get:
      summary: Get Issued Document
      tags:
        - Issued Documents
      responses:
        '200':
          $ref: '#/components/responses/GetIssuedDocumentResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getIssuedDocument
      description: "\U0001F465 Company context\n\U0001F512 Required scope: issued_documents.[documentType]:r\n\U0001F3A9 Customized responses supported\n\nGet details of an existing document by its unique id.\n\n"
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'issued_documents.invoice:r'
            - 'issued_documents.credit_note:r'
            - 'issued_documents.receipt:r'
            - 'issued_documents.order:r'
            - 'issued_documents.quote:r'
            - 'issued_documents.proforma:r'
            - 'issued_documents.delivery_note:r'
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/FieldSet'
    put:
      summary: Modify Issued Document
      operationId: modifyIssuedDocument
      responses:
        '200':
          $ref: '#/components/responses/ModifyIssuedDocumentResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: issued_documents.[documentType]:a\n\nEdit an existing document by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'issued_documents.invoice:a'
            - 'issued_documents.credit_note:a'
            - 'issued_documents.receipt:a'
            - 'issued_documents.order:a'
            - 'issued_documents.quote:a'
            - 'issued_documents.proforma:a'
            - 'issued_documents.delivery_note:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ModifyIssuedDocumentRequest.yaml
        description: The modified document
      tags:
        - Issued Documents
    delete:
      summary: Delete Issued Document
      operationId: deleteIssuedDocument
      responses:
        '200':
          description: Document removed
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: issued_documents.[documentType]:a\n\nDelete an existing document by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'issued_documents.invoice:a'
            - 'issued_documents.credit_note:a'
            - 'issued_documents.receipt:a'
            - 'issued_documents.order:a'
            - 'issued_documents.quote:a'
            - 'issued_documents.proforma:a'
            - 'issued_documents.delivery_note:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      tags:
        - Issued Documents
  '/c/{companyId}/issued_documents/totals':
    parameters:
      - $ref: '#/components/parameters/CompanyId'
    post:
      summary: Get New Issued Document Totals
      operationId: getNewIssuedDocumentTotals
      responses:
        '200':
          $ref: '#/components/responses/GetNewIssuedDocumentTotalsResponse'
      description: "\U0001F465 Company context\n\nGet the totals of a document"
      tags:
        - Issued Documents
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/GetNewIssuedDocumentTotalsRequest.yaml
  '/c/{companyId}/issued_documents/{documentId}/totals':
    parameters:
      - $ref: '#/components/parameters/CompanyId'
      - $ref: '#/components/parameters/DocumentId'
    post:
      summary: Get Existing Issued Document Totals
      operationId: getExistingIssuedDocumentTotals
      responses:
        '200':
          $ref: '#/components/responses/GetExistingIssuedDocumentTotalsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - Issued Documents
      description: "\U0001F465 Company context\n\nGet existing document totals"
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/GetExistingIssuedDocumentTotalsRequest.yaml
components:
  schemas: {}
  securitySchemes:
    OAuth2AuthenticationCodeFlow:
      type: oauth2
      flows:
        authorizationCode:
          tokenUrl: 'https://api-v2.fattureincloud.it/oauth/token'
          refreshUrl: ''
          scopes:
            'entity.clients:r': ''
            'entity.clients:a': ''
            'entity.suppliers:r': ''
            'entity.suppliers:a': ''
            'products:r': ''
            'products:a': ''
            'issued_documents.invoice:r': ''
            'issued_documents.credit_note:r': ''
            'issued_documents.receipt:r': ''
            'issued_documents.order:r': ''
            'issued_documents.quote:r': ''
            'issued_documents.proforma:r': ''
            'issued_documents.delivery_note:r': ''
            'issued_documents.invoice:a': ''
            'issued_documents.credit_note:a': ''
            'issued_documents.receipt:a': ''
            'issued_documents.order:a': ''
            'issued_documents.quote:a': ''
            'issued_documents.proforma:a': ''
            'issued_documents.delivery_note:a': ''
          authorizationUrl: 'https://api-v2.fattureincloud.it/oauth/authorize'
  parameters:
    Authorization:
      name: Authorization
      in: header
      description: Access token to authenticate the user
      required: true
      schema:
        maxLength: 160
        minLength: 160
        type: string
    CompanyId:
      name: CompanyId
      in: path
      required: true
      schema:
        type: string
        example: '12345'
      description: The Referred Company Id.
    FieldSet:
      name: fieldset
      in: query
      required: false
      schema:
        type: string
      description: Name of the fieldset
    Sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
      description: List of comma-separated fields for result sorting (minus for desc sorting)
    Fields:
      name: fields
      in: query
      required: false
      schema:
        type: string
      description: List of comma-separated fields.
    Page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 1
      description: Requested page
    ById:
      name: by_id
      in: query
      required: false
      schema:
        type: integer
        default: 0
      description: 'If 1, return an object instead of an array'
    ClientId:
      name: ClientId
      in: path
      required: true
      schema:
        type: string
    SupplierId:
      name: SupplierId
      in: path
      required: true
      schema:
        type: string
    ProductId:
      name: ProductId
      in: path
      required: true
      schema:
        type: string
    DocumentType:
      name: type
      in: query
      required: true
      schema:
        type: string
        enum:
          - invoice
          - credit_note
          - receipt
          - order
          - quote
          - proforma
          - delivery_note
      description: Type of the document
    PerPage:
      name: per_page
      in: query
      required: false
      schema:
        type: integer
        default: 5
      description: Items to be shown per page
    DocumentId:
      name: DocumentId
      in: path
      required: true
      schema:
        type: string
      description: Unique Id of the document
  responses:
    UserInfoResponse:
      description: User info.
      content:
        application/json:
          schema:
            $ref: ./models/responses/UserInfoResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 12345
                  name: Mario Rossi
                  first_name: Mario
                  last_name: Rossi
                  email: mario.rossi@example.it
    UserCompaniesResponse:
      description: User Companies.
      content:
        application/json:
          schema:
            $ref: ./models/responses/UserCompaniesResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 12345
                  name: Rossi S.r.l.
                  type: company
                  access_token: fd015011d2dbf8a9d38e810b325b11b56d02e51688e5261a245933b8e677b8b44ff5f0fe5ccaaf1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4fd81273fc1f95bf460b869015cf99acba
                  permissions:
                    fic_situation: write
                    fic_clients: write
                    fic_suppliers: write
                    fic_products: write
                    fic_issued_documents: write
                    fic_received_documents: write
                    fic_receipts: write
                    fic_calendar: write
                    fic_archive: write
                    fic_taxes: write
                    fic_stock: write
                    fic_cashbook: write
                    fic_settings: write
                  controlled_companies:
                    - id: 12345
                      name: Rossi S.r.l.
                      type: company
                      access_token: fd015011d2dbf8a9d38e810b325b11b56d02e51688e5261a245933b8e677b8b44ff5f0fe5ccaaf1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4fd81273fc1f95bf460b869015cf99acba
                      permissions:
                        fic_situation: write
                        fic_clients: write
                        fic_suppliers: write
                        fic_products: write
                        fic_issued_documents: write
                        fic_received_documents: write
                        fic_receipts: write
                        fic_calendar: write
                        fic_archive: write
                        fic_taxes: write
                        fic_stock: write
                        fic_cashbook: write
                        fic_settings: write
                      controlled_companies: []
    CompanyInfoResponse:
      description: Company info.
      content:
        application/json:
          schema:
            $ref: ./models/responses/CompanyInfoResponse.yaml
          examples:
            example-1:
              value:
                data:
                  data:
                    id: 12345
                    name: Mario Rossi S.r.l.
                    email: mario@rossi-example.it
                    type: company
                    fic: true
                    fic_plan: trial
                    fic_license_expire: '2019-08-24'
                    use_fic: true
                    fic_need_setup: true
                    dic: true
                    dic_plan: trial
                    dic_license_expire: '2019-08-24'
                    use_dic: true
                    dic_need_setup: true
                    access_info:
                      role: master
                      permissions:
                        fic_situation: write
                        fic_clients: write
                        fic_suppliers: write
                        fic_products: write
                        fic_issued_documents: write
                        fic_received_documents: write
                        fic_receipts: write
                        fic_calendar: write
                        fic_archive: write
                        fic_taxes: write
                        fic_stock: write
                        fic_cashbook: write
                        fic_settings: write
                    plan_info:
                      limits:
                        clients: 0
                        suppliers: 0
                        products: 0
                        documents: 0
                      functions:
                        example_function: true
    CreateClientResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/CreateClientResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  code: '123'
                  name: Rossi S.r.l.
                  type: null
                  first_name: string
                  last_name: string
                  contact_person: string
                  vat_number: IT01234567890
                  tax_code: RSSMRA44A12E890Q
                  address_street: 'Via dei tigli, 12'
                  address_postal_code: '24010'
                  address_city: Bergamo
                  address_province: BG
                  address_extra: string
                  country: Italia
                  email: mario.rossi@example.it
                  certified_email: mario.rossi@pec.example.it
                  phone: string
                  fax: string
                  notes: string
                  default_vat:
                    id: 0
                    value: 22
                    description: Non imponibile art. 123
                    notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                    e_invoice: string
                    ei_type: 2
                    ei_description: string
                    editable: true
                  default_payment_terms: 30
                  default_payment_terms_type: standard
                  default_payment_method:
                    id: 0
                    name: string
                    type: standard
                    default_payment_account:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    details:
                      - title: string
                        description: string
                  bank_name: string
                  bank_iban: string
                  bank_swift_code: string
                  shipping_address: string
                  e_invoice: false
                  ei_code: string
    ListCompaniesResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListClientsResponse.yaml
          examples:
            example-1:
              value:
                current_page: 1
                first_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                from: 1
                last_page: 1
                last_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                next_page_url: null
                path: 'http://api-v2.fattureincloud.it/c/11111/path'
                per_page: 50
                prev_page_url: null
                to: 1
                total: 1
                data:
                  - id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
                    default_vat:
                      id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
                    default_payment_terms: 30
                    default_payment_terms_type: standard
                    default_payment_method:
                      id: 0
                      name: string
                      type: standard
                      default_payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      details:
                        - title: string
                          description: string
                    bank_name: string
                    bank_iban: string
                    bank_swift_code: string
                    shipping_address: string
                    e_invoice: false
                    ei_code: string
    ListSuppliersResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListSuppliersResponse.yaml
          examples:
            example-1: {}
    CreateSupplierResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/CreateSupplierResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  code: '123'
                  name: Rossi S.r.l.
                  type: null
                  first_name: string
                  last_name: string
                  contact_person: string
                  vat_number: IT01234567890
                  tax_code: RSSMRA44A12E890Q
                  address_street: 'Via dei tigli, 12'
                  address_postal_code: '24010'
                  address_city: Bergamo
                  address_province: BG
                  address_extra: string
                  country: Italia
                  email: mario.rossi@example.it
                  certified_email: mario.rossi@pec.example.it
                  phone: string
                  fax: string
                  notes: string
    GetClientResponse:
      description: Client Details.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetClientResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  code: '123'
                  name: Rossi S.r.l.
                  type: null
                  first_name: string
                  last_name: string
                  contact_person: string
                  vat_number: IT01234567890
                  tax_code: RSSMRA44A12E890Q
                  address_street: 'Via dei tigli, 12'
                  address_postal_code: '24010'
                  address_city: Bergamo
                  address_province: BG
                  address_extra: string
                  country: Italia
                  email: mario.rossi@example.it
                  certified_email: mario.rossi@pec.example.it
                  phone: string
                  fax: string
                  notes: string
                  default_vat:
                    id: 0
                    value: 22
                    description: Non imponibile art. 123
                    notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                    e_invoice: string
                    ei_type: 2
                    ei_description: string
                    editable: true
                  default_payment_terms: 30
                  default_payment_terms_type: standard
                  default_payment_method:
                    id: 0
                    name: string
                    type: standard
                    default_payment_account:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    details:
                      - title: string
                        description: string
                  bank_name: string
                  bank_iban: string
                  bank_swift_code: string
                  shipping_address: string
                  e_invoice: false
                  ei_code: string
    ModifyClientResponse:
      description: Client modified.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ModifyClientResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  code: '123'
                  name: Rossi S.r.l.
                  type: null
                  first_name: string
                  last_name: string
                  contact_person: string
                  vat_number: IT01234567890
                  tax_code: RSSMRA44A12E890Q
                  address_street: 'Via dei tigli, 12'
                  address_postal_code: '24010'
                  address_city: Bergamo
                  address_province: BG
                  address_extra: string
                  country: Italia
                  email: mario.rossi@example.it
                  certified_email: mario.rossi@pec.example.it
                  phone: string
                  fax: string
                  notes: string
                  default_vat:
                    id: 0
                    value: 22
                    description: Non imponibile art. 123
                    notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                    e_invoice: string
                    ei_type: 2
                    ei_description: string
                    editable: true
                  default_payment_terms: 30
                  default_payment_terms_type: standard
                  default_payment_method:
                    id: 0
                    name: string
                    type: standard
                    default_payment_account:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    details:
                      - title: string
                        description: string
                  bank_name: string
                  bank_iban: string
                  bank_swift_code: string
                  shipping_address: string
                  e_invoice: false
                  ei_code: string
    GetSupplierResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetSupplierResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  code: '123'
                  name: Rossi S.r.l.
                  type: null
                  first_name: string
                  last_name: string
                  contact_person: string
                  vat_number: IT01234567890
                  tax_code: RSSMRA44A12E890Q
                  address_street: 'Via dei tigli, 12'
                  address_postal_code: '24010'
                  address_city: Bergamo
                  address_province: BG
                  address_extra: string
                  country: Italia
                  email: mario.rossi@example.it
                  certified_email: mario.rossi@pec.example.it
                  phone: string
                  fax: string
                  notes: string
    ModifySupplierResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/ModifySupplierResponse.yaml
    ListProductsResponse:
      description: Products List.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListProductsResponse.yaml
          examples:
            example-1:
              value:
                current_page: 1
                first_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                from: 1
                last_page: 1
                last_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                next_page_url: null
                path: 'http://api-v2.fattureincloud.it/c/11111/path'
                per_page: 50
                prev_page_url: null
                to: 1
                total: 1
                data:
                  - id: 0
                    name: string
                    code: string
                    net_price: 0
                    gross_price: 0
                    use_gross_price: true
                    default_vat:
                      id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
                    net_cost: 0
                    measure: string
                    description: string
                    category: string
                    notes: string
                    in_stock: true
                    stock_initial: 0
                    stock_current: 0
    CreateProductResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/CreateProductResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  name: string
                  code: string
                  net_price: 0
                  gross_price: 0
                  use_gross_price: true
                  default_vat:
                    id: 0
                    value: 22
                    description: Non imponibile art. 123
                    notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                    e_invoice: string
                    ei_type: 2
                    ei_description: string
                    editable: true
                  net_cost: 0
                  measure: string
                  description: string
                  category: string
                  notes: string
                  in_stock: true
                  stock_initial: 0
                  stock_current: 0
    GetProductResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetProductResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  name: string
                  code: string
                  net_price: 0
                  gross_price: 0
                  use_gross_price: true
                  default_vat:
                    id: 0
                    value: 22
                    description: Non imponibile art. 123
                    notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                    e_invoice: string
                    ei_type: 2
                    ei_description: string
                    editable: true
                  net_cost: 0
                  measure: string
                  description: string
                  category: string
                  notes: string
                  in_stock: true
                  stock_initial: 0
                  stock_current: 0
    ModifyProductResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/ModifyProductResponse.yaml
    ListIssuedDocumentsResponse:
      description: Results list.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListIssuedDocumentsResponse.yaml
    CreateIssuedDocumentResponse:
      description: Document created.
      content:
        application/json:
          schema:
            $ref: ./models/responses/CreateIssuedDocumentResponse.yaml
    GetIssuedDocumentResponse:
      description: Document Details.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetIssuedDocumentResponse.yaml
    ModifyIssuedDocumentResponse:
      description: Document edited
      content:
        application/json:
          schema:
            $ref: ./models/responses/ModifyIssuedDocumentResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  entity:
                    id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
                    default_vat:
                      id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
                    default_payment_terms: 30
                    default_payment_terms_type: standard
                    default_payment_method:
                      id: 0
                      name: string
                      type: standard
                      default_payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      details:
                        - title: string
                          description: string
                    bank_name: string
                    bank_iban: string
                    bank_swift_code: string
                    shipping_address: string
                    e_invoice: false
                    ei_code: string
                  type: invoice
                  number: 1
                  numeration: /A
                  date: '2019-08-24'
                  currency:
                    id: EUR
                    symbol: €
                    exchange_rate: 1
                  language:
                    code: string
                    name: string
                  subject: string
                  visible_subject: string
                  rc_center: string
                  notes: string
                  rivalsa: 0
                  cassa: 0
                  withholding_tax: 0
                  withholding_tax_taxable: 0
                  other_withholding_tax: 0
                  stamp_duty: 0
                  payment_method:
                    id: 0
                    name: string
                    type: standard
                    default_payment_account:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    details:
                      - title: string
                        description: string
                  use_split_payment: false
                  use_gross_prices: false
                  e_invoice: false
                  ei_data:
                    vat_kind: null
                    original_document_type: ordine
                    od_number: string
                    od_date: '2019-08-24'
                    cig: string
                    cup: string
                    payment_method: string
                    bank_name: string
                    bank_iban: string
                    bank_beneficiary: string
                  items_list:
                    - product_id: 1234
                      code: '239874892374982'
                      name: Water bottle
                      description: string
                      qty: 0
                      measure: string
                      net_price: 1.23
                      gross_price: 1.45
                      vat:
                        id: 0
                        value: 22
                        description: Non imponibile art. 123
                        notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                        e_invoice: string
                        ei_type: 2
                        ei_description: string
                        editable: true
                      not_taxable: false
                      apply_withholding_taxes: true
                      discount: 0
                      discount_highlight: false
                      in_ddt: true
                      stock: true
                      ei_raw: {}
                  payments_list:
                    - due_date: '2018-04-03'
                      amount: 1.45
                      status: not_paid
                      payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      paid_date: '2018-04-03'
                      ei_raw: {}
                  template: |-
                    {
                        "code": "it",
                        "name": "Italiano"
                    }
                  delivery_note_template: |-
                    {
                        "code": "it",
                        "name": "Italiano"
                    }
                  acc_inv_template: |-
                    {
                        "code": "it",
                        "name": "Italiano"
                    }
                  h_margins: 0
                  show_payments: true
                  show_payment_method: true
                  show_totals: all
                  v_margins: 0
                  show_paypal_button: false
                  show_notification_button: false
                  delivery_note: false
                  accompanying_invoice: false
                  dn_number: 0
                  dn_date: '2019-08-24'
                  dn_ai_packages_number: string
                  dn_ai_weight: string
                  dn_ai_causal: string
                  dn_ai_destination: string
                  dn_ai_transporter: string
                  dn_ai_notes: string
                  refers_to:
                    id: 0
                    date: '2019-08-24'
                    number: 0
                    numeration: string
                    description: string
                  is_marked: true
                  amount_net: 0
                  amount_vat: 0
                  amount_gross: 0
                  amount_rivalsa: 0
                  amount_cassa: 0
                  amount_withholding_tax: 0
                  amount_other_withholding_tax: 0
                  extra_data:
                    ts_communication: true
                    ts_flag_tipo_spesa: 0
                    ts_pagamento_tracciato: true
                    ts_tipo_spesa: string
                  seen_date: '2019-08-24'
                  next_due_date: '2019-08-24'
                  url: string
                  attachment_url: string
                  attachment_token: string
                  ei_raw: {}
    GetNewIssuedDocumentTotalsResponse:
      description: Totals.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetNewIssuedDocumentTotalsResponse.yaml
          examples:
            example-1:
              value:
                data: |-
                  {
                      "amount_net": 30,
                      "amount_rivalsa": 1.5,
                      "amount_net_with_rivalsa": 31.5,
                      "amount_cassa": 1.58,
                      "taxable_amount": 33.08,
                      "not_taxable_amount": 0.00,
                      "vat_list": {
                        "10": {
                          "net": 10,
                          "vat": 1
                        },
                        "20": {
                          "net": 23.08,
                          "vat": 4.62
                        }
                      },
                      "amount_vat": 5.62,
                      "amount_gross": 36.41,
                      "taxable_amount_withholding_tax": 15.75,
                      "amount_withholding_tax": 0.79,
                      "taxable_amount_other_withholding_tax": 30,
                      "amount_other_withholding_tax": 1.5,
                      "amount_due": 36.41,
                      "is_enasarco_maximal_exceeded": false,
                      "payments_sum": 36.41
                    }
    GetExistingIssuedDocumentTotalsResponse:
      description: Totals.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetExistingIssuedDocumentTotalsResponse.yaml
          examples:
            example-1:
              value:
                data: |-
                  {
                      "amount_net": 30,
                      "amount_rivalsa": 1.5,
                      "amount_net_with_rivalsa": 31.5,
                      "amount_cassa": 1.58,
                      "taxable_amount": 33.08,
                      "not_taxable_amount": 0.00,
                      "vat_list": {
                        "10": {
                          "net": 10,
                          "vat": 1
                        },
                        "20": {
                          "net": 23.08,
                          "vat": 4.62
                        }
                      },
                      "amount_vat": 5.62,
                      "amount_gross": 36.41,
                      "taxable_amount_withholding_tax": 15.75,
                      "amount_withholding_tax": 0.79,
                      "taxable_amount_other_withholding_tax": 30,
                      "amount_other_withholding_tax": 1.5,
                      "amount_due": 36.41,
                      "is_enasarco_maximal_exceeded": false,
                      "payments_sum": 36.41
                    }
security:
  - OAuth2AuthenticationCodeFlow: []

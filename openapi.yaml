openapi: 3.0.0
info:
  title: Fatture in Cloud API v2 - API Reference
  description: "## Request informations\nIn every request description you will be able to find some additional informations about context, permissions and supported functionality:\n\n| Parameter | Description |\n|-----------|-------------|\n| \U0001F465 Context | Indicate the subject of the request. Can be `company`, `user` or `accountant`.  |\n| \U0001F512 Required scope | If present, indicates the required scope to fulfill the request. |\n| \U0001F50D Filtering | If present, indicates which fields support the filtering feature. |\n| ↕️ Sorting | If present, indicates which fields support the sorting feature. |\n| \U0001F4C4 Paginated results | If present, indicate that the results are paginated. |\n| \U0001F3A9 Customized responses supported | If present, indicate that you can use `field` or `fieldset` to customize the response body. |\n\nFor example the request `GET /entities/{entityRole}` have tis informations: \\\n\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:r` or `entity.suppliers:r` (depending on `entityRole`) \\\n\U0001F50D Filtering: `id`, `name` \\\n↕️ Sorting: `id`, `name` \\\n\U0001F4C4 Paginated results \\\n\U0001F3A9 Customized responses supported\n\nKeep in mind that if you are making **company realted requests**, you will need to specify the company id in the requests:\n```\nGET /c/{company_id}/issued_documents\n```"
  contact:
    name: Fatture in Cloud
    url: 'https://www.fattureincloud.it'
    email: info@fattureincloud.it
  license:
    name: ''
    url: 'https://www.fattureincloud.it'
  version: v1.0.1
servers:
  - url: 'https://api-v2.fattureincloud.it'
tags:
  - name: Archive
  - name: Cashbook
  - name: Clients
  - name: Companies
  - name: Info
  - name: Issued Documents
  - name: Issued e-invoices
  - name: Products
  - name: Receipts
  - name: Received Documents
  - name: Suppliers
  - name: Taxes
  - name: User
paths:
  /user/info:
    get:
      tags:
        - User
      summary: Get user info
      responses:
        '200':
          $ref: '#/components/responses/UserInfoResponse'
        '401':
          description: Unauthorized.
      operationId: userInfo
      description: "Makes possible to retrieve the current user's info.\n\n\U0001F464 Person context\n\nGet user email, name and id."
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters: []
  /user/companies:
    get:
      summary: userCompanies
      tags:
        - User
      responses:
        '200':
          $ref: '#/components/responses/UserCompaniesResponse'
        '401':
          description: Unauthorized
      operationId: userCompanies
      description: "\U0001F464 Person context\n\nGet a list of the controlled companies and their CompanyAuthentication tokens."
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters: []
  '/c/{company_id}/company/info':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: Get Company Info
      responses:
        '200':
          $ref: '#/components/responses/CompanyInfoResponse'
        '401':
          description: Unauthorized.
      operationId: getCompanyInfo
      description: 'Get company info like email, license expire date and access info for each document and section'
      security:
        - OAuth2AuthenticationCodeFlow: []
      tags:
        - Companies
  '/c/{company_id}/entities/clients':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Clients
      tags:
        - Clients
      responses:
        '200':
          $ref: '#/components/responses/ListCompaniesResponse'
        '401':
          description: Unauthorized
      operationId: listClients
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.clients:r\n\U0001F50D Filtering: id, code, name, type, vat_number, tax_code, address_street, address_postal_code, address_city, address_province, country, email, certified_email, phone, fax, notes, imported, atoka_show, e_invoice, ei_code, created_at, updated_at\n↕️ Sorting: code, name, type, vat_number, tax_code, address_street, address_postal_code, address_city, address_province, country, email, certified_email, phone, fax, notes, e_invoice, ei_code, created_at, updated_at\n\U0001F4C4 Paginated results\n\U0001F3A9 Customized responses supported\n\nGet a list of clients that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.clients:r'
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/by_id'
        - $ref: '#/components/parameters/PerPage'
    post:
      summary: Create Client
      operationId: createClient
      responses:
        '200':
          $ref: '#/components/responses/CreateClientResponse'
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:a`\n\nCreate a new client."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.clients:a'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/CreateClientRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
                    default_vat:
                      id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
                    default_payment_terms: 30
                    default_payment_terms_type: standard
                    default_payment_method:
                      id: 0
                      name: string
                      type: standard
                      default_payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      details:
                        - title: string
                          description: string
                    bank_name: string
                    bank_iban: string
                    bank_swift_code: string
                    shipping_address: string
                    e_invoice: false
                    ei_code: string
        description: The client to create
      tags:
        - Clients
  '/c/{company_id}/entities/suppliers':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Suppliers
      responses:
        '200':
          $ref: '#/components/responses/ListSuppliersResponse'
        '401':
          description: Unauthorized
      operationId: listSuppliers
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.suppliers:r\n\U0001F50D Filtering: id, code, name, type, vat_number, tax_code, address_street, address_postal_code, address_city, address_province, country, email, certified_email, phone, fax, notes, imported, atoka_show, created_at, updated_at\n↕️ Sorting: code, name, type, vat_number, tax_code, address_street, address_postal_code, address_city, address_province, country, email, certified_email, phone, fax, notes, created_at, updated_at\n\U0001F4C4 Paginated results\n\U0001F3A9 Customized responses supported\n\nGet a list of suppliers that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.suppliers:r'
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/by_id'
        - $ref: '#/components/parameters/PerPage'
      tags:
        - Suppliers
    post:
      summary: Create Supplier
      operationId: createSupplier
      responses:
        '200':
          $ref: '#/components/responses/CreateSupplierResponse'
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.suppliers:a`\n\nCreate a new supplier."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.suppliers:a'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/CreateSupplierRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
        description: The supplier to create
      tags:
        - Suppliers
  '/c/{company_id}/entities/clients/{client_id}':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/client_id'
    get:
      summary: Get Client
      tags:
        - Clients
      responses:
        '200':
          $ref: '#/components/responses/GetClientResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getClient
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.clients:r'
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.clients:r\n\U0001F3A9 Customized responses supported\n\nGet details of an existing client by its unique id."
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
    put:
      summary: Modify Client
      operationId: modifyClient
      responses:
        '200':
          $ref: '#/components/responses/ModifyClientResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.clients:a\n\nEdit an existing client by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.clients:a'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ModifyClientRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
                    default_vat:
                      id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
                    default_payment_terms: 30
                    default_payment_terms_type: standard
                    default_payment_method:
                      id: 0
                      name: string
                      type: standard
                      default_payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      details:
                        - title: string
                          description: string
                    bank_name: string
                    bank_iban: string
                    bank_swift_code: string
                    shipping_address: string
                    e_invoice: false
                    ei_code: string
        description: The modified Client. First level parameters are managed in delta mode.
      tags:
        - Clients
    delete:
      summary: Delete Client
      operationId: deleteClient
      responses:
        '200':
          description: Entity Removed
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.clients:a\n\nDelete an existing client by its unique id."
      parameters: []
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.clients:a'
      tags:
        - Clients
  '/c/{company_id}/entities/suppliers/{supplier_id}':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/supplier_id'
    get:
      summary: Get Supplier
      responses:
        '200':
          $ref: '#/components/responses/GetSupplierResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getSupplier
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.suppliers:r'
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.suppliers:r\n\U0001F3A9 Customized responses supported\n\nGet details of an existing supplier by its unique id."
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
      tags:
        - Suppliers
    put:
      summary: Modify Supplier
      operationId: modifySupplier
      responses:
        '200':
          $ref: '#/components/responses/ModifySupplierResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.suppliers:a\n\nEdit an existing supplier by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.suppliers:a'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ModifySupplierRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
        description: The modified Supplier. First level parameters are managed in delta mode.
      tags:
        - Suppliers
    delete:
      summary: Delete Supplier
      operationId: deleteSupplier
      responses:
        '200':
          description: Entity Removed
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.suppliers:a\n\nDelete an existing supplier by its unique id."
      parameters: []
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.suppliers:a'
      tags:
        - Suppliers
  '/c/{company_id}/products':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Products
      tags:
        - Products
      responses:
        '200':
          $ref: '#/components/responses/ListProductsResponse'
        '401':
          description: Unauthorized
      operationId: listProducts
      description: "\U0001F465 Company context\n\U0001F512 Required scope: products:r\n\U0001F50D Filtering: id, name, code, net_price, gross_price, net_cost, description, category, notes, in_stock, created_at, updated_at\n↕️ Sorting: name, code, net_price, gross_price, net_cost, description, category, notes, in_stock, created_at, updated_at\n\U0001F4C4 Paginated results\n\U0001F3A9 Customized responses supported\n\nGet a list of products that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'products:r'
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/by_id'
        - $ref: '#/components/parameters/PerPage'
    post:
      summary: ''
      operationId: createProduct
      responses:
        '200':
          $ref: '#/components/responses/CreateProductResponse'
      tags:
        - Products
      description: "\U0001F465 Company context\n\U0001F512 Required scope: products:a\n\nCreate a new product."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'products:a'
      parameters: []
  '/c/{company_id}/products/{product_id}':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/product_id'
    get:
      summary: Get Product
      tags:
        - Products
      responses:
        '200':
          $ref: '#/components/responses/GetProductResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getProduct
      description: "\U0001F465 Company context\n\U0001F512 Required scope: products:r\n\U0001F3A9 Customized responses supported\n\nGet product details"
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'products:r'
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
    put:
      summary: Modify Product
      operationId: modifyProduct
      responses:
        '200':
          $ref: '#/components/responses/ModifyProductResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: products:a\n\nEdit an existing product by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'products:a'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ModifyProductRequest.yaml
        description: Modified product details.
      tags:
        - Products
    delete:
      summary: ''
      operationId: deleteProduct
      responses:
        '200':
          description: Product removed.
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: Delete Product
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'products:a'
      parameters: []
      tags:
        - Products
  '/c/{company_id}/issued_documents':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Issued Documents
      tags:
        - Issued Documents
      responses:
        '200':
          $ref: '#/components/responses/ListIssuedDocumentsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: listIssuedDocuments
      description: "\U0001F465 Company context\n\U0001F512 Required scope: issued_documents.[documentType]:r\n\U0001F50D Filtering: type, entity.id, entity.name, entity.vat_number, entity.tax_code, entity.city, entity.province, entity.country, date, number, numeration, any_subject, amount_net, amount_vat, amount_gross, next_due_date, created_at, updated_at\n↕️ Sorting: entity.id, entity.name, entity.vat_number, entity.tax_code, entity.city, entity.province, entity.country, date, number, numeration, amount_net, amount_vat, amount_gross, next_due_date, created_at, updated_at\n\U0001F4C4 Paginated results\n\U0001F3A9 Customized responses supported\n\nGet a list of documents that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'issued_documents.invoice:r'
            - 'issued_documents.credit_note:r'
            - 'issued_documents.receipt:r'
            - 'issued_documents.order:r'
            - 'issued_documents.quote:r'
            - 'issued_documents.proforma:r'
            - 'issued_documents.delivery_note:r'
      parameters:
        - $ref: '#/components/parameters/issued_document_type'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/by_id'
        - $ref: '#/components/parameters/PerPage'
    post:
      summary: Create Issued Document
      operationId: createIssuedDocument
      responses:
        '200':
          $ref: '#/components/responses/CreateIssuedDocumentResponse'
        '401':
          description: Unauthorized
      tags:
        - Issued Documents
      description: "\U0001F465 Company context\n\U0001F512 Required scope: issued_documents.[documentType]:a\n\nCreate a new document."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'issued_documents.invoice:a'
            - 'issued_documents.credit_note:a'
            - 'issued_documents.receipt:a'
            - 'issued_documents.order:a'
            - 'issued_documents.quote:a'
            - 'issued_documents.proforma:a'
            - 'issued_documents.delivery_note:a'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/CreateIssuedDocumentRequest.yaml
        description: The Issued Document
  '/c/{company_id}/issued_documents/{document_id}':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    get:
      summary: Get Issued Document
      tags:
        - Issued Documents
      responses:
        '200':
          $ref: '#/components/responses/GetIssuedDocumentResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getIssuedDocument
      description: "\U0001F465 Company context\n\U0001F512 Required scope: issued_documents.[documentType]:r\n\U0001F3A9 Customized responses supported\n\nGet details of an existing document by its unique id.\n\n"
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'issued_documents.invoice:r'
            - 'issued_documents.credit_note:r'
            - 'issued_documents.receipt:r'
            - 'issued_documents.order:r'
            - 'issued_documents.quote:r'
            - 'issued_documents.proforma:r'
            - 'issued_documents.delivery_note:r'
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
    put:
      summary: Modify Issued Document
      operationId: modifyIssuedDocument
      responses:
        '200':
          $ref: '#/components/responses/ModifyIssuedDocumentResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: issued_documents.[documentType]:a\n\nEdit an existing document by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'issued_documents.invoice:a'
            - 'issued_documents.credit_note:a'
            - 'issued_documents.receipt:a'
            - 'issued_documents.order:a'
            - 'issued_documents.quote:a'
            - 'issued_documents.proforma:a'
            - 'issued_documents.delivery_note:a'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ModifyIssuedDocumentRequest.yaml
        description: The modified document
      tags:
        - Issued Documents
    delete:
      summary: Delete Issued Document
      operationId: deleteIssuedDocument
      responses:
        '200':
          description: Document removed
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: issued_documents.[documentType]:a\n\nDelete an existing document by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'issued_documents.invoice:a'
            - 'issued_documents.credit_note:a'
            - 'issued_documents.receipt:a'
            - 'issued_documents.order:a'
            - 'issued_documents.quote:a'
            - 'issued_documents.proforma:a'
            - 'issued_documents.delivery_note:a'
      parameters: []
      tags:
        - Issued Documents
  '/c/{company_id}/issued_documents/totals':
    parameters:
      - $ref: '#/components/parameters/company_id'
    post:
      summary: Get New Issued Document Totals
      operationId: getNewIssuedDocumentTotals
      responses:
        '200':
          $ref: '#/components/responses/GetNewIssuedDocumentTotalsResponse'
        '401':
          description: Unauthorized
      description: "\U0001F465 Company context\n\nGet the totals of a document"
      tags:
        - Issued Documents
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/GetNewIssuedDocumentTotalsRequest.yaml
  '/c/{company_id}/issued_documents/{document_id}/totals':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    post:
      summary: Get Existing Issued Document Totals
      operationId: getExistingIssuedDocumentTotals
      responses:
        '200':
          $ref: '#/components/responses/GetExistingIssuedDocumentTotalsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - Issued Documents
      description: "\U0001F465 Company context\n\nGet existing document totals"
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/GetExistingIssuedDocumentTotalsRequest.yaml
  '/c/{company_id}/issued_documents/attachment':
    parameters:
      - $ref: '#/components/parameters/company_id'
    post:
      summary: Upload Issued Document Attachment
      operationId: uploadIssuedDocumentAttachment
      responses:
        '200':
          $ref: '#/components/responses/UploadIssuedDocumentAttachmentResponse'
        '401':
          description: Unauthorized
      tags:
        - Issued Documents
      description: "\U0001F465 Company context\n\nUpload an attachment to an issued document"
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: ./models/requests/UploadIssuedDocumentAttachmentRequest.yaml
            examples: {}
        description: Attachment.
  '/c/{company_id}/issued_documents/info':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: Get Issued Document Pre-create info
      tags:
        - Issued Documents
      responses:
        '200':
          $ref: '#/components/responses/GetIssuedDocumentPreCreateInfoResponse'
      operationId: getIssuedDocumentPreCreateInfo
      description: "\U0001F465 Company context\n\nGet the info needed for the document creation flow."
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/issued_document_type'
  '/c/{company_id}/issued_documents/{document_id}/attachment':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    delete:
      summary: Delete Issued Document Attachment
      operationId: deleteIssuedDocumentAttachment
      responses:
        '200':
          description: File removed.
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\nRemove the attachment (but not the document)"
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters: []
      tags:
        - Issued Documents
  '/c/{company_id}/issued_documents/{document_id}/email':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    get:
      summary: Get Email Data
      tags:
        - Issued Documents
      responses:
        '200':
          $ref: '#/components/responses/GetEmailDataResponse'
      operationId: getEmailData
      description: "\U0001F465 Company context\n\U0001F512 Required scope: issued_documents.[documentType]:r\n\nGet pre-compiled email data like subject, body, attachments, SMTP credentials, CC, recipients list."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'issued_documents.invoice:r'
            - 'issued_documents.credit_note:r'
            - 'issued_documents.receipt:r'
            - 'issued_documents.order:r'
            - 'issued_documents.quote:r'
            - 'issued_documents.proforma:r'
            - 'issued_documents.delivery_note:r'
      parameters: []
    post:
      summary: Schedule Email
      operationId: scheduleEmail
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: issued_documents.[documentType]:r\n\nSchedule email sending of a document."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'issued_documents.invoice:r'
            - 'issued_documents.credit_note:r'
            - 'issued_documents.receipt:r'
            - 'issued_documents.order:r'
            - 'issued_documents.quote:r'
            - 'issued_documents.proforma:r'
            - 'issued_documents.delivery_note:r'
      tags:
        - Issued Documents
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ScheduleEmailRequest.yaml
        description: Email Schedule
  '/c/{company_id}/issued_documents/{document_id}/e_invoice/send':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    post:
      summary: Send the e-invoice
      operationId: sendEInvoice
      responses:
        '200':
          $ref: '#/components/responses/SendEInvoiceResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\nSend the e-invoice to SDI"
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/SendEInvoiceRequest.yaml
        description: ''
      tags:
        - Issued e-invoices
  '/c/{company_id}/issued_documents/{document_id}/e_invoice/xml_verify':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    get:
      summary: Verify e-invoice xml
      tags:
        - Issued e-invoices
      responses:
        '200':
          $ref: '#/components/responses/VerifyEInvoiceXmlResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '422':
          $ref: '#/components/responses/VerifyEInvoiceXmlErrorResponse'
      operationId: verifyEInvoiceXml
      description: "\U0001F465 Company context\n\nVerify e-invoice xml format. Check if all mandatory fields are filled and if all fields are in right format."
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters: []
  '/c/{company_id}/received_documents':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Received Documents
      tags:
        - Received Documents
      responses:
        '200':
          $ref: '#/components/responses/ListReceivedDocumentsResponse'
        '401':
          description: Unauthorized
      operationId: listReceivedDocuments
      description: "\U0001F465 Company context\n\U0001F512 Required scope: received_documents:r (but if the document is a passive_delivery_note you’ll need stock:r scope)\n\U0001F50D Filtering: id, type, category, description, entity.id, entity.name, date, next_due_date, amount_gross, amount_net, amount_vat, invoice_number, created_at, updated_at\n↕️ Sorting: id, category, entity.id, entity.name, date, next_due_date, amount_gross, amount_net, amount_vat, created_at, updated_at\n\U0001F4C4 Paginated results\n\U0001F3A9 Customized responses supported (available fieldsets: basic, detailed, fic_list, fic_view) \\\n\nGet a list of documents that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'received_documents:r'
            - 'stock:r'
      parameters:
        - $ref: '#/components/parameters/received_document_type'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/by_id'
        - $ref: '#/components/parameters/PerPage'
    post:
      summary: Create Received Document
      operationId: createReceivedDocument
      responses:
        '200':
          $ref: '#/components/responses/CreateReceivedDocumentResponse'
      description: "\U0001F465 Company context\n\U0001F512 Required scope: received_documents:a (but if the document is a passive_delivery_note you’ll need stock:a scope)\n\nCreate a new received document."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'received_documents:a'
            - 'stock:a'
      tags:
        - Received Documents
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/CreateReceivedDocumentRequest.yaml
            examples:
              example-1:
                value:
                  pending_id: 0
                  data:
                    id: 0
                    type: expense
                    entity:
                      id: 0
                      name: string
                    date: string
                    category: string
                    description: string
                    amount_net: 0
                    amount_vat: 0
                    amount_withholding_tax: 0
                    amount_other_withholding_tax: 0
                    amount_gross: 0
                    amortization: 0
                    rc_center: string
                    invoice_number: string
                    is_marked: true
                    is_detailed: true
                    e_invoice: true
                    next_due_date: '2019-08-24'
                    currency:
                      id: EUR
                      symbol: €
                      exchange_rate: 1
                    tax_deductibility: 0
                    vat_deductibility: 0
                    items_list:
                      - id: 0
                        product_id: 0
                        code: string
                        name: string
                        measure: string
                        net_price: 0
                        category: string
                        qty: 0
                        vat:
                          id: 0
                          value: 22
                          description: Non imponibile art. 123
                          notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                          e_invoice: string
                          ei_type: 2
                          ei_description: string
                          editable: true
                        stock: 0
                    payments_list:
                      - id: 0
                        amount: 0
                        due_date: string
                        paid_date: string
                        payment_terms:
                          days: 0
                          type: string
                        status: string
                        payment_account:
                          id: 0
                          name: Conto Banca di Paperopoli
                          type: standard
                          iban: string
                          sia: string
                          cuc: string
                    attachment_url: string
                    attachment_preview_url: string
        description: Document to create
  '/c/{company_id}/received_documents/{document_id}':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    get:
      summary: Get Received Document
      tags:
        - Received Documents
      responses:
        '200':
          $ref: '#/components/responses/GetReceivedDocumentResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getReceivedDocument
      description: "\U0001F465 Company context\n\U0001F512 Required scope: received_documents:r (but if the document is a passive_delivery_note you’ll need stock:r scope)\n\U0001F3A9 Customized responses supported\n\nGet details of an existing document by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'received_documents:r'
            - 'stock:r'
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
    put:
      summary: Modify Received Document
      operationId: modifyReceivedDocument
      responses:
        '200':
          $ref: '#/components/responses/ModifyReceivedDocumentResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - Received Documents
      description: "\U0001F465 Company context\n\U0001F512 Required scope: received_documents:a (but if the document is a passive_delivery_note you’ll need stock:a scope)\n\nEdit an existing document by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'received_documents:a'
            - 'stock:a'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ModifyReceivedDocumentRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: 135297
                    type: expense
                    category: Cibo
                    description: Biscotti da mangiare in ufficio
                    amount_net: 40
                    amount_vat: 8.8
                    amount_withholding_tax: 0
                    amount_other_withholding_tax: 0
                    amortization: 2
                    rc_center: Ufficio
                    invoice_number: '123'
                    is_marked: false
                    is_detailed: true
                    e_invoice: false
                    entity:
                      id: 54
                      name: Google Commerce Ltd
                    date: '2018-10-08'
                    next_due_date: null
                    currency:
                      id: EUR
                      exchange_rate: '1.00000'
                      symbol: \u20ac
                    amount_gross: 48.8
                    tax_deductibility: 100
                    vat_deductibility: 100
                    items_list:
                      - product_id: 3
                        code: BIS001
                        name: Biscotti al cioccolato
                        measure: kg
                        net_price: 40
                        category: Alimentari
                        id: 306
                        qty: 1
                        vat:
                          id: 0
                          value: 22
                          description: ''
                        stock: 1
                    payments_list:
                      - amount: 48.8
                        due_date: '2018-10-22'
                        paid_date: '2018-10-10'
                        id: 211536
                        payment_terms:
                          days: 14
                          type: standard
                        status: paid
                        payment_account:
                          id: 287
                          name: Bonifico_Bancario
                    attachment_url: 'https:\/\/s3.eu-west-1.amazonaws.com\/fattureincloud\/development\/userdata\/expenses\/2\/8b3fa0b871d54acd5cef62d80e6d228c.pdf'
                    attachment_preview_url: 'https:\/\/s3.eu-west-1.amazonaws.com\/fattureincloud\/development\/userdata\/expenses\/2\/8b3fa0b871d54acd5cef62d80e6d228c_thumb.jpg'
        description: Modified document.
    delete:
      summary: ''
      operationId: deleteReceivedDocument
      responses:
        '200':
          description: Document removed.
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - Received Documents
      description: "\U0001F465 Company context\n\U0001F512 Required scope: received_documents:a (but if the document is a passive_delivery_note you’ll need stock:a scope)\n\nDelete an existing document by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'received_documents:a'
            - 'stock:a'
      parameters: []
  '/c/{company_id}/received_documents/totals':
    parameters:
      - $ref: '#/components/parameters/company_id'
    post:
      summary: Get New Received Document Totals
      operationId: getNewReceivedDocumentTotals
      responses:
        '200':
          $ref: '#/components/responses/GetNewReceivedDocumentTotalsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: received_documents:a (but if the document is a passive_delivery_note you’ll need stock:a scope)\n\nCalculate totals of the received document passed in the body."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'received_documents:a'
            - 'stock:a'
      tags:
        - Received Documents
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/GetNewReceivedDocumentTotalsRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: 0
                    type: expense
                    entity:
                      id: 0
                      name: string
                    date: string
                    category: string
                    description: string
                    amount_net: 0
                    amount_vat: 0
                    amount_withholding_tax: 0
                    amount_other_withholding_tax: 0
                    amount_gross: 0
                    amortization: 0
                    rc_center: string
                    invoice_number: string
                    is_marked: true
                    is_detailed: true
                    e_invoice: true
                    next_due_date: '2019-08-24'
                    currency:
                      id: EUR
                      symbol: €
                      exchange_rate: 1
                    tax_deductibility: 0
                    vat_deductibility: 0
                    items_list:
                      - id: 0
                        product_id: 0
                        code: string
                        name: string
                        measure: string
                        net_price: 0
                        category: string
                        qty: 0
                        vat:
                          id: 0
                          value: 22
                          description: Non imponibile art. 123
                          notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                          e_invoice: string
                          ei_type: 2
                          ei_description: string
                          editable: true
                        stock: 0
                    payments_list:
                      - id: 0
                        amount: 0
                        due_date: string
                        paid_date: string
                        payment_terms:
                          days: 0
                          type: string
                        status: string
                        payment_account:
                          id: 0
                          name: Conto Banca di Paperopoli
                          type: standard
                          iban: string
                          sia: string
                          cuc: string
                    attachment_url: string
                    attachment_preview_url: string
        description: Received document.
  '/c/{company_id}/received_documents/{document_id}/totals':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    post:
      summary: Get Existing Received Document Totals
      operationId: getExistingReceivedDocumentTotals
      responses:
        '200':
          $ref: '#/components/responses/GetExistingReceivedDocumentTotalsResponse'
      tags:
        - Received Documents
      description: "\U0001F465 Company context\n\U0001F512 Required scope: received_documents:a (but if the document is a passive_delivery_note you’ll need stock:a scope)\n\nCalculate totals of the received document indicated by the id with the changes passed in the body."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'received_documents:a'
            - 'stock:a'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/GetExistingReceivedDocumentTotalsRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: 0
                    type: expense
                    entity:
                      id: 0
                      name: string
                    date: string
                    category: string
                    description: string
                    amount_net: 0
                    amount_vat: 0
                    amount_withholding_tax: 0
                    amount_other_withholding_tax: 0
                    amount_gross: 0
                    amortization: 0
                    rc_center: string
                    invoice_number: string
                    is_marked: true
                    is_detailed: true
                    e_invoice: true
                    next_due_date: '2019-08-24'
                    currency:
                      id: EUR
                      symbol: €
                      exchange_rate: 1
                    tax_deductibility: 0
                    vat_deductibility: 0
                    items_list:
                      - id: 0
                        product_id: 0
                        code: string
                        name: string
                        measure: string
                        net_price: 0
                        category: string
                        qty: 0
                        vat:
                          id: 0
                          value: 22
                          description: Non imponibile art. 123
                          notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                          e_invoice: string
                          ei_type: 2
                          ei_description: string
                          editable: true
                        stock: 0
                    payments_list:
                      - id: 0
                        amount: 0
                        due_date: string
                        paid_date: string
                        payment_terms:
                          days: 0
                          type: string
                        status: string
                        payment_account:
                          id: 0
                          name: Conto Banca di Paperopoli
                          type: standard
                          iban: string
                          sia: string
                          cuc: string
                    attachment_url: string
                    attachment_preview_url: string
        description: Received document.
  '/c/{company_id}/received_documents/attachment':
    parameters:
      - $ref: '#/components/parameters/company_id'
    post:
      summary: Upload Received Document Attachment
      operationId: uploadReceivedDocumentAttachment
      responses:
        '200':
          $ref: '#/components/responses/UploadReceivedDocumentAttachmentResponse'
        '401':
          description: Unauthorized
      tags:
        - Received Documents
      description: "\U0001F465 Company context\n\U0001F512 Required scope: received_documents:a (but if the document is a passive_delivery_note you’ll need stock:a scope)\n\nUpload an attachment and return the relative token."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'received_documents:a'
            - 'stock:a'
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: ./models/requests/UploadReceivedDocumentAttachmentRequest.yaml
        description: Attachment.
  '/c/{company_id}/received_documents/{document_id}/attachment':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    delete:
      summary: Delete Received Document Attachment
      operationId: deleteReceivedDocumentAttachment
      responses:
        '200':
          description: File removed
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - Received Documents
      description: "\U0001F465 Company context\n\U0001F512 Required scope: received_documents:a (but if the document is a passive_delivery_note you’ll need stock:a scope)\n\nRemove the attachment (but not the document)"
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'received_documents:a'
            - 'stock:a'
      parameters: []
  '/c/{company_id}/received_documents/info':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: Get Received Document Pre-Create Info
      tags:
        - Received Documents
      responses:
        '200':
          $ref: '#/components/responses/GetReceivedDocumentPreCreateInfoResponse'
      operationId: getReceivedDocumentPreCreateInfo
      description: "\U0001F465 Company context\n\U0001F512 Required scope: received_documents:r\n\nGet the info needed for the document creation flow."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'received_documents:r'
      parameters:
        - $ref: '#/components/parameters/received_document_type'
  '/c/{company_id}/receipts':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Receipts
      tags:
        - Receipts
      responses:
        '200':
          $ref: '#/components/responses/ListReceiptsResponse'
        '401':
          description: Unauthorized
      operationId: listReceipts
      description: "\U0001F465 Company context\n\U0001F512 Required scope: receipts:r\n\U0001F50D Filtering: date, type, description, rc_center, created_at, updated_at\n↕️ Sorting: date, rc_center, created_at, updated_at\n\U0001F4C4 Paginated results\n\U0001F3A9 Customized responses supported\n\nGet a list of receipt documents that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'receipts:r'
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/by_id'
    post:
      summary: Create Receipt
      operationId: createReceipt
      responses:
        '200':
          $ref: '#/components/responses/CreateReceiptResponse'
        '401':
          description: Unauthorized
      description: "\U0001F465 Company context\n\U0001F512 Required scope: receipts:a\n\nCreate a new receipt."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'receipts:a'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/CreateReceiptRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    date: string
                    number: 0
                    numeration: string
                    use_gross_prices: false
                    type: till_receipt
                    description: string
                    rc_center: string
                    payment_account:
                      id: 0
                    items_list:
                      - amount_net: 0
                        amount_gross: 0
                        category: string
                        vat:
                          id: 0
                  autocomplete_number: true
        description: The Receipt to create.
      tags:
        - Receipts
  '/c/{company_id}/receipts/{document_id}':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    get:
      summary: Get Receipt
      tags:
        - Receipts
      responses:
        '200':
          $ref: '#/components/responses/GetReceiptResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getReceipt
      description: "\U0001F465 Company context\n\U0001F512 Required scope: receipts:r\n\U0001F3A9 Customized responses supported\n\nGet details of an existing document by its unique id."
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'receipts:r'
    put:
      summary: Modify Receipt
      operationId: modifyReceipt
      responses:
        '200':
          $ref: '#/components/responses/ModifyReceiptResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - Receipts
      description: "\U0001F465 Company context\n\U0001F512 Required scope: receipts:a\n\nEdit an existing document by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'receipts:a'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ModifyReceiptRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    date: string
                    number: 0
                    numeration: string
                    use_gross_prices: false
                    type: till_receipt
                    description: string
                    rc_center: string
                    payment_account:
                      id: 0
                    items_list:
                      - amount_net: 0
                        amount_gross: 0
                        category: string
                        vat:
                          id: 0
        description: Modified receipt.
    delete:
      summary: Delete Receipt
      operationId: deleteReceipt
      responses:
        '200':
          description: Document removed.
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: receipts:a\n\nDelete an existing document by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'receipts:a'
      parameters: []
      tags:
        - Receipts
  '/c/{company_id}/receipts/info':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: Get Receipt Pre-Create Info
      tags:
        - Receipts
      responses:
        '200':
          $ref: '#/components/responses/GetReceivedDocumentPreCreateInfoResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getReceiptPreCreateInfo
      description: "\U0001F465 Company context\n\U0001F512 Required scope: receipts:r\n\nGet the info needed for the document creation flow."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'receipts:r'
      parameters: []
  '/c/{company_id}/receipts/monthly_totals':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: Get Receipts Monthly Totals
      tags:
        - Receipts
      responses:
        '200':
          $ref: '#/components/responses/GetReceiptsMonthlyTotalsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getReceiptsMonthlyTotals
      description: "\U0001F465 Company context\n\U0001F512 Required scope: receipts:r\n\nGet the monthly totals by year and receipt type."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'receipts:r'
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - sales_receipt
              - till_receipt
          description: Receipt Type
          required: true
        - schema:
            type: string
          in: query
          name: year
          required: true
          description: Year for which you want monthly totals
  '/c/{company_id}/taxes':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List F24
      tags:
        - Taxes
      responses:
        '200':
          $ref: '#/components/responses/ListF24Response'
        '401':
          description: Unauthorized
      operationId: listF24
      description: "\U0001F465 Company context\n\U0001F512 Required scope: taxes:r\n\U0001F50D Filtering: due_date, status, amount, description\n↕️ Sorting: due_date, status, amount, description\n\U0001F4C4 Paginated results\n\U0001F3A9 Customized responses supported\n\nGet a list of F24 that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'taxes:r'
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/by_id'
        - $ref: '#/components/parameters/PerPage'
    post:
      summary: Create F24
      operationId: createF24
      responses:
        '200':
          $ref: '#/components/responses/CreateF24Response'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - Taxes
      description: "\U0001F465 Company context\n\U0001F512 Required scope: taxes:a\n\nAdd new F24"
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'taxes:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/CreateF24Request.yaml
        description: The F24 to create
  '/c/{company_id}/taxes/{document_id}':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    get:
      summary: Get F24
      tags:
        - Taxes
      responses:
        '200':
          $ref: '#/components/responses/GetF24Response'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getF24
      description: "\U0001F465 Company context\n\U0001F512 Required scope: taxes:r\n\U0001F3A9 Customized responses supported\n\nGet details of an existing F24 document by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'taxes:r'
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
    put:
      summary: Modify F24
      operationId: modifyF24
      responses:
        '200':
          $ref: '#/components/responses/ModifyF24Response'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context\n\U0001F512 Required scope: taxes:a\n\nEdit an existing F24 by its unique id."
      tags:
        - Taxes
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'taxes:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ModifyF24Request.yaml
        description: The F24
    delete:
      summary: Delete F24
      operationId: deleteF24
      responses:
        '200':
          description: Document removed.
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - Taxes
      description: "\U0001F465 Company context\n\U0001F512 Required scope: taxes:a\n\nDelete an existing document by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'taxes:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/c/{company_id}/taxes/attachment':
    parameters:
      - $ref: '#/components/parameters/company_id'
    post:
      summary: Upload F24 Attachment
      tags:
        - Taxes
      responses: {}
      operationId: uploadF24Attachment
      description: "\U0001F465 Company context\n\U0001F512 Required scope: taxes:a\n\nUpload an attachment an return its relative token."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'taxes:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: ./models/requests/UploadF24AttachmentRequest.yaml
            examples:
              example-1:
                value:
                  filename: attachment.pdf
                  attachment: string
        description: Attachment.
  '/c/{company_id}/taxes/{document_id}/attachment':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    delete:
      summary: Delete F24 Attachment
      tags:
        - Taxes
      responses:
        '200':
          description: File Removed.
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: deleteF24Attachment
      description: "\U0001F465 Company context\n\U0001F512 Required scope: taxes:a\n\nRemove an attachment (but not the F24)"
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'taxes:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/c/{company_id}/archive':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Archive Documents
      tags:
        - Archive
      responses:
        '200':
          $ref: '#/components/responses/ListArchiveDocumentsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: listArchiveDocuments
      description: "\U0001F465 Company context\n\U0001F512 Required scope: archive:r\n\U0001F50D Filtering: date, category, description\n↕️ Sorting: date, category, description\n\U0001F4C4 Paginated results\n\U0001F3A9 Customized responses supported\n\nGet a list of documents in the archive that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'archive:r'
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/by_id'
    post:
      summary: Create Archive Document
      operationId: createArchiveDocument
      responses:
        '200':
          $ref: '#/components/responses/CreateArchiveDocumentResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - Archive
      description: "\U0001F465 Company context\n\U0001F512 Required scope: archive:a\n\nAdd a new document into archive"
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'archive:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/CreateArchiveDocumentRequest.yaml
        description: The Archive Document.
  '/c/{company_id}/archive/{document_id}':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    get:
      summary: Get Archive Document
      tags:
        - Archive
      responses:
        '200':
          $ref: '#/components/responses/GetArchiveDocumentResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getArchiveDocument
      description: "\U0001F465 Company context\n\U0001F512 Required scope: archive:r\n\U0001F3A9 Customized responses supported\n\nGet details of an existing document by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'archive:r'
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
    put:
      summary: Modify Archive Document
      operationId: modifyArchiveDocument
      responses:
        '200':
          $ref: '#/components/responses/ModifyArchiveDocumentResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - Archive
      description: "\U0001F465 Company context\n\U0001F512 Required scope: archive:a\n\nEdit an existing document"
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'archive:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ModifyArchiveDocumentRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: string
                    date: '2019-08-24'
                    type: string
                    attachment_url: string
                    attachment_token: string
                    description: string
        description: Modified Archive Document
    delete:
      summary: Delete Archive Document
      operationId: deleteArchiveDocument
      responses:
        '200':
          description: Document removed.
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - Archive
      description: "\U0001F465 Company context\n\U0001F512 Required scope: archive:a\n\nDelete an existing document by its unique id.\n\n"
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'archive:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/c/{company_id}/archive/attachment':
    parameters:
      - $ref: '#/components/parameters/company_id'
    post:
      summary: Upload Archive Document Attachment
      tags:
        - Archive
      responses:
        '200':
          description: Attachment Uploaded
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: uploadArchiveDocumentAttachment
      description: "\U0001F465 Company context\n\U0001F512 Required scope: archive:a\n\nUpload an attachment to a document into archive section"
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'archive:a'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: ./models/requests/UploadArchiveDocumentAttachmentRequest.yaml
        description: Attachment.
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/c/{company_id}/cashbook':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Cashbook Entries
      tags:
        - Cashbook
      responses:
        '200':
          $ref: '#/components/responses/ListCashbookEntriesResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: listCashbookEntries
      description: "\U0001F465 Company context\n\U0001F512 Required scope: cashbook:r \\\n\nGet a list of cashbook notes that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'cashbook:r'
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - schema:
            type: string
            format: date
          in: query
          name: date_from
          description: Start date.
          required: true
        - schema:
            type: string
            format: date
          in: query
          name: date_to
          description: End date.
          required: true
        - schema:
            type: integer
          in: query
          name: year
        - schema:
            type: string
            enum:
              - all
              - in
              - out
          in: query
          name: type
          description: Filter cashbook by type.
        - schema:
            type: integer
          in: query
          name: payment_account_id
          description: Filter by payment account.
    post:
      summary: Create Cashbook Entry
      operationId: createCashbookEntry
      responses:
        '200':
          $ref: '#/components/responses/CreateCashbookEntryResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - Cashbook
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `cashbook:a`\n\nCreate a new cashbook entry. It is possible to create an entry as an income or an outcome."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'cashbook:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/CreateCashbookEntryRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: string
                    date: '2019-08-24'
                    amount_in: 0
                    account_in:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    amount_out: 0
                    account_out:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    description: string
                    kind: cashbook
                    type: in
        description: |
          Cashbook entry.
  '/c/{company_id}/cashbook/{document_id}':
    parameters:
      - $ref: '#/components/parameters/company_id'
      - $ref: '#/components/parameters/document_id'
    get:
      summary: Get Cashbook Entry
      tags:
        - Cashbook
      responses:
        '200':
          $ref: '#/components/responses/GetCashbookEntryResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getCashbookEntry
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `cashbook:r` \\\n\U0001F3A9 Customized responses supported\n\nGet details of an existing document by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'cashbook:r'
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/fieldset'
    put:
      summary: Modify Cashbook Entry
      operationId: modifyCashbookEntry
      responses:
        '200':
          $ref: '#/components/responses/ModifyCashbookEntryResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - Cashbook
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `cashbook:a`\n\nEdit an existing cashbook entry by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'cashbook:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/ModifyCashbookEntryRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: string
                    date: '2019-08-24'
                    amount_in: 0
                    account_in:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    amount_out: 0
                    account_out:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    description: string
                    kind: cashbook
                    type: in
        description: Cashbook Entry
    delete:
      summary: Delete Cashbook Entry
      operationId: deleteCashbookEntry
      responses:
        '200':
          description: Document removed.
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `cashbook:a`\n\nDelete an existing cashbook entry by its unique id."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'cashbook:a'
      tags:
        - Cashbook
  /info/countries:
    get:
      summary: List Countries
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListCountriesResponse'
        '401':
          description: Unauthorized
      operationId: List Countries
      description: Get the list of the countries supported by entities and documents.
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  /info/cities:
    get:
      summary: List Cities
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListCitiesResponse'
      operationId: listCities
      description: Get the list of the Italian cities.
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - schema:
            type: string
          in: query
          name: postal_code
          description: Postal code for filtering.
        - schema:
            type: string
          in: query
          name: city
          description: City for filtering (ignored if postal_code is passed).
  /info/languages:
    get:
      summary: List Languages
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListLanguagesResponse'
        '401':
          description: Unauthorized
      operationId: listLanguages
      description: Get the list of the supported languages.
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  /info/templates:
    get:
      summary: List Templates
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListTemplatesResponse'
        '401':
          description: Unauthorized
      operationId: listTemplates
      description: |-
        Get the list of the available templates.
        If a CompanyAuthentication is given, custom templates are included.
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - schema:
            type: string
            enum:
              - all
              - standard
              - delivery_note
              - accompanying_invoice
            default: all
          in: query
          name: type
          description: Type of the templates.
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: by_type
          description: '[Only if type=all] If true, splits the list in objects, grouping templates by type.'
  /info/currencies:
    get:
      summary: List Currencies
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListCurrenciesResponse'
        '401':
          description: Unauthorized
      operationId: listCurrencies
      description: Get the currencies list.
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  /info/measures:
    get:
      summary: List Units of Measure
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListUnitsOfMeasureResponse'
        '401':
          description: Unauthorized
      operationId: listUnitsOfMeasure
      description: Get a list of the units of measure.
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  /info/dn_causals:
    get:
      summary: List Delivery Notes Default Causals
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListDeliveryNotesDefaultCausalsResponse'
        '401':
          description: Unauthorized
      operationId: listDeliveryNotesDefaultCausals
      description: Get the delivery note default causals.
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/c/{company_id}/info/vat_types':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Vat Types
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListVatTypesResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: listVatTypes
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'settings:r'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      description: "\U0001F465 Company context \U0001F512 Required scope: settings:r\n\U0001F3A9 Customized responses supported\n\nGet the list of the available vat types."
  '/c/{company_id}/info/payment_methods':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Payment Methods
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListPaymentMethodsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: listPaymentMethods
      description: "\U0001F465 Company context\n\U0001F3A9 Customized responses supported\n\nGet the list of the available payment methods."
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/c/{company_id}/info/payment_accounts':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Payment Accounts
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListPaymentAccountsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: listPaymentAccounts
      description: "\U0001F465 Company context\n\U0001F3A9 Customized responses supported\n\nGet the list of the available payment accounts."
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/c/{company_id}/info/revenue_centers':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Revenue Centers
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListRevenueCentersResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: listRevenueCenters
      description: "\U0001F465 Company context\n\nGet a list of the revenue centers"
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/c/{company_id}/info/cost_centers':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Cost Centers
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListCostCentersResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: listCostCenters
      description: "\U0001F465 Company context\n\nGet a list of the cost centers"
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/c/{company_id}/info/product_categories':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Product Categories
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListProductCategoriesResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: listProductCategories
      description: "\U0001F465 Company context\n\nGet the product categories list"
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - schema:
            type: string
            enum:
              - products
              - issued_documents
              - expenses_documents
          in: query
          name: context
          required: true
  '/c/{company_id}/info/received_document_categories':
    parameters:
      - $ref: '#/components/parameters/company_id'
    get:
      summary: List Received Document Categories List
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListReceivedDocumentCategoriesResponse'
      operationId: listReceivedDocumentCategories
      description: "\U0001F465 Company context\n\nGet the received document categories list"
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/c/{company_id}/info/archive_categories':
    parameters:
      - schema:
          type: string
        name: company_id
        in: path
        required: true
    get:
      summary: List Archive Categories
      tags:
        - Info
      responses:
        '200':
          $ref: '#/components/responses/ListArchiveCategoriesResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: listArchiveCategories
      description: "\U0001F465 Company context\n\nGet the archive categories list"
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
components:
  schemas: {}
  securitySchemes:
    OAuth2AuthenticationCodeFlow:
      type: oauth2
      flows:
        authorizationCode:
          tokenUrl: 'https://api-v2.fattureincloud.it/oauth/token'
          refreshUrl: ''
          scopes:
            'entity.clients:r': ''
            'entity.clients:a': ''
            'entity.suppliers:r': ''
            'entity.suppliers:a': ''
            'products:r': ''
            'products:a': ''
            'issued_documents.invoice:r': ''
            'issued_documents.credit_note:r': ''
            'issued_documents.receipt:r': ''
            'issued_documents.order:r': ''
            'issued_documents.quote:r': ''
            'issued_documents.proforma:r': ''
            'issued_documents.delivery_note:r': ''
            'issued_documents.invoice:a': ''
            'issued_documents.credit_note:a': ''
            'issued_documents.receipt:a': ''
            'issued_documents.order:a': ''
            'issued_documents.quote:a': ''
            'issued_documents.proforma:a': ''
            'issued_documents.delivery_note:a': ''
            'received_documents:r': ''
            'received_documents:a': ''
            'stock:r': ''
            'stock:a': ''
            'receipts:r': ''
            'receipts:a': ''
            'taxes:r': ''
            'taxes:a': ''
            'archive:r': ''
            'archive:a': ''
            'cashbook:r': ''
            'cashbook:a': ''
            'settings:r': ''
            'settings:a': ''
          authorizationUrl: 'https://api-v2.fattureincloud.it/oauth/authorize'
  parameters:
    Authorization:
      name: Authorization
      in: header
      description: Access token to authenticate the user
      required: true
      schema:
        type: string
    company_id:
      name: company_id
      in: path
      required: true
      schema:
        type: integer
        example: '12345'
      description: The Referred Company Id.
    fieldset:
      name: fieldset
      in: query
      required: false
      schema:
        type: string
      description: Name of the fieldset
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
      description: List of comma-separated fields for result sorting (minus for desc sorting)
    fields:
      name: fields
      in: query
      required: false
      schema:
        type: string
      description: List of comma-separated fields.
    Page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 1
      description: Requested page
    by_id:
      name: by_id
      in: query
      required: false
      schema:
        type: integer
        default: 0
      description: 'If 1, return an object instead of an array'
    client_id:
      name: client_id
      in: path
      required: true
      schema:
        type: integer
    supplier_id:
      name: supplier_id
      in: path
      required: true
      schema:
        type: string
    product_id:
      name: product_id
      in: path
      required: true
      schema:
        type: integer
    issued_document_type:
      name: type
      in: query
      required: true
      schema:
        type: string
        enum:
          - invoice
          - credit_note
          - receipt
          - order
          - quote
          - proforma
          - delivery_note
      description: Issued Document Type
    PerPage:
      name: per_page
      in: query
      required: false
      schema:
        type: integer
        default: 5
      description: Items to be shown per page
    document_id:
      name: document_id
      in: path
      required: true
      schema:
        type: integer
      description: Unique Id of the document
    received_document_type:
      name: type
      in: query
      required: true
      schema:
        type: string
        enum:
          - expense
          - passive_credit_note
          - passive_delivery_note
      description: Received Document Type
  responses:
    UserInfoResponse:
      description: User info.
      content:
        application/json:
          schema:
            $ref: ./models/responses/UserInfoResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 12345
                  name: Mario Rossi
                  first_name: Mario
                  last_name: Rossi
                  email: mario.rossi@example.it
    UserCompaniesResponse:
      description: User Companies.
      content:
        application/json:
          schema:
            $ref: ./models/responses/UserCompaniesResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 12345
                  name: Rossi S.r.l.
                  type: company
                  access_token: fd015011d2dbf8a9d38e810b325b11b56d02e51688e5261a245933b8e677b8b44ff5f0fe5ccaaf1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4fd81273fc1f95bf460b869015cf99acba
                  permissions:
                    fic_situation: write
                    fic_clients: write
                    fic_suppliers: write
                    fic_products: write
                    fic_issued_documents: write
                    fic_received_documents: write
                    fic_receipts: write
                    fic_calendar: write
                    fic_archive: write
                    fic_taxes: write
                    fic_stock: write
                    fic_cashbook: write
                    fic_settings: write
                  controlled_companies:
                    - id: 12345
                      name: Rossi S.r.l.
                      type: company
                      access_token: fd015011d2dbf8a9d38e810b325b11b56d02e51688e5261a245933b8e677b8b44ff5f0fe5ccaaf1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4fd81273fc1f95bf460b869015cf99acba
                      permissions:
                        fic_situation: write
                        fic_clients: write
                        fic_suppliers: write
                        fic_products: write
                        fic_issued_documents: write
                        fic_received_documents: write
                        fic_receipts: write
                        fic_calendar: write
                        fic_archive: write
                        fic_taxes: write
                        fic_stock: write
                        fic_cashbook: write
                        fic_settings: write
                      controlled_companies: []
    CompanyInfoResponse:
      description: Company info.
      content:
        application/json:
          schema:
            $ref: ./models/responses/CompanyInfoResponse.yaml
          examples:
            example-1:
              value:
                data:
                  data:
                    id: 12345
                    name: Mario Rossi S.r.l.
                    email: mario@rossi-example.it
                    type: company
                    fic: true
                    fic_plan: trial
                    fic_license_expire: '2019-08-24'
                    use_fic: true
                    fic_need_setup: true
                    dic: true
                    dic_plan: trial
                    dic_license_expire: '2019-08-24'
                    use_dic: true
                    dic_need_setup: true
                    access_info:
                      role: master
                      permissions:
                        fic_situation: write
                        fic_clients: write
                        fic_suppliers: write
                        fic_products: write
                        fic_issued_documents: write
                        fic_received_documents: write
                        fic_receipts: write
                        fic_calendar: write
                        fic_archive: write
                        fic_taxes: write
                        fic_stock: write
                        fic_cashbook: write
                        fic_settings: write
                    plan_info:
                      limits:
                        clients: 0
                        suppliers: 0
                        products: 0
                        documents: 0
                      functions:
                        example_function: true
    CreateClientResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/CreateClientResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  code: '123'
                  name: Rossi S.r.l.
                  type: null
                  first_name: string
                  last_name: string
                  contact_person: string
                  vat_number: IT01234567890
                  tax_code: RSSMRA44A12E890Q
                  address_street: 'Via dei tigli, 12'
                  address_postal_code: '24010'
                  address_city: Bergamo
                  address_province: BG
                  address_extra: string
                  country: Italia
                  email: mario.rossi@example.it
                  certified_email: mario.rossi@pec.example.it
                  phone: string
                  fax: string
                  notes: string
                  default_vat:
                    id: 0
                    value: 22
                    description: Non imponibile art. 123
                    notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                    e_invoice: string
                    ei_type: 2
                    ei_description: string
                    editable: true
                  default_payment_terms: 30
                  default_payment_terms_type: standard
                  default_payment_method:
                    id: 0
                    name: string
                    type: standard
                    default_payment_account:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    details:
                      - title: string
                        description: string
                  bank_name: string
                  bank_iban: string
                  bank_swift_code: string
                  shipping_address: string
                  e_invoice: false
                  ei_code: string
    ListCompaniesResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListClientsResponse.yaml
          examples:
            example-1:
              value:
                current_page: 1
                first_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                from: 1
                last_page: 1
                last_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                next_page_url: null
                path: 'http://api-v2.fattureincloud.it/c/11111/path'
                per_page: 50
                prev_page_url: null
                to: 1
                total: 1
                data:
                  - id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
                    default_vat:
                      id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
                    default_payment_terms: 30
                    default_payment_terms_type: standard
                    default_payment_method:
                      id: 0
                      name: string
                      type: standard
                      default_payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      details:
                        - title: string
                          description: string
                    bank_name: string
                    bank_iban: string
                    bank_swift_code: string
                    shipping_address: string
                    e_invoice: false
                    ei_code: string
    ListSuppliersResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListSuppliersResponse.yaml
          examples:
            example-1: {}
    CreateSupplierResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/CreateSupplierResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  code: '123'
                  name: Rossi S.r.l.
                  type: null
                  first_name: string
                  last_name: string
                  contact_person: string
                  vat_number: IT01234567890
                  tax_code: RSSMRA44A12E890Q
                  address_street: 'Via dei tigli, 12'
                  address_postal_code: '24010'
                  address_city: Bergamo
                  address_province: BG
                  address_extra: string
                  country: Italia
                  email: mario.rossi@example.it
                  certified_email: mario.rossi@pec.example.it
                  phone: string
                  fax: string
                  notes: string
    GetClientResponse:
      description: Client Details.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetClientResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  code: '123'
                  name: Rossi S.r.l.
                  type: null
                  first_name: string
                  last_name: string
                  contact_person: string
                  vat_number: IT01234567890
                  tax_code: RSSMRA44A12E890Q
                  address_street: 'Via dei tigli, 12'
                  address_postal_code: '24010'
                  address_city: Bergamo
                  address_province: BG
                  address_extra: string
                  country: Italia
                  email: mario.rossi@example.it
                  certified_email: mario.rossi@pec.example.it
                  phone: string
                  fax: string
                  notes: string
                  default_vat:
                    id: 0
                    value: 22
                    description: Non imponibile art. 123
                    notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                    e_invoice: string
                    ei_type: 2
                    ei_description: string
                    editable: true
                  default_payment_terms: 30
                  default_payment_terms_type: standard
                  default_payment_method:
                    id: 0
                    name: string
                    type: standard
                    default_payment_account:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    details:
                      - title: string
                        description: string
                  bank_name: string
                  bank_iban: string
                  bank_swift_code: string
                  shipping_address: string
                  e_invoice: false
                  ei_code: string
    ModifyClientResponse:
      description: Client modified.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ModifyClientResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  code: '123'
                  name: Rossi S.r.l.
                  type: null
                  first_name: string
                  last_name: string
                  contact_person: string
                  vat_number: IT01234567890
                  tax_code: RSSMRA44A12E890Q
                  address_street: 'Via dei tigli, 12'
                  address_postal_code: '24010'
                  address_city: Bergamo
                  address_province: BG
                  address_extra: string
                  country: Italia
                  email: mario.rossi@example.it
                  certified_email: mario.rossi@pec.example.it
                  phone: string
                  fax: string
                  notes: string
                  default_vat:
                    id: 0
                    value: 22
                    description: Non imponibile art. 123
                    notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                    e_invoice: string
                    ei_type: 2
                    ei_description: string
                    editable: true
                  default_payment_terms: 30
                  default_payment_terms_type: standard
                  default_payment_method:
                    id: 0
                    name: string
                    type: standard
                    default_payment_account:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    details:
                      - title: string
                        description: string
                  bank_name: string
                  bank_iban: string
                  bank_swift_code: string
                  shipping_address: string
                  e_invoice: false
                  ei_code: string
    GetSupplierResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetSupplierResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  code: '123'
                  name: Rossi S.r.l.
                  type: null
                  first_name: string
                  last_name: string
                  contact_person: string
                  vat_number: IT01234567890
                  tax_code: RSSMRA44A12E890Q
                  address_street: 'Via dei tigli, 12'
                  address_postal_code: '24010'
                  address_city: Bergamo
                  address_province: BG
                  address_extra: string
                  country: Italia
                  email: mario.rossi@example.it
                  certified_email: mario.rossi@pec.example.it
                  phone: string
                  fax: string
                  notes: string
    ModifySupplierResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/ModifySupplierResponse.yaml
    ListProductsResponse:
      description: Products List.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListProductsResponse.yaml
          examples:
            example-1:
              value:
                current_page: 1
                first_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                from: 1
                last_page: 1
                last_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                next_page_url: null
                path: 'http://api-v2.fattureincloud.it/c/11111/path'
                per_page: 50
                prev_page_url: null
                to: 1
                total: 1
                data:
                  - id: 0
                    name: string
                    code: string
                    net_price: 0
                    gross_price: 0
                    use_gross_price: true
                    default_vat:
                      id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
                    net_cost: 0
                    measure: string
                    description: string
                    category: string
                    notes: string
                    in_stock: true
                    stock_initial: 0
                    stock_current: 0
    CreateProductResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/CreateProductResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  name: string
                  code: string
                  net_price: 0
                  gross_price: 0
                  use_gross_price: true
                  default_vat:
                    id: 0
                    value: 22
                    description: Non imponibile art. 123
                    notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                    e_invoice: string
                    ei_type: 2
                    ei_description: string
                    editable: true
                  net_cost: 0
                  measure: string
                  description: string
                  category: string
                  notes: string
                  in_stock: true
                  stock_initial: 0
                  stock_current: 0
    GetProductResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetProductResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  name: string
                  code: string
                  net_price: 0
                  gross_price: 0
                  use_gross_price: true
                  default_vat:
                    id: 0
                    value: 22
                    description: Non imponibile art. 123
                    notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                    e_invoice: string
                    ei_type: 2
                    ei_description: string
                    editable: true
                  net_cost: 0
                  measure: string
                  description: string
                  category: string
                  notes: string
                  in_stock: true
                  stock_initial: 0
                  stock_current: 0
    ModifyProductResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/ModifyProductResponse.yaml
    ListIssuedDocumentsResponse:
      description: Results list.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListIssuedDocumentsResponse.yaml
    CreateIssuedDocumentResponse:
      description: Document created.
      content:
        application/json:
          schema:
            $ref: ./models/responses/CreateIssuedDocumentResponse.yaml
    GetIssuedDocumentResponse:
      description: Document Details.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetIssuedDocumentResponse.yaml
    ModifyIssuedDocumentResponse:
      description: Document edited
      content:
        application/json:
          schema:
            $ref: ./models/responses/ModifyIssuedDocumentResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  entity:
                    id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
                    default_vat:
                      id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
                    default_payment_terms: 30
                    default_payment_terms_type: standard
                    default_payment_method:
                      id: 0
                      name: string
                      type: standard
                      default_payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      details:
                        - title: string
                          description: string
                    bank_name: string
                    bank_iban: string
                    bank_swift_code: string
                    shipping_address: string
                    e_invoice: false
                    ei_code: string
                  type: invoice
                  number: 1
                  numeration: /A
                  date: '2019-08-24'
                  currency:
                    id: EUR
                    symbol: €
                    exchange_rate: 1
                  language:
                    code: string
                    name: string
                  subject: string
                  visible_subject: string
                  rc_center: string
                  notes: string
                  rivalsa: 0
                  cassa: 0
                  withholding_tax: 0
                  withholding_tax_taxable: 0
                  other_withholding_tax: 0
                  stamp_duty: 0
                  payment_method:
                    id: 0
                    name: string
                    type: standard
                    default_payment_account:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    details:
                      - title: string
                        description: string
                  use_split_payment: false
                  use_gross_prices: false
                  e_invoice: false
                  ei_data:
                    vat_kind: null
                    original_document_type: ordine
                    od_number: string
                    od_date: '2019-08-24'
                    cig: string
                    cup: string
                    payment_method: string
                    bank_name: string
                    bank_iban: string
                    bank_beneficiary: string
                  items_list:
                    - product_id: 1234
                      code: '239874892374982'
                      name: Water bottle
                      description: string
                      qty: 0
                      measure: string
                      net_price: 1.23
                      gross_price: 1.45
                      vat:
                        id: 0
                        value: 22
                        description: Non imponibile art. 123
                        notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                        e_invoice: string
                        ei_type: 2
                        ei_description: string
                        editable: true
                      not_taxable: false
                      apply_withholding_taxes: true
                      discount: 0
                      discount_highlight: false
                      in_ddt: true
                      stock: true
                      ei_raw: {}
                  payments_list:
                    - due_date: '2018-04-03'
                      amount: 1.45
                      status: not_paid
                      payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      paid_date: '2018-04-03'
                      ei_raw: {}
                  template: |-
                    {
                        "code": "it",
                        "name": "Italiano"
                    }
                  delivery_note_template: |-
                    {
                        "code": "it",
                        "name": "Italiano"
                    }
                  acc_inv_template: |-
                    {
                        "code": "it",
                        "name": "Italiano"
                    }
                  h_margins: 0
                  show_payments: true
                  show_payment_method: true
                  show_totals: all
                  v_margins: 0
                  show_paypal_button: false
                  show_notification_button: false
                  delivery_note: false
                  accompanying_invoice: false
                  dn_number: 0
                  dn_date: '2019-08-24'
                  dn_ai_packages_number: string
                  dn_ai_weight: string
                  dn_ai_causal: string
                  dn_ai_destination: string
                  dn_ai_transporter: string
                  dn_ai_notes: string
                  refers_to:
                    id: 0
                    date: '2019-08-24'
                    number: 0
                    numeration: string
                    description: string
                  is_marked: true
                  amount_net: 0
                  amount_vat: 0
                  amount_gross: 0
                  amount_rivalsa: 0
                  amount_cassa: 0
                  amount_withholding_tax: 0
                  amount_other_withholding_tax: 0
                  extra_data:
                    ts_communication: true
                    ts_flag_tipo_spesa: 0
                    ts_pagamento_tracciato: true
                    ts_tipo_spesa: string
                  seen_date: '2019-08-24'
                  next_due_date: '2019-08-24'
                  url: string
                  attachment_url: string
                  attachment_token: string
                  ei_raw: {}
    GetNewIssuedDocumentTotalsResponse:
      description: Totals.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetNewIssuedDocumentTotalsResponse.yaml
          examples:
            example-1:
              value:
                data: |-
                  {
                      "amount_net": 30,
                      "amount_rivalsa": 1.5,
                      "amount_net_with_rivalsa": 31.5,
                      "amount_cassa": 1.58,
                      "taxable_amount": 33.08,
                      "not_taxable_amount": 0.00,
                      "vat_list": {
                        "10": {
                          "net": 10,
                          "vat": 1
                        },
                        "20": {
                          "net": 23.08,
                          "vat": 4.62
                        }
                      },
                      "amount_vat": 5.62,
                      "amount_gross": 36.41,
                      "taxable_amount_withholding_tax": 15.75,
                      "amount_withholding_tax": 0.79,
                      "taxable_amount_other_withholding_tax": 30,
                      "amount_other_withholding_tax": 1.5,
                      "amount_due": 36.41,
                      "is_enasarco_maximal_exceeded": false,
                      "payments_sum": 36.41
                    }
    GetExistingIssuedDocumentTotalsResponse:
      description: Totals.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetExistingIssuedDocumentTotalsResponse.yaml
          examples:
            example-1:
              value:
                data: |-
                  {
                      "amount_net": 30,
                      "amount_rivalsa": 1.5,
                      "amount_net_with_rivalsa": 31.5,
                      "amount_cassa": 1.58,
                      "taxable_amount": 33.08,
                      "not_taxable_amount": 0.00,
                      "vat_list": {
                        "10": {
                          "net": 10,
                          "vat": 1
                        },
                        "20": {
                          "net": 23.08,
                          "vat": 4.62
                        }
                      },
                      "amount_vat": 5.62,
                      "amount_gross": 36.41,
                      "taxable_amount_withholding_tax": 15.75,
                      "amount_withholding_tax": 0.79,
                      "taxable_amount_other_withholding_tax": 30,
                      "amount_other_withholding_tax": 1.5,
                      "amount_due": 36.41,
                      "is_enasarco_maximal_exceeded": false,
                      "payments_sum": 36.41
                    }
    UploadIssuedDocumentAttachmentResponse:
      description: Attachment Token.
      content:
        application/json:
          schema:
            $ref: ./models/responses/UploadIssuedDocumentAttachmentResponse.yaml
          examples:
            example-1:
              value:
                data:
                  attachment_token: YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw
    GetIssuedDocumentPreCreateInfoResponse:
      description: Pre-create info.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetIssuedDocumentPreCreateInfoResponse.yaml
          examples:
            example-1:
              value:
                data:
                  numerations: {}
                  dn_numerations: {}
                  default_values:
                    default_template: |-
                      {
                          "code": "it",
                          "name": "Italiano"
                      }
                    dn_template: |-
                      {
                          "code": "it",
                          "name": "Italiano"
                      }
                    ai_template: |-
                      {
                          "code": "it",
                          "name": "Italiano"
                      }
                    default_notes: string
                    default_rivalsa: 0
                    cassa: 0
                    withholding_tax: 0
                    withholding_tax_taxable: 0
                    other_withholding_tax: 0
                    use_gross_prices: true
                    payment_method:
                      id: 0
                      name: string
                      type: standard
                      default_payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      details:
                        - title: string
                          description: string
                  items_default_values:
                    vat:
                      id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
                  countries_list:
                    - string
                  currencies_list:
                    - id: EUR
                      symbol: €
                      exchange_rate: 1
                  templates_list:
                    - |-
                      {
                          "code": "it",
                          "name": "Italiano"
                      }
                  dn_templates_list:
                    - |-
                      {
                          "code": "it",
                          "name": "Italiano"
                      }
                  ai_templates_list:
                    - |-
                      {
                          "code": "it",
                          "name": "Italiano"
                      }
                  payment_methods_list:
                    - id: 0
                      name: string
                      type: standard
                      default_payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      details:
                        - title: string
                          description: string
                  payment_accounts_list:
                    - id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                  vat_types_list:
                    - id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
    GetEmailDataResponse:
      description: EmailData
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetEmailDataResponse.yaml
          examples:
            example-1:
              value:
                data:
                  supplier_email: string
                  default_sender_email:
                    id: 0
                    email: no-reply@fattureincloud.it
                  sender_emails_list:
                    - id: 0
                      email: no-reply@fattureincloud.it
                    - id: 20856
                      email: info@prova.it
                    - id: 20857
                      email: mariorossi@fattureincloud.it
                  cc_email: m.rossi@gmail.com
                  subject: Nostra pro forma nr. 1
                  body: 'Gentile Mario Rossi,<br>per vedere la nostra pro forma di  o per scaricarne una copia in versione PDF prema sul bottone sottoastante.<br><br>{{allegati}}<br><br>Cordiali saluti,<br><b>Mario Rossi</b>'
                  document_exists: true
                  delivery_note_exists: string
                  attachment_exists: string
                  accompanying_invoice_exists: string
    SendEInvoiceResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/SendEInvoiceResponse.yaml
    VerifyEInvoiceXmlResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/VerifyEInvoiceXmlResponse.yaml
    VerifyEInvoiceXmlErrorResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/VerifyEInvoiceXmlErrorResponse.yaml
    ListReceivedDocumentsResponse:
      description: Results list.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListReceivedDocumentsResponse.yaml
    CreateReceivedDocumentResponse:
      description: Document created.
      content:
        application/json:
          schema:
            $ref: ./models/responses/CreateReceivedDocumentResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  type: expense
                  entity:
                    id: 0
                    name: string
                  date: string
                  category: string
                  description: string
                  amount_net: 0
                  amount_vat: 0
                  amount_withholding_tax: 0
                  amount_other_withholding_tax: 0
                  amount_gross: 0
                  amortization: 0
                  rc_center: string
                  invoice_number: string
                  is_marked: true
                  is_detailed: true
                  e_invoice: true
                  next_due_date: '2019-08-24'
                  currency:
                    id: EUR
                    symbol: €
                    exchange_rate: 1
                  tax_deductibility: 0
                  vat_deductibility: 0
                  items_list:
                    - id: 0
                      product_id: 0
                      code: string
                      name: string
                      measure: string
                      net_price: 0
                      category: string
                      qty: 0
                      vat:
                        id: 0
                        value: 22
                        description: Non imponibile art. 123
                        notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                        e_invoice: string
                        ei_type: 2
                        ei_description: string
                        editable: true
                      stock: 0
                  payments_list:
                    - id: 0
                      amount: 0
                      due_date: string
                      paid_date: string
                      payment_terms:
                        days: 0
                        type: string
                      status: string
                      payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                  attachment_url: string
                  attachment_preview_url: string
    GetReceivedDocumentResponse:
      description: Document details.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetReceivedDocumentResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  type: expense
                  entity:
                    id: 0
                    name: string
                  date: string
                  category: string
                  description: string
                  amount_net: 0
                  amount_vat: 0
                  amount_withholding_tax: 0
                  amount_other_withholding_tax: 0
                  amount_gross: 0
                  amortization: 0
                  rc_center: string
                  invoice_number: string
                  is_marked: true
                  is_detailed: true
                  e_invoice: true
                  next_due_date: '2019-08-24'
                  currency:
                    id: EUR
                    symbol: €
                    exchange_rate: 1
                  tax_deductibility: 0
                  vat_deductibility: 0
                  items_list:
                    - id: 0
                      product_id: 0
                      code: string
                      name: string
                      measure: string
                      net_price: 0
                      category: string
                      qty: 0
                      vat:
                        id: 0
                        value: 22
                        description: Non imponibile art. 123
                        notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                        e_invoice: string
                        ei_type: 2
                        ei_description: string
                        editable: true
                      stock: 0
                  payments_list:
                    - id: 0
                      amount: 0
                      due_date: string
                      paid_date: string
                      payment_terms:
                        days: 0
                        type: string
                      status: string
                      payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                  attachment_url: string
                  attachment_preview_url: string
    ModifyReceivedDocumentResponse:
      description: Modified document.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ModifyReceivedDocumentResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  type: expense
                  entity:
                    id: 0
                    name: string
                  date: string
                  category: string
                  description: string
                  amount_net: 0
                  amount_vat: 0
                  amount_withholding_tax: 0
                  amount_other_withholding_tax: 0
                  amount_gross: 0
                  amortization: 0
                  rc_center: string
                  invoice_number: string
                  is_marked: true
                  is_detailed: true
                  e_invoice: true
                  next_due_date: '2019-08-24'
                  currency:
                    id: EUR
                    symbol: €
                    exchange_rate: 1
                  tax_deductibility: 0
                  vat_deductibility: 0
                  items_list:
                    - id: 0
                      product_id: 0
                      code: string
                      name: string
                      measure: string
                      net_price: 0
                      category: string
                      qty: 0
                      vat:
                        id: 0
                        value: 22
                        description: Non imponibile art. 123
                        notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                        e_invoice: string
                        ei_type: 2
                        ei_description: string
                        editable: true
                      stock: 0
                  payments_list:
                    - id: 0
                      amount: 0
                      due_date: string
                      paid_date: string
                      payment_terms:
                        days: 0
                        type: string
                      status: string
                      payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                  attachment_url: string
                  attachment_preview_url: string
    GetNewReceivedDocumentTotalsResponse:
      description: Document Totals.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetNewReceivedDocumentTotalsResponse.yaml
    GetExistingReceivedDocumentTotalsResponse:
      description: Document Totals.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetExistingReceivedDocumentTotalsResponse.yaml
          examples:
            example-1:
              value:
                data:
                  amount_net: 542
                  amount_vat: 24.5
                  amount_gross: 531.5
                  amount_withholding_tax: 31
                  amount_other_withholding_tax: 4
                  amount_due: 531.5
                  payments_sum: 535.5
    UploadReceivedDocumentAttachmentResponse:
      description: Attachment Token.
      content:
        application/json:
          schema:
            $ref: ./models/responses/UploadReceivedDocumentAttachmentResponse.yaml
          examples:
            example-1:
              value:
                data:
                  attachment_token: YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw
    GetReceivedDocumentPreCreateInfoResponse:
      description: Pre-create info
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetReceivedDocumentPreCreateInfoResponse.yaml
          examples:
            example-1:
              value:
                data:
                  series: {}
                  series_list:
                    - string
                  rc_centers_list:
                    - string
                  payment_accounts_list:
                    - id: 0
                      name: Conto Banca Intesa
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                  categories_list:
                    - string
                  vat_types_list:
                    - id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
    ListReceiptsResponse:
      description: Receipts list.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListReceiptsResponse.yaml
          examples:
            example-1:
              value:
                current_page: 1
                first_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                from: 1
                last_page: 1
                last_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                next_page_url: null
                path: 'http://api-v2.fattureincloud.it/c/11111/path'
                per_page: 50
                prev_page_url: null
                to: 1
                total: 1
                data:
                  - date: string
                    number: 0
                    numeration: string
                    use_gross_prices: false
                    type: till_receipt
                    description: string
                    rc_center: string
                    payment_account:
                      id: 0
                    items_list:
                      - amount_net: 0
                        amount_gross: 0
                        category: string
                        vat:
                          id: 0
    CreateReceiptResponse:
      description: Created Receipt.
      content:
        application/json:
          schema:
            $ref: ./models/responses/CreateReceiptResponse.yaml
          examples:
            example-1:
              value:
                data:
                  date: string
                  number: 0
                  numeration: string
                  use_gross_prices: false
                  type: till_receipt
                  description: string
                  rc_center: string
                  payment_account:
                    id: 0
                  items_list:
                    - amount_net: 0
                      amount_gross: 0
                      category: string
                      vat:
                        id: 0
    GetReceiptResponse:
      description: Receipt Details.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetReceiptResponse.yaml
    ModifyReceiptResponse:
      description: Modified receipt.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ModifyReceiptResponse.yaml
          examples:
            example-1:
              value:
                data:
                  date: string
                  number: 0
                  numeration: string
                  use_gross_prices: false
                  type: till_receipt
                  description: string
                  rc_center: string
                  payment_account:
                    id: 0
                  items_list:
                    - amount_net: 0
                      amount_gross: 0
                      category: string
                      vat:
                        id: 0
    GetReceiptPreCreateInfoResponse:
      description: Pre-create info.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetReceiptPreCreateInfoResponse.yaml
          examples:
            example-1:
              value:
                data:
                  series: {}
                  series_list:
                    - string
                  rc_centers_list:
                    - string
                  payment_accounts_list:
                    - id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                  categories_list:
                    - string
                  vat_types_list:
                    - id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
    GetReceiptsMonthlyTotalsResponse:
      description: Monthly Totals.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetReceiptsMonthlyTotalsResponse.yaml
          examples:
            example-1:
              value:
                data:
                  - net: 1430.86
                    gross: 1744
                    count: 66
    ListF24Response:
      description: Results list.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListF24Response.yaml
          examples:
            example-1:
              value:
                current_page: 1
                first_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                from: 1
                last_page: 1
                last_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                next_page_url: null
                path: 'http://api-v2.fattureincloud.it/c/11111/path'
                per_page: 50
                prev_page_url: null
                to: 1
                total: 1
                data:
                  - id: string
                    due_date: '2018-02-12'
                    status: paid
                    payment_account:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    amount: 300
                    attachment_url: string
                    attachment_token: string
                    description: string
    CreateF24Response:
      description: The created F24
      content:
        application/json:
          schema:
            $ref: ./models/responses/CreateF24Response.yaml
          examples:
            example-1:
              value:
                data:
                  id: string
                  due_date: '2018-02-12'
                  status: paid
                  payment_account:
                    id: 0
                    name: Conto Banca di Paperopoli
                    type: standard
                    iban: string
                    sia: string
                    cuc: string
                  amount: 300
                  attachment_url: string
                  attachment_token: string
                  description: string
    GetF24Response:
      description: The F24
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetF24Response.yaml
    ModifyF24Response:
      description: The modified F24
      content:
        application/json:
          schema:
            $ref: ./models/responses/ModifyF24Response.yaml
          examples:
            example-1:
              value:
                data:
                  id: string
                  due_date: '2018-02-12'
                  status: paid
                  payment_account:
                    id: 0
                    name: Conto Banca di Paperopoli
                    type: standard
                    iban: string
                    sia: string
                    cuc: string
                  amount: 300
                  attachment_url: string
                  attachment_token: string
                  description: string
    UploadF24AttachmentResponse:
      description: Attachment Token.
      content:
        application/json:
          schema:
            $ref: ./models/responses/UploadF24AttachmentResponse.yaml
          examples:
            example-1:
              value:
                data:
                  attachment_token: YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw
    ListArchiveDocumentsResponse:
      description: Results list.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListArchiveDocumentsResponse.yaml
    CreateArchiveDocumentResponse:
      description: The Archive Document.
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    GetArchiveDocumentResponse:
      description: Example response
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    ModifyArchiveDocumentResponse:
      description: The modified Archived Document
      content:
        application/json:
          schema:
            $ref: ./models/responses/ModifyArchiveDocumentResponse.yaml
    ListCashbookEntriesResponse:
      description: Results list.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListCashbookEntriesResponse.yaml
          examples:
            example-1:
              value:
                data:
                  - id: string
                    date: '2019-08-24'
                    amount_in: 0
                    account_in:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    amount_out: 0
                    account_out:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    description: string
                    kind: cashbook
                    type: in
    CreateCashbookEntryResponse:
      description: The created Cashbook Entry.
      content:
        application/json:
          schema:
            $ref: ./models/responses/CreateCashbookEntryResponse.yaml
    GetCashbookEntryResponse:
      description: Cashbook Entry.
      content:
        application/json:
          schema:
            $ref: ./models/responses/GetCashbookEntryResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: string
                  date: '2019-08-24'
                  amount_in: 0
                  account_in:
                    id: 0
                    name: Conto Banca di Paperopoli
                    type: standard
                    iban: string
                    sia: string
                    cuc: string
                  amount_out: 0
                  account_out:
                    id: 0
                    name: Conto Banca di Paperopoli
                    type: standard
                    iban: string
                    sia: string
                    cuc: string
                  description: string
                  kind: cashbook
                  type: in
    ModifyCashbookEntryResponse:
      description: The modified Cashbook Entry
      content:
        application/json:
          schema:
            $ref: ./models/responses/ModifyCashbookEntryResponse.yaml
    ListCountriesResponse:
      description: List of countries
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListCountriesResponse.yaml
    ListCitiesResponse:
      description: Cities List.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListCitiesResponse.yaml
          examples:
            example-1:
              value:
                data:
                  - postal_code: '89867'
                    city: Zungri
                    province: VV
                  - postal_code: '83020'
                    city: Aiello del Sabato
                    province: AV
                  - postal_code: '83011'
                    city: Altavilla Irpina
                    province: AV
    ListLanguagesResponse:
      description: LanguagesList
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListLanguagesResponse.yaml
          examples:
            example-1:
              value:
                data:
                  - code: it
                    name: Italiano
                  - code: en
                    name: Inglese
    ListTemplatesResponse:
      description: Templates list.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListTemplatesResponse.yaml
          examples:
            example-1:
              value:
                data:
                  - id: 10
                    name: New Standard S1
                  - id: 106
                    name: Minimalist
    ListCurrenciesResponse:
      description: Currencies List.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListCurrenciesResponse.yaml
    ListUnitsOfMeasureResponse:
      description: Units of measure.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListUnitsOfMeasureResponse.yaml
    ListDeliveryNotesDefaultCausalsResponse:
      description: List of Delivery Notes Default Causals
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListDeliveryNotesDefaultCausalsResponse.yaml
          examples:
            example-1:
              value:
                data:
                  - Vendita
                  - Conto visione
                  - Conto deposito
                  - Conto vendita
                  - Tentata vendita
                  - Prestito d'uso
                  - Conto lavorazione
                  - Omaggio
                  - Riparazione
                  - Reso per accredito
                  - Reso per sostituzione
    ListVatTypesResponse:
      description: List of Vat Types.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListVatTypesResponse.yaml
          examples:
            example-1:
              value:
                data:
                  - id: 0
                    value: 22
                    description: Non imponibile art. 123
                    notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                    e_invoice: string
                    ei_type: 2
                    ei_description: string
                    editable: true
    ListPaymentMethodsResponse:
      description: Payment methods list.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListPaymentMethodsResponse.yaml
    ListPaymentAccountsResponse:
      description: Payment accounts list.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListPaymentAccountsResponse.yaml
    ListRevenueCentersResponse:
      description: List of Revenue Centers
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListRevenueCentersResponse.yaml
    ListCostCentersResponse:
      description: List of Cost Centers
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListCostCentersResponse.yaml
    ListProductCategoriesResponse:
      description: Product Categories List
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListProductCategoriesResponse.yaml
    ListReceivedDocumentCategoriesResponse:
      description: Received Document Categories List
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListReceivedDocumentCategoriesResponse.yaml
    ListArchiveCategoriesResponse:
      description: Archive Categories list.
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListArchiveCategoriesResponse.yaml
security:
  - OAuth2AuthenticationCodeFlow: []

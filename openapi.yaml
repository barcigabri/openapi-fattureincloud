openapi: 3.0.1
info:
  title: Fatture in Cloud API v2 - API Reference
  description: "## Request informations\nIn every request description you will be able to find some additional informations about context, permissions and supported functionality:\n\n| Parameter | Description |\n|-----------|-------------|\n| \U0001F465 Context | Indicate the subject of the request. Can be `company`, `user` or `accountant`.  |\n| \U0001F512 Required scope | If present, indicates the required scope to fulfill the request. |\n| \U0001F50D Filtering | If present, indicates which fields support the filtering feature. |\n| ↕️ Sorting | If present, indicates which fields support the sorting feature. |\n| \U0001F4C4 Paginated results | If present, indicate that the results are paginated. |\n| \U0001F3A9 Customized responses supported | If present, indicate that you can use `field` or `fieldset` to customize the response body. |\n\nFor example the request `GET /entities/{entityRole}` have tis informations: \\\n\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:r` or `entity.suppliers:r` (depending on `entityRole`) \\\n\U0001F50D Filtering: `id`, `name` \\\n↕️ Sorting: `id`, `name` \\\n\U0001F4C4 Paginated results \\\n\U0001F3A9 Customized responses supported\n\nKeep in mind that if you are making **company realted requests**, you will need to specify the company id in the requests:\n```\nGET /c/{companyId}/issued_documents\n```"
  contact:
    name: Fatture in Cloud
    url: 'https://www.fattureincloud.it'
    email: info@fattureincloud.it
  license:
    name: ''
  version: v1.0
servers:
  - url: 'https://api-v2.fattureincloud.it/'
tags:
  - name: Auth
    description: Autenticazione
  - name: User
    description: Utente
  - name: Company
    description: Azienda
  - name: Clients and suppliers
    description: Clienti e fornitori
  - name: Products
    description: Prodotti
  - name: Issued documents
  - name: Issued e-invoices
  - name: Received documents
  - name: Received e-invoices
  - name: E-invoices
  - name: Receipts
  - name: Taxes
  - name: Archive
  - name: Info
  - name: Settings
  - name: Cashbook
  - name: Search
  - name: Dashboard
  - name: Calendar
  - name: Notifications
  - name: No authentication
  - name: Entities
  - name: TEST
paths:
  /auth/access_token:
    post:
      tags:
        - Auth
      summary: User authentication
      description: Retrieve the UserAuthentication access token for the given credentials and client id.
      operationId: userAuthentication
      requestBody:
        content:
          application/json:
            schema:
              required:
                - client_id
                - email
                - password
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                client_id:
                  type: string
        required: false
      responses:
        '200':
          description: Authenticated.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        description: UserAuthentication access token.
                        example: 7c497968c6b30ed17bb5a9b8362f159352a92aab2e68a994f1c96ba5c596560da0c535510e8b94933a47c88b99b9fcaf
              example: |-
                {
                  "data": {
                    "access_token": "7c497968c6b30ed17bb5a9b8362f159352a92aab2e68a994f1c96ba5c596560da0c535510e8b94933a47c88b99b9fcaf"
                  }
                }
        '400':
          description: Not authenticated.
          content: {}
      x-private: true
      x-codegen-request-body-name: body
  /user/info:
    get:
      tags:
        - User
      summary: Get user info
      description: "\U0001F464 Person context\n\nGet user email, name and id."
      operationId: userInfo
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: User info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: User unique identifier.
                        example: 12345
                      name:
                        type: string
                        description: User name.
                        example: Mario Rossi
                      first_name:
                        type: string
                        example: Mario
                      last_name:
                        type: string
                        example: Rossi
                      email:
                        type: string
                        example: mario@rossi-example.it
              example: |-
                {
                  "data": {
                    "id": 123,
                    "name": "Mario Rossi",
                    "first_name": "Mario",
                    "last_name": "Rossi",
                    "email": "mario.rossi@example.it"
                  }
                }
        '401':
          description: Unauthorized.
          content: {}
      security:
        - OAuth2Authentication:
            - no scope required
  /user/companies:
    get:
      tags:
        - User
      summary: Get controlled companies
      description: "\U0001F464 Person context\n\nGet a list of the controlled companies and their CompanyAuthentication tokens."
      operationId: userCompanies
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Companies list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      companies:
                        type: array
                        items:
                          $ref: '#/components/schemas/CompanyData'
              example: "{\n  \"data\": {\n    \"companies\": [\n      {\n        \"id\": 2,\n        \"name\": \"Studio Rossi\",\n        \"type\": \"accountant\",\n        \"controlled_companies\": [\n\t      {\n            \"id\": 2,\n            \"name\": \"Studio Rossi\",\n            \"type\": \"company\",\n            \"access_token\": \"cd015011d2dbf8a9d38e810b325b11b56d02e51688e5261a245933b8e677b8b44ff5f0fe5ccaaf1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4fd81273fc1f95bf460b869015cf99acbe\",\n            \"permissions\": {\n              \"fic_situation\": \"write\",\n              \"fic_clients\": \"write\",\n              \"fic_suppliers\": \"write\",\n              \"fic_products\": \"write\",\n              \"fic_issued_docs\": \"write\",\n              \"fic_received_docs\": \"write\",\n              \"fic_receipts\": \"write\",\n              \"fic_calendar\": \"write\",\n              \"fic_archive\": \"write\",\n              \"fic_taxes\": \"write\",\n              \"fic_stock\": \"write\",\n              \"fic_cashbook\": \"write\",\n              \"fic_settings\": \"write\"\n\t\t\t}\n          },\n          {\n            \"id\": 5,\n            \"name\": \"Giuseppe Verdi S.r.l.\",\n            \"type\": \"company\",\n            \"access_token\": \"fd015011d2dbf8a9d38e810b325b11b56d02e51688e5261a245933b8e677b8b44ff5f0fe5ccaaf1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4fd81273fc1f95bf460b869015cf99acbe\",\n            \"permissions\": {\n              \"fic_situation\": \"write\",\n              \"fic_clients\": \"write\",\n              \"fic_suppliers\": \"write\",\n              \"fic_products\": \"write\",\n              \"fic_issued_docs\": \"read\",\n              \"fic_received_docs\": \"read\",\n              \"fic_receipts\": \"write\",\n              \"fic_calendar\": \"write\",\n              \"fic_archive\": \"write\",\n              \"fic_taxes\": \"write\",\n              \"fic_stock\": \"write\",\n              \"fic_cashbook\": \"write\",\n              \"fic_settings\": \"none\"\n\t\t\t}\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Azienda 2 S.n.c.\",\n        \"type\": \"company\",\n        \"access_token\": \"ad015011d2dbf8a9d38e810b325b11b56d02e51688e5261a245933b8e677b8b44ff5f0fe5ccaaf1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4fd81273fc1f95bf460b869015cf99acbe\",\n        \"permissions\": {\n          \"fic_situation\": \"write\",\n          \"fic_clients\": \"write\",\n          \"fic_suppliers\": \"write\",\n          \"fic_products\": \"write\",\n          \"fic_issued_docs\": \"write\",\n          \"fic_received_docs\": \"write\",\n          \"fic_receipts\": \"write\",\n          \"fic_calendar\": \"write\",\n          \"fic_archive\": \"write\",\n          \"fic_taxes\": \"write\",\n          \"fic_stock\": \"write\",\n          \"fic_cashbook\": \"write\",\n          \"fic_settings\": \"write\"\n\t\t}\n      }\n    ]\n  }\n}"
        '401':
          description: Unauthorized.
          content: {}
      security:
        - OAuth2Authentication:
            - no scope required
  /user/password:
    put:
      tags:
        - User
      summary: Modify user password
      description: "\U0001F464 Person context\n\nEdit user's password."
      operationId: userPasswordEdit
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  required:
                    - password
                  type: object
                  properties:
                    password:
                      type: string
        required: true
      responses:
        '200':
          description: Password changed successfully.
          content: {}
        '401':
          description: Unauthorized.
          content: {}
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
      x-codegen-request-body-name: body
  '/c/{companyId}/company/info':
    get:
      tags:
        - Company
      summary: Get company info
      description: 'Get company info like email, license expire date and access info for each document and section'
      operationId: companyInfo
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Company info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Company unique identifier.
                        example: 12345
                      name:
                        type: string
                        description: Company name.
                        example: Mario Rossi S.r.l.
                      email:
                        type: string
                        description: Company email.
                        example: mario@rossi-example.it
                      type:
                        type: string
                        description: Company type.
                        enum:
                          - company
                          - accountant
                      fic:
                        type: boolean
                        description: Determine if the company has a FIC account.
                      fic_plan:
                        type: string
                        description: Company FIC account plan.
                        enum:
                          - trial
                          - standard
                          - premium
                          - premium_plus
                      fic_license_expire:
                        type: string
                        description: Company FIC license expire date.
                        format: date
                      use_fic:
                        type: boolean
                        description: 'Determine if the FIC account is actually used. If type="company" this is always true; if type="accountant" it can be true or false. If false, it means that the accountant uses FIC only to control other companies and not to control itself.'
                      fic_need_setup:
                        type: boolean
                        description: Indicate that the initial setup for FIC is required.
                      dic:
                        type: boolean
                        description: Determine if the company has a DIC account.
                      dic_plan:
                        type: string
                        description: Company DIC account plan.
                        enum:
                          - trial
                      dic_license_expire:
                        type: string
                        description: Company FIC license expire date.
                        format: date
                      use_dic:
                        type: boolean
                        description: 'Determine if the DIC account is actually used. If type=“company” this is always true; if type=“accountant” it can be true or false. If false, it means that the accountant uses DIC only to control other companies and not to control itself.'
                      dic_need_setup:
                        type: boolean
                        description: Indicate that the initial setup for DIC is required.
                      access_info:
                        type: object
                        properties:
                          role:
                            type: string
                            description: Role of the user in this company.
                            enum:
                              - master
                              - subaccount
                              - employee
                          permissions:
                            type: object
                            properties:
                              fic_situation:
                                $ref: '#/components/schemas/PermissionLevel'
                              fic_clients:
                                $ref: '#/components/schemas/PermissionLevel'
                              fic_suppliers:
                                $ref: '#/components/schemas/PermissionLevel'
                              fic_products:
                                $ref: '#/components/schemas/PermissionLevel'
                              fic_issued_documents:
                                $ref: '#/components/schemas/PermissionLevel'
                              fic_received_documents:
                                $ref: '#/components/schemas/PermissionLevel'
                              fic_receipts:
                                $ref: '#/components/schemas/PermissionLevel'
                              fic_calendar:
                                $ref: '#/components/schemas/PermissionLevel'
                              fic_archive:
                                $ref: '#/components/schemas/PermissionLevel'
                              fic_taxes:
                                $ref: '#/components/schemas/PermissionLevel'
                              fic_stock:
                                $ref: '#/components/schemas/PermissionLevel'
                              fic_cashbook:
                                $ref: '#/components/schemas/PermissionLevel'
                              fic_settings:
                                $ref: '#/components/schemas/PermissionLevel'
                            description: Permissions on the company.
                      plan_info:
                        type: object
                        properties:
                          limits:
                            type: object
                            properties:
                              clients:
                                type: integer
                              suppliers:
                                type: integer
                              products:
                                type: integer
                              documents:
                                type: integer
                            description: Limits for this company.
                          functions:
                            type: object
                            properties:
                              example_function:
                                type: boolean
                            description: Access to functions for this company.
              example: |-
                {
                  "data": {
                    "id": 12345,
                    "name": "Mario Rossi S.r.l.",
                    "email": "mario.rossi@example.it",
                    "type": "accountant",
                    "fic": true,
                    "fic_plan": "premium",
                    "fic_license_expire": "2019-04-19",
                    "use_fic": true,
                    "fic_need_setup": false,
                    "dic": true,
                    "dic_plan": "trial",
                    "dic_license_expire": "2018-06-15",
                    "use_dic": false,
                    "dic_need_setup": true,
                    "access_info": {
                      "role": "master",
                      "permissions": {
                        "fic_situation": "write",
                        "fic_clients": "write",
                        "fic_suppliers": "write",
                        "fic_products": "write",
                        "fic_issued_documents": "write",
                        "fic_received_documents": "write",
                        "fic_receipts": "write",
                        "fic_calendar": "write",
                        "fic_archive": "write",
                        "fic_taxes": "write",
                        "fic_stock": "write",
                        "fic_cashbook": "write",
                        "fic_settings": "write",
                        "dic_employees": "write",
                        "dic_timesheet": "write",
                        "dic_settings": "write"
                      }
                    }
                  }
                }
        '401':
          description: Unauthorized.
          content: {}
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
  /register/account:
    post:
      tags:
        - No authentication
      summary: Account registration
      description: Register a new account (user+company).
      operationId: registerCreate
      requestBody:
        content:
          application/json:
            schema:
              required:
                - client_id
                - consents
                - email
                - name
                - password
              type: object
              properties:
                email:
                  type: string
                  description: User and company email.
                  example: mario@rossi.example.it
                password:
                  type: string
                  description: User password.
                  example: qwerty123
                client_id:
                  type: string
                  description: Client id.
                  example: A21ZGnEbycHR6xIKJ9MOLJtavXjfihu9
                name:
                  type: string
                  description: Company name.
                  example: Mario Rossi S.r.l.
                type:
                  type: string
                  description: Type of the company.
                  default: company
                  enum:
                    - company
                    - accountant
                company_type:
                  type: string
                  description: Legal type of the company.
                  default: independent_contractor
                  enum:
                    - independent_contractor
                    - individual
                    - partnership
                    - corporation
                consents:
                  required:
                    - offers
                    - surveys
                  type: object
                  properties:
                    offers:
                      type: boolean
                      description: Consent to receive offers.
                    surveys:
                      type: boolean
                      description: Consent to receive surveys.
                  description: Status of the accepted consents.
        required: true
      responses:
        '200':
          description: Registered.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user_access_token:
                        type: string
                        description: UserAuthentication access token.
                        example: 7c497968c6b30ed17bb5a9b8362f159352a92aab2e68a994f1c96ba5c596560da0c535510e8b94933a47c88b99b9fcaf
                      company_access_token:
                        type: string
                        description: CompanyAuthentication access token.
                        example: 7c497968c6b30ed17bb5a9b8362f159352a92aab2e68a994f1c96ba5c596560d4ff5f0fe5ccaaf1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4f8d74b6388c314752b2ad57e35bd23399
              example: |-
                {
                  "data": {
                    "user_access_token": "7c497968c6b30ed17bb5a9b8362f159352a92aab2e68a994f1c96ba5c596560da0c535510e8b94933a47c88b99b9fcaf",
                    "company_access_token": "7c497968c6b30ed17bb5a9b8362f159352a92aab2e68a994f1c96ba5c596560d4ff5f0fe5ccaaf1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4f8d74b6388c314752b2ad57e35bd23399"
                  }
                }
        '400':
          description: Not registered.
          content: {}
      x-private: true
      x-codegen-request-body-name: body
  /register/availability:
    post:
      tags:
        - No authentication
      summary: Check email availability
      description: Check if is it possible to register a new account with a specific email.
      operationId: registerAvailability
      requestBody:
        content:
          application/json:
            schema:
              required:
                - client_id
                - email
              type: object
              properties:
                email:
                  type: string
                  description: User and company email.
                  example: mario@rossi.example.it
                client_id:
                  type: string
                  description: Client id.
                  example: A21ZGnEbycHR6xIKJ9MOLJtavXjfihu9
        required: true
      responses:
        '200':
          description: Registered.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    required:
                      - availability
                    type: object
                    properties:
                      availability:
                        type: boolean
                        description: Tells if the email is avaliable.
                        example: true
              example: |-
                {
                  "data": {
                    "available": true
                  }
                }
        '400':
          description: Not registered.
          content: {}
      x-private: true
      x-codegen-request-body-name: body
  /register/preview/logo:
    get:
      tags:
        - No authentication
      summary: Preview logo image
      description: Preview logo image
      operationId: registerPreviewLogo
      parameters:
        - name: logo_token
          in: query
          description: Token of the uploaded logo
          required: true
          schema:
            type: string
          example: ynUYGjn7hhbYy7y87HJbjHBKj
      responses:
        '200':
          description: Logo preview
          content:
            image/jpeg:
              schema:
                type: string
                description: Image in JPEG/PNG format
                format: binary
            image/png:
              schema:
                type: string
                description: Image in JPEG/PNG format
                format: binary
        '400':
          description: Status 400
          content: {}
      x-private: true
    post:
      tags:
        - No authentication
      summary: Upload preview logo
      description: Upload the temporary logo for the on-boarding preview.
      operationId: registerLogoPreview
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - filename
                - logo
              properties:
                filename:
                  type: string
                  description: File name.
                  example: logo.png
                logo:
                  type: string
                  description: Logo image file (png/jpg).
                  format: binary
        required: true
      responses:
        '200':
          description: Uploaded.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      logo_token:
                        type: string
                        description: Logo token needed for the preview.
              example: |-
                {
                  "data": {
                    "logo_token": "ynUYGjn7hhbYy7y87HJbjHBKj"
                  }
                }
        '400':
          description: Not uploaded.
          content: {}
      x-private: true
  /register/preview:
    get:
      tags:
        - No authentication
      summary: Get invoice preview
      description: Retrieve the on-boarding HTML preview of the invoice.
      operationId: registerInvoicePreview
      parameters:
        - name: name
          in: query
          description: Company name.
          required: true
          schema:
            type: string
        - name: template_id
          in: query
          description: Template unique identifier.
          required: true
          schema:
            type: integer
        - name: main_color
          in: query
          description: Main color of the invoice (RGB 6-chars hex value).
          required: true
          schema:
            type: string
          example: ef3412
        - name: logo_token
          in: query
          description: Token of the uploaded logo.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Preview.
          content:
            text/html:
              schema:
                type: object
                description: Invoice HTML preview.
        '400':
          description: Not registered.
          content: {}
      x-private: true
  '/c/{companyId}/dashboard/cards':
    get:
      tags:
        - Dashboard
      summary: Get dashboard basic info
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `situation:r`\n\nGet basic info from your dashboard"
      operationId: dashboardCards
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: year
          in: query
          description: Year of interest
          schema:
            type: integer
          example: 2018
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      revenues:
                        type: object
                        properties:
                          trends:
                            type: object
                            properties:
                              <year-1>:
                                type: array
                                example:
                                  - 120
                                  - 100
                                  - 20
                                  - 120
                                  - 100
                                  - 20
                                  - 120
                                  - 100
                                  - 20
                                  - 120
                                  - 100
                                  - 20
                                items:
                                  type: number
                              <year>:
                                type: array
                                example:
                                  - 120
                                  - 100
                                  - 20
                                  - 120
                                  - 100
                                  - 20
                                  - 120
                                  - 100
                                  - 20
                                  - 120
                                  - 100
                                  - 20
                                items:
                                  type: number
                          current_year:
                            type: number
                            description: Revenue amount of the current year
                            example: 9000
                          increasing:
                            type: boolean
                            description: Indication of revenues growth
                            example: true
                      costs:
                        type: object
                        properties:
                          trends:
                            type: object
                            properties:
                              <year>:
                                type: array
                                example:
                                  - 120
                                  - 100
                                  - 20
                                  - 120
                                  - 100
                                  - 20
                                  - 120
                                  - 100
                                  - 20
                                  - 120
                                  - 100
                                  - 20
                                items:
                                  type: number
                              <year-1>:
                                type: array
                                example:
                                  - 120
                                  - 100
                                  - 20
                                  - 120
                                  - 100
                                  - 20
                                  - 120
                                  - 100
                                  - 20
                                  - 120
                                  - 100
                                  - 20
                                items:
                                  type: number
                          current_year:
                            type: number
                            description: Costs amount of the current year
                            example: 9000
                          increasing:
                            type: boolean
                            description: Indication of costs growth
                            example: false
                      vat:
                        type: object
                        properties:
                          quarter:
                            type: number
                            description: Current quarter vat due amount.
                            example: 440
                          quarter_detail:
                            type: array
                            description: Current quarter vat due amount by month
                            example:
                              - 120
                              - 120
                              - 200
                            items:
                              type: number
              example:
                data:
                  revenues:
                    trends:
                      <year-1>:
                        - 120
                        - 100
                        - 20
                      <year>:
                        - 120
                        - 100
                        - 20
                    current_year: 9000
                    increasing: true
                  costs:
                    trends:
                      <year>:
                        - 120
                        - 100
                        - 20
                      <year-1>:
                        - 120
                        - 100
                        - 20
                    current_year: 9000
                    increasing: false
                  vat:
                    quarter: 440
                    quarter_detail:
                      - 120
                      - 200
      security:
        - OAuth2Authentication:
            - 'situation:r'
      x-private: true
  '/c/{companyId}/dashboard/deadlines':
    get:
      tags:
        - Dashboard
      summary: Get dashboard deadlines
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `situation:r` or `calendar:r`\n\nGet the list of all documents deadlines (or expiring date????)"
      operationId: dashboardDeadlines
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: date_from
          in: query
          description: Date from filter.
          required: true
          schema:
            type: string
            format: date
        - name: limit_to
          in: query
          description: Limit results for each type to this number.
          required: true
          schema:
            type: integer
        - name: limit_expired_to
          in: query
          description: Limit expired items to this number.
          required: true
          schema:
            type: integer
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - credits
                  - debts
                  - other
                  - taxes
                type: object
                properties:
                  credits:
                    type: array
                    description: List of income deadlines
                    items:
                      $ref: '#/components/schemas/CalendarItemCredit'
                  debts:
                    type: array
                    description: List of outgoing deadlines
                    items:
                      $ref: '#/components/schemas/CalendarItemDebt'
                  taxes:
                    type: array
                    description: List of taxes
                    items:
                      $ref: '#/components/schemas/CalendarItemTax'
                  other:
                    type: array
                    description: List of other deadlines
                    items:
                      $ref: '#/components/schemas/CalendarItemOther'
              example:
                data:
                  credits:
                    - date: '2017-05-08'
                      title: Parziale fattura nr. 5
                      amount: 30
                      status: not paid
                      expired: true
                      entity:
                        name: Mario Rossi
                      document:
                        id: 8005950
                        type: invoice
                        path: issued_documents/8005950
                    - date: '2017-05-08'
                      title: Fattura nr. 5
                      amount: 105
                      status: paid
                      expired: true
                      entity:
                        id: 234234
                        name: Mario Rossi 2
                        path: clients/234234
                      document:
                        id: 8005950
                        type: invoice
                        path: issued_documents/8005950
                  debts:
                    - date: '2017-02-18'
                      title: Parziale acquisto nr. 5
                      amount: 105
                      status: not paid
                      expired: true
                      entity:
                        id: 765432
                        name: Mario Rossi 3
                        path: suppliers/765432
                      document:
                        id: 12323554
                        type: expense
                        path: expenses/12323554
                  taxes:
                    - date: '2017-01-31'
                      title: Tassa
                      amount: 100
                      status: not paid
                      expired: true
                      document:
                        id: 4369
                        path: taxes/4369
                    - date: '2017-03-31'
                      title: ciao
                      amount: 23
                      status: paid
                      expired: true
                      document:
                        id: 4378
                        path: taxes/4378
                  other:
                    - date: '2017-01-31'
                      title: Promemoria random
                      expired: true
                    - date: '2017-02-06'
                      title: Prova
                      expired: true
      security:
        - OAuth2Authentication:
            - 'situation:r'
            - 'calendar:r'
      x-private: true
  '/c/{companyId}/search':
    get:
      tags:
        - Search
      summary: Search all data
      description: "\U0001F465 Company context\n\nSearch all data (Omnisearch)"
      operationId: searchAll
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: context
          in: query
          description: Context of the search.
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - <empty>
              - clients
              - suppliers
              - issued_documents
              - received_documents
              - invoice
              - credit_note
              - receipt
              - quote
              - order
              - proforma
              - delivery_note
              - work_report
              - supplier_order
              - expense
              - passive_credit_note
              - passive_delivery_note
        - name: entity_id
          in: query
          description: Client or supplier identifier (only for clients/suppliers contexts).
          schema:
            type: integer
        - name: 'filter[0][field]'
          in: query
          description: |-
            ```
            filter[1]
            filter[2]
            ...
            filter[n]
            ```
          schema:
            type: string
        - name: 'filter[0][op]'
          in: query
          schema:
            type: string
            enum:
              - '='
              - '>'
              - <
              - '>='
              - <=
              - contains
              - like
        - name: 'filter[0][value]'
          in: query
          schema:
            type: string
        - name: query
          in: query
          description: Raw search query.
          schema:
            type: string
        - name: sort
          in: query
          description: Tells how to sort the results.
          schema:
            type: string
          example: 'name,-date'
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      clients:
                        type: array
                        items:
                          $ref: '#/components/schemas/LegalEntity'
                      suppliers:
                        type: array
                        items:
                          $ref: '#/components/schemas/LegalEntity'
                      issued_documents:
                        type: array
                        items:
                          $ref: '#/components/schemas/IssuedDocument'
                      received_documents:
                        type: array
                        items:
                          $ref: '#/components/schemas/ReceivedDocument'
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
  '/c/{companyId}/entities/{entityRole}':
    get:
      tags:
        - Clients and suppliers
      summary: List and search entities
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:r` or `entity.suppliers:r` (depending on `entityRole`) \\\n\U0001F50D Filtering: `id`, `code`, `name`, `type`, `vat_number`, `tax_code`, `address_street`, `address_postal_code`, `address_city`, `address_province`, `country`, `email`, `certified_email`, `phone`, `fax`, `notes`, `imported`, `atoka_show`, `e_invoice`, `ei_code`, `created_at`, `updated_at` \\\n↕️ Sorting: `code`, `name`, `type`, `vat_number`, `tax_code`, `address_street`, `address_postal_code`, `address_city`, `address_province`, `country`, `email`, `certified_email`, `phone`, `fax`, `notes`, `e_invoice`, `ei_code`, `created_at`, `updated_at` \\\n\U0001F4C4 Paginated results \\\n\U0001F3A9 Customized responses supported\n\nGet a list of entities that match the filters."
      operationId: entitiesList
      parameters:
        - name: entityRole
          in: path
          required: true
          schema:
            type: string
            enum:
              - clients
              - suppliers
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: 'filter[0][field]'
          in: query
          description: |-
            ```
            filter[1]
            filter[2]
            ...
            filter[n]
            ```
          schema:
            type: string
        - name: 'filter[0][op]'
          in: query
          schema:
            type: string
            enum:
              - '='
              - '>'
              - <
              - '>='
              - <=
              - contains
              - like
        - name: 'filter[0][value]'
          in: query
          schema:
            type: string
        - name: fieldset
          in: query
          description: Name of the fieldset
          schema:
            type: string
          example: basic
        - name: sort
          in: query
          description: List of comma-separated fields for result sorting (minus for desc sorting)
          schema:
            type: string
          example: 'name,-country'
        - name: page
          in: query
          description: Requested page
          schema:
            type: string
            default: '1'
        - name: by_id
          in: query
          description: 'If 1, return an object instead of an array'
          schema:
            type: integer
            default: 0
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Results list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    description: List of entities.
                    items:
                      $ref: '#/components/schemas/LegalEntity'
              example: |-
                {
                  "data": [
                    {
                      "id": 2906095,
                      "code": "123",
                      "name": "Pippo Topolino",
                      "vat_number": "IT01234567890",
                      "tax_code": "",
                      "email": ""
                    },
                    {
                      "id": 2906111,
                      "code": "124",
                      "name": "Pippo Pluto",
                      "vat_number": "",
                      "tax_code": "RSSMRA12A23A324Q",
                      "email": "pippo.pluto@example.it"
                    }
                  ],
                  "current_page": 1,
                  "per_page": 5,
                  "from": 1,
                  "last_page": 2,
                  "to": 5,
                  "total": 6
                }
      security:
        - OAuth2Authentication:
            - 'entity.clients:r'
            - 'entity.suppliers:r'
    post:
      tags:
        - Clients and suppliers
      summary: Create entity
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:a` or `entity.suppliers:a` (depending on `entityRole` parameter)\n\nCreate a new entity (client or supplier)."
      operationId: entitiesCreate
      parameters:
        - name: entityRole
          in: path
          required: true
          schema:
            type: string
            enum:
              - clients
              - suppliers
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/LegalEntity'
        required: true
      responses:
        '200':
          description: Entity created.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LegalEntity'
              example: |-
                {
                  "data": {
                    "id": 2906214,
                    "name": "Mario Bianchi",
                    "country": "Italia"
                  }
                }
      security:
        - OAuth2Authentication:
            - 'entity.clients:a'
            - 'entity.suppliers:a'
      x-codegen-request-body-name: body
  '/c/{companyId}/entities/{entityRole}/{entityId}':
    get:
      tags:
        - Clients and suppliers
      summary: Get entity details
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:r` or `entity.suppliers:r` (depending on `entityRole` parameter) \\\n\U0001F3A9 Customized responses supported\n\nGet details of an existing entity by its unique id."
      operationId: entitiesDetails
      parameters:
        - name: entityRole
          in: path
          required: true
          schema:
            type: string
            enum:
              - clients
              - suppliers
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: entityId
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of comma-separated fields
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset
          schema:
            type: string
          example: detailed
      responses:
        '200':
          description: Entity details.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LegalEntity'
              example: |-
                {
                  "data": {
                    "id": 2906095,
                      "code": "1234",
                      "name": "Mario Bianchi S.r.l.",
                      "type": "company",
                      "first_name": "Mario",
                      "last_name": "Bianchi",
                      "contact_person": "Gianluca Bianchi",
                      "vat_number": "12345678901",
                      "tax_code": "",
                      "address_street": "Via dei Tigli, 123",
                      "address_postal_code": "24010",
                      "address_city": "Sorisole",
                      "address_province": "BG",
                      "address_extra": "",
                      "country": "Italia",
                      "email": "mario.bianchi@mbsrl.example.it",
                      "certified_email": "mario.bianchi@pec.example.it",
                      "phone": "0234423523",
                      "fax": "",
                      "notes": ""
                  }
                }
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'entity.clients:r'
            - 'entity.suppliers:r'
    put:
      tags:
        - Clients and suppliers
      summary: Edit an entity
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:a` or `entity.suppliers:a` (depending on `entityRole` parameter)\n\nEdit an existing entity by its unique id."
      operationId: entitiesEdit
      parameters:
        - name: entityRole
          in: path
          required: true
          schema:
            type: string
            enum:
              - clients
              - suppliers
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: entityId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/LegalEntity'
        required: true
      responses:
        '200':
          description: Entity edited.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LegalEntity'
              example: |-
                {
                  "data": {
                    "id": 2906214,
                    "name": "Mario Bianchi",
                    "country": "Francia"
                  }
                }
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'entity.clients:a'
            - 'entity.suppliers:a'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Clients and suppliers
      summary: Remove an entity
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:a` or `entity.suppliers:a` (depending on `entityRole` parameter)\n\nDelete an existing entity by its unique id."
      operationId: entitiesRemove
      parameters:
        - name: entityRole
          in: path
          required: true
          schema:
            type: string
            enum:
              - clients
              - suppliers
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: entityId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Entity removed.
          content: {}
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'entity.clients:a'
            - 'entity.suppliers:a'
  '/c/{companyId}/entities/{entityRole}/recent':
    get:
      tags:
        - Clients and suppliers
      summary: Recently used entities
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:r` or `entity.suppliers:r` (depending on `entityRole` parameter) \\\n\U0001F3A9 Customized responses supported\n\nGet a list of the last used entities matching with entityRole parameter."
      operationId: entitiesRecentlyUsed
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: entityRole
          in: path
          required: true
          schema:
            type: string
            enum:
              - clients
              - suppliers
        - name: fields
          in: query
          description: List of comma-separated fields
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset
          schema:
            type: string
          example: basic
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Results list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    description: List of entities.
                    items:
                      $ref: '#/components/schemas/LegalEntity'
              example: |-
                {
                  "data": [
                    {
                      "id": 2906095,
                      "code": "123",
                      "name": "Pippo Topolino",
                      "vat_number": "IT01234567890",
                      "tax_code": "",
                      "email": ""
                    },
                    {
                      "id": 2906111,
                      "code": "124",
                      "name": "Pippo Pluto",
                      "vat_number": "",
                      "tax_code": "RSSMRA12A23A324Q",
                      "email": "pippo.pluto@example.it"
                    }
                  ]
                }
      security:
        - OAuth2Authentication:
            - 'entity.clients:r'
            - 'entity.suppliers:r'
      x-private: true
  '/c/{companyId}/entities/{entityRole}/{entityId}/counters':
    get:
      tags:
        - Clients and suppliers
      summary: Get the documents count by type
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:r` or `entity.suppliers:r` (depending on `entityRole` parameter)\n\nGet the number of the documents of the entity"
      operationId: entitiesCount
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: entityRole
          in: path
          required: true
          schema:
            type: string
            enum:
              - clients
              - suppliers
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: entityId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      required:
                        - count
                        - type
                      type: object
                      properties:
                        type:
                          type: string
                          description: document type
                        count:
                          type: string
                          description: number of documents
              example: |-
                {
                  "data": [
                    {
                      "type": "invoice",
                      "count": "13"
                    },
                    {
                      "type": "proforma",
                      "count": "4"
                    }
                  ]
                }
      security:
        - OAuth2Authentication:
            - 'entity.clients:r'
            - 'entity.suppliers:r'
      x-private: true
  '/c/{companyId}/entities/{entityRole}/{entityId}/mobile_analysis':
    get:
      tags:
        - Clients and suppliers
      summary: Get the analysis info (for mobile)
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:r` or `entity.suppliers:r` (depending on `entityRole` parameter)\n\nGet the analysis info (for mobile)"
      operationId: entiesMobileAnalysis
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: entityRole
          in: path
          required: true
          schema:
            type: string
            enum:
              - clients
              - suppliers
        - name: entityId
          in: path
          required: true
          schema:
            type: integer
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      indexes:
                        type: object
                        properties:
                          total:
                            type: number
                          paid:
                            type: number
                          not_paid:
                            type: string
                        description: General indexes for this entity.
                      upcoming_deadlines:
                        type: array
                        description: Upcoming deadlines for this entity. For suppliers the type is CalendarItemDebt.
                        items:
                          $ref: '#/components/schemas/CalendarItemCredit'
              example: |-
                {
                  "data": {
                    "indexes": {
                      "total": 144.34,
                      "paid": 10,
                      "not_paid": 134.34
                    },
                    "upcoming_deadlines": [
                      {
                        "date": "2018-10-08",
                        "title": "Fattura nr. 133",
                        "amount": 9.34,
                        "expired": false,
                        "status": "not_paid",
                        "entity": {
                          "id": 2906113,
                          "name": "Mario Rossi",
                          "path": "clients\/2906113"
                        },
                        "document": {
                          "id": 8006313,
                          "type": "invoice",
                          "path": "issued_documents\/8006313"
                        }
                      }
                    ]
                  }
                }
      security:
        - OAuth2Authentication:
            - 'entity.clients:r'
            - 'entity.suppliers:r'
      x-private: true
  '/c/{companyId}/products':
    get:
      tags:
        - Products
      summary: List and search products
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `products:r` \\\n\U0001F50D Filtering: `id`, `name`, `code`, `net_price`, `gross_price`, `net_cost`, `description`, `category`, `notes`, `in_stock`, `created_at`, `updated_at` \\\n↕️ Sorting: `name`, `code`, `net_price`, `gross_price`, `net_cost`, `description`, `category`, `notes`, `in_stock`, `created_at`, `updated_at` \\\n\U0001F4C4 Paginated results \\\n\U0001F3A9 Customized responses supported\n\nGet a list of products that match the filters."
      operationId: productsList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: 'filter[0][field]'
          in: query
          description: |-
            ```
            filter[1]
            filter[2]
            ...
            filter[n]
            ```
          schema:
            type: string
        - name: 'filter[0][op]'
          in: query
          schema:
            type: string
            enum:
              - '='
              - '>'
              - <
              - '>='
              - <=
              - contains
              - like
        - name: 'filter[0][value]'
          in: query
          schema:
            type: string
        - name: fields
          in: query
          description: List of comma-separated fields
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset
          schema:
            type: string
          example: basic
        - name: sort
          in: query
          description: List of comma-separated fields for result sorting (minus for desc sorting)
          schema:
            type: string
          example: 'name,-code'
        - name: page
          in: query
          description: Requested page
          schema:
            type: string
            default: '1'
        - name: by_id
          in: query
          description: 'If 1, return an object instead of an array'
          schema:
            type: integer
            default: 0
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Results list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    description: List of products.
                    items:
                      $ref: '#/components/schemas/Product'
              example: |-
                {
                  "data": [
                    {
                      "id": 1584515,
                      "name": "Prodotto A",
                      "code": "123324",
                      "net_price": 10,
                      "gross_price": 12.2,
                      "default_vat": {
                        "id": 0,
                        "value": 22,
                        "description": ""
                      },
                      "use_gross_price": false,
                      "measure": "pezzi",
                      "description": "Prodotto con prezzo netto e IVA predefinita",
                      "category": "",
                      "in_stock": false
                    },
                    {
                      "id": 1584516,
                      "name": "Prodotto B",
                      "code": "123326",
                      "net_price": 20,
                      "gross_price": 24.4,
                      "use_gross_price": true,
                      "default_vat": {
                        "id": 0,
                        "value": 22,
                        "description": ""
                      },
                      "measure": "",
                      "description": "Prodotto con prezzo lordo e IVA predefinita",
                      "category": "",
                      "in_stock": false
                    },
                    {
                      "id": 1584517,
                      "name": "Prodotto C",
                      "code": "123327",
                      "net_price": 16,
                      "gross_price": null,
                      "use_gross_price": false,
                      "default_vat": null,
                      "measure": "",
                      "description": "Prodotto con prezzo netto senza IVA predefinita",
                      "category": "",
                      "in_stock": false
                    }
                  ],
                  "current_page": 1,
                  "per_page": 5,
                  "from": 1,
                  "last_page": 2,
                  "to": 5,
                  "total": 6
                }
      security:
        - OAuth2Authentication:
            - 'products:r'
    post:
      tags:
        - Products
      summary: Create product
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `products:a`\n\nCreate a new product."
      operationId: productsCreate
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/Product'
        required: true
      responses:
        '200':
          description: Product created.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
              example:
                data:
                  id: 1584547
                  name: Biscotti
                  code: '123324'
                  net_price: 10
                  gross_price: 10.4
                  use_gross_price: true
                  default_vat:
                    id: 4
                    value: 4
                    description: ''
                  cost: 20
                  measure: ''
                  description: Biscotti alla crema
                  category: ''
                  notes: ''
                  in_stock: true
                  stock_initial: 123
                  stock_current: 10
      security:
        - OAuth2Authentication:
            - 'products:a'
      x-codegen-request-body-name: body
  '/c/{companyId}/products/{productId}':
    get:
      tags:
        - Products
      summary: Product details
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `products:r` \\\n\U0001F3A9 Customized responses supported\n\nGet product details"
      operationId: productsDetails
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of comma-separated fields
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset
          schema:
            type: string
          example: detailed
      responses:
        '200':
          description: Product details.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
              example:
                data:
                  id: 1584547
                  name: Biscotti
                  code: '123324'
                  net_price: 10
                  gross_price: 10.4
                  use_gross_price: true
                  default_vat:
                    id: 4
                    value: 4
                    description: ''
                  cost: 20
                  measure: ''
                  description: Biscotti alla crema
                  category: ''
                  notes: ''
                  in_stock: true
                  stock_initial: 123
                  stock_current: 10
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'products:r'
    put:
      tags:
        - Products
      summary: Edit a product
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `products:a`\n\nEdit an existing product by its unique id."
      operationId: productsEdit
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/Product'
        required: true
      responses:
        '200':
          description: Product edited.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EditProduct'
              example:
                data:
                  id: 1584547
                  name: Biscotti
                  code: '123324'
                  net_price: 10
                  gross_price: 10.4
                  use_gross_price: true
                  default_vat:
                    id: 4
                    value: 4
                    description: ''
                  cost: 20
                  measure: ''
                  description: Biscotti alla crema
                  category: ''
                  notes: ''
                  in_stock: true
                  stock_initial: 123
                  stock_current: 10
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'products:a'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Products
      summary: Remove a product
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `products:a`\n\nDelete an existing product by its unique id."
      operationId: productsRemove
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product removed.
          content: {}
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'products:a'
  '/c/{companyId}/products/recent':
    get:
      tags:
        - Products
      summary: Recently used products
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `products:r` \\\n\U0001F3A9 Customized responses supported\n\nGet a list of the last used products."
      operationId: productsRecentlyUsed
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of comma-separated fields
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset
          schema:
            type: string
          example: basic
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Results list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    description: List of products.
                    items:
                      $ref: '#/components/schemas/Product'
              example: |-
                {
                  "data": [
                    {
                      "id": 1584515,
                      "name": "Prodotto A",
                      "code": "123324",
                      "net_price": 10,
                      "gross_price": 12.2,
                      "default_vat": {
                        "id": 0,
                        "value": 22,
                        "description": ""
                      },
                      "use_gross_price": false,
                      "measure": "pezzi",
                      "description": "Prodotto con prezzo netto e IVA predefinita",
                      "category": "",
                      "in_stock": false
                    },
                    {
                      "id": 1584516,
                      "name": "Prodotto B",
                      "code": "123326",
                      "net_price": 20,
                      "gross_price": 24.4,
                      "use_gross_price": true,
                      "default_vat": {
                        "id": 0,
                        "value": 22,
                        "description": ""
                      },
                      "measure": "",
                      "description": "Prodotto con prezzo lordo e IVA predefinita",
                      "category": "",
                      "in_stock": false
                    },
                    {
                      "id": 1584517,
                      "name": "Prodotto C",
                      "code": "123327",
                      "net_price": 16,
                      "gross_price": null,
                      "use_gross_price": false,
                      "default_vat": null,
                      "measure": "",
                      "description": "Prodotto con prezzo netto senza IVA predefinita",
                      "category": "",
                      "in_stock": false
                    }
                  ]
                }
      security:
        - OAuth2Authentication:
            - 'products:r'
      x-private: true
  '/c/{companyId}/products/{productId}/stock_movements':
    get:
      tags:
        - Products
      summary: Product stock movements list
      description: "\U0001F465 Company context\n\nGet product stock movements list"
      operationId: productsStockMovements
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StockMovement'
      security:
        - OAuth2Authentication:
            - no scope required
    post:
      tags:
        - Products
      summary: Add product movement
      description: "\U0001F465 Company context\n\nAdd product movement"
      operationId: productsAddMovements
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/StockMovement'
        required: true
      responses:
        '200':
          description: Status 200
          content: {}
      security:
        - OAuth2Authentication:
            - no scope required
      x-codegen-request-body-name: body
  '/c/{companyId}/products/{productId}/stock_movements/{movementId}':
    put:
      tags:
        - Products
      summary: Edit product stock movement
      description: "\U0001F465 Company context\n\nEdit an existing product stock movement by its unique id."
      operationId: productsStockMovementEdit
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: movementId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/StockMovement'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StockMovement'
      security:
        - OAuth2Authentication:
            - no scope required
      x-codegen-request-body-name: body
    delete:
      tags:
        - Products
      summary: Delete product stock movement
      description: "\U0001F465 Company context\n\nDelete an existing product stock movement by its unique id."
      operationId: productsStockMovementDelete
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: movementId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status 200
          content: {}
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/products/{productId}/stock_info':
    get:
      tags:
        - Products
      summary: Product stock info
      description: "\U0001F465 Company context\n\nGet product stock info"
      operationId: productsStockInfo
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: productId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    required:
                      - average_cost
                      - average_price
                      - stock_cost
                      - stock_current
                      - stock_initial
                    type: object
                    properties:
                      stock_initial:
                        type: string
                      stock_current:
                        type: string
                      average_cost:
                        type: number
                      average_price:
                        type: number
                      stock_cost:
                        type: number
                      monthly_data:
                        type: array
                        description: TODO
                        items:
                          type: string
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/issued_documents':
    get:
      tags:
        - Issued documents
      summary: List and search documents
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `issued_documents.[documentType]:r` \\\n\U0001F50D Filtering: `type`, `entity.id`, `entity.name`, `entity.vat_number`, `entity.tax_code`, `entity.city`, `entity.province`, `entity.country`, `date`, `number`, `numeration`, `any_subject`, `amount_net`, `amount_vat`, `amount_gross`, `next_due_date`, `created_at`, `updated_at`  \\\n↕️ Sorting: `entity.id`, `entity.name`, `entity.vat_number`, `entity.tax_code`, `entity.city`, `entity.province`, `entity.country`, `date`, `number`, `numeration`, `amount_net`, `amount_vat`, `amount_gross`, `next_due_date`, `created_at`, `updated_at`  \\\n\U0001F4C4 Paginated results \\\n\U0001F3A9 Customized responses supported\n\nGet a list of documents that match the filters."
      operationId: issuedDocumentsList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - invoice
              - credit_note
              - receipt
              - order
              - quote
              - proforma
              - delivery_note
        - name: 'filter[0][field]'
          in: query
          description: |-
            ```
            filter[1]
            filter[2]
            ...
            filter[n]
            ```
          schema:
            type: string
        - name: 'filter[0][op]'
          in: query
          schema:
            type: string
            enum:
              - '='
              - '>'
              - <
              - '>='
              - <=
              - contains
              - like
        - name: 'filter[0][value]'
          in: query
          schema:
            type: string
        - name: filter_type
          in: query
          description: Boolean operator used by the filter.
          schema:
            type: string
            default: and
            enum:
              - and
              - or
        - name: fields
          in: query
          description: List of comma-separated fields
          schema:
            type: string
        - name: fieldset
          in: query
          description: Name of the fieldset
          schema:
            type: string
        - name: sort
          in: query
          description: List of comma-separated fields for result sorting (minus for desc sorting)
          schema:
            type: string
        - name: page
          in: query
          description: Requested page
          schema:
            type: integer
            default: 1
        - name: by_id
          in: query
          description: 'If 1, return an object instead of an array'
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: Items to be shown per page
          schema:
            type: integer
            default: 5
      responses:
        '200':
          description: Results list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    description: List of documents.
                    items:
                      $ref: '#/components/schemas/IssuedDocument'
      security:
        - OAuth2Authentication:
            - 'issued_documents.[documentType]:r'
    post:
      tags:
        - Issued documents
      summary: Create new document
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `issued_documents.[documentType]:a`\n\nCreate a new document."
      operationId: issuedDocumentsCreate
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/IssuedDocument'
                options:
                  type: object
                  properties:
                    entity_search_fields:
                      type: string
                      example: 'entity.id,tax_code,vat_number,code'
                    entity_autocomplete:
                      type: boolean
                    entity_create:
                      type: boolean
                    entity_update:
                      type: string
        required: true
      responses:
        '200':
          description: Document created.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/IssuedDocument'
      security:
        - OAuth2Authentication:
            - 'issued_documents.[documentType]:a'
      x-codegen-request-body-name: body
  '/c/{companyId}/issued_documents/{documentId}':
    get:
      tags:
        - Issued documents
      summary: Get document details
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `issued_documents.[documentType]:r` \\\n\U0001F3A9 Customized responses supported\n\nGet details of an existing document by its unique id."
      operationId: issuedDocumentDetails
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of comma-separated fields
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset
          schema:
            type: string
          example: detailed
      responses:
        '200':
          description: Document details.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/IssuedDocument'
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'issued_documents.[documentType]:r'
    put:
      tags:
        - Issued documents
      summary: Edit a document
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `issued_documents.[documentType]:a`\n\nEdit an existing document by its unique id."
      operationId: issuedDocumentEdit
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/IssuedDocument'
        required: true
      responses:
        '200':
          description: Document edited.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/IssuedDocument'
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'issued_documents.[documentType]:a'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Issued documents
      summary: Remove a document
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `issued_documents.[documentType]:a`\n\nDelete an existing document by its unique id."
      operationId: issuedDocumentRemove
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document removed.
          content: {}
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'issued_documents.[documentType]:a'
  '/c/{companyId}/issued_documents/totals':
    post:
      tags:
        - Issued documents
      summary: Get new document totals
      description: "\U0001F465 Company context\n\nGet the totals of a document"
      operationId: issuedDocumentTotals
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/IssuedDocument'
        required: true
      responses:
        '200':
          description: Totals.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/IssuedDocumentTotals'
              example:
                data:
                  amount_net: 30
                  amount_rivalsa: 1.5
                  amount_net_with_rivalsa: 31.5
                  amount_cassa: 1.58
                  taxable_amount: 33.08
                  not_taxable_amount: 0
                  vat_list:
                    '10':
                      net: 10
                      vat: 1
                    '20':
                      net: 23.08
                      vat: 4.62
                  amount_vat: 5.62
                  amount_gross: 36.41
                  taxable_amount_withholding_tax: 15.75
                  amount_withholding_tax: 0.79
                  taxable_amount_other_withholding_tax: 30
                  amount_other_withholding_tax: 1.5
                  amount_due: 36.41
                  is_enasarco_maximal_exceeded: false
                  payments_sum: 36.41
      security:
        - OAuth2Authentication:
            - no scope required
      x-codegen-request-body-name: body
  '/c/{companyId}/issued_documents/{documentId}/totals':
    post:
      tags:
        - Issued documents
      summary: Get existing document totals
      description: "\U0001F465 Company context\n\nGet existing document totals"
      operationId: issuedDocumentsTotal
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/IssuedDocument'
        required: true
      responses:
        '200':
          description: Totals.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/IssuedDocumentTotals'
      security:
        - OAuth2Authentication:
            - no scope required
      x-codegen-request-body-name: body
  '/c/{companyId}/issued_documents/attachment':
    post:
      tags:
        - Issued documents
      summary: Upload attachment
      description: "\U0001F465 Company context\n\nUpload an attachment to an issued document"
      operationId: issuedDocumentsAttachment
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - attachment
                - filename
              properties:
                filename:
                  type: string
                  description: Name of the file.
                  example: attachment.pdf
                attachment:
                  type: string
                  description: 'Valid format: .png, .jpg, .gif, .pdf, .zip, .xls, .xlsx, .doc, .docx'
                  format: binary
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    required:
                      - attachment_token
                    type: object
                    properties:
                      attachment_token:
                        type: string
                        example: YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/issued_documents/{documentId}/attachment':
    delete:
      tags:
        - Issued documents
      summary: Remove the attachment
      description: "\U0001F465 Company context\n\nRemove the attachment (but not the document)"
      operationId: issuedDocumentsAttachmentRemove
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: File removed.
          content: {}
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/issued_documents/info':
    get:
      tags:
        - Issued documents
      summary: Pre-create info
      description: "\U0001F465 Company context\n\nGet the info needed for the document creation flow."
      operationId: issuedDocumentInfo
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: Issued document type.
          required: true
          schema:
            type: string
            default: invoice
            enum:
              - invoice
              - quote
              - proforma
              - receipt
              - delivery_note
              - credit_note
              - order
              - work_report
              - supplier_order
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Pre-create info.
          content:
            application/json:
              schema:
                required:
                  - ai_templates_list
                  - countries_list
                  - currencies_list
                  - default_values
                  - dn_templates_list
                  - items_default_values
                  - payment_accounts_list
                  - payment_methods_list
                  - templates_list
                  - vat_types_list
                type: object
                properties:
                  numerations:
                    type: object
                    properties: {}
                    description: Next numbers by year and numeration name (for the given document type).
                  dn_numerations:
                    type: object
                    properties: {}
                    description: Next numbers by year and numeration name (for delivery_notes).
                  default_values:
                    type: object
                    properties:
                      default_template:
                        $ref: '#/components/schemas/DocumentTemplate'
                      dn_template:
                        $ref: '#/components/schemas/DocumentTemplate'
                      ai_template:
                        $ref: '#/components/schemas/DocumentTemplate'
                      default_notes:
                        type: string
                        description: Default notes.
                      default_rivalsa:
                        type: number
                        description: Default rivalsa percentage.
                      cassa:
                        type: number
                        description: Default cassa percentage.
                      withholding_tax:
                        type: number
                        description: Default withholding tax percentage.
                      withholding_tax_taxable:
                        type: number
                        description: Default withholding tax taxable percentage.
                      other_withholding_tax:
                        type: number
                        description: Default other withholding tax percentage.
                      use_gross_prices:
                        type: boolean
                        description: Use gross price by default.
                      payment_method:
                        $ref: '#/components/schemas/PaymentMethod'
                    description: Default values for the document.
                  items_default_values:
                    type: object
                    properties:
                      vat:
                        $ref: '#/components/schemas/VatType'
                    description: Default values for the document items.
                  countries_list:
                    type: array
                    description: Countries list.
                    items:
                      type: string
                  currencies_list:
                    type: array
                    description: Currencies list.
                    items:
                      $ref: '#/components/schemas/Currency'
                  templates_list:
                    type: array
                    description: Document templates list.
                    items:
                      $ref: '#/components/schemas/DocumentTemplate'
                  dn_templates_list:
                    type: array
                    description: Delivery note templates list.
                    items:
                      $ref: '#/components/schemas/DocumentTemplate'
                  ai_templates_list:
                    type: array
                    description: Accompanying invoice templates list.
                    items:
                      $ref: '#/components/schemas/DocumentTemplate'
                  payment_methods_list:
                    type: array
                    description: Payment methods list.
                    items:
                      $ref: '#/components/schemas/PaymentMethod'
                  payment_accounts_list:
                    type: array
                    description: Payment accounts list.
                    items:
                      $ref: '#/components/schemas/PaymentAccount'
                  vat_types_list:
                    type: array
                    description: Vat types list.
                    items:
                      $ref: '#/components/schemas/VatType'
              example:
                data:
                  numerations:
                    '2017': {}
                    '2018':
                      /PA: 2
                      a: 2
                  delivery_note_numerations:
                    '2018': {}
                  default_template_id: 12
                  default_delivery_note_template_id: 660
                  default_acc_inv_template_id: 663
                  default_vat_id: 3
                  default_notes: <p>FATTURA NON TRASMESSA AL SISTEMA TESSERA SANITARIA.</p>
                  default_rivalsa: 0
                  default_cassa: 30
                  default_witholding_tax: 20
                  default_witholding_tax_taxable: 100
                  default_other_witholding_tax: 8
                  default_use_gross_prices: false
                  default_payment_method_id: 386685
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/issued_documents/{documentId}/preview':
    get:
      tags:
        - Issued documents
      summary: Document HTML preview
      description: "\U0001F465 Company context\n\nRetrieve the HTML preview of the document."
      operationId: issuedDocumentsPreview
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: template_id
          in: query
          description: Template unique identifier.
          schema:
            type: integer
        - name: show_paypal_button
          in: query
          description: Show the Paypal button on the document.
          schema:
            type: boolean
        - name: show_notification_button
          in: query
          description: Show the payment notification button on the document.
          schema:
            type: boolean
        - name: show_payments
          in: query
          description: Show the payments expirations on the document.
          schema:
            type: boolean
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Preview.
          content:
            text/html:
              schema:
                type: object
                description: Document HTML preview.
        '400':
          description: Status 400
          content: {}
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/issued_documents/{documentId}/email':
    get:
      tags:
        - Issued documents
      summary: Get email data
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `issued_documents.[documentType]:r`\n\nGet pre-compiled email data like subject, body, attachments, SMTP credentials, CC, recipients list."
      operationId: issuedDocumentsEmailGet
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - accompanying_invoice_exists
                  - attachment_exists
                  - body
                  - cc_email
                  - default_sender_email
                  - delivery_note_exists
                  - document_exists
                  - sender_emails_list
                  - subject
                  - supplier_email
                type: object
                properties:
                  supplier_email:
                    type: string
                    description: Document supplier's (or client's) email
                  default_sender_email:
                    required:
                      - email
                      - id
                    type: object
                    properties:
                      id:
                        type: number
                        description: Id
                      email:
                        type: string
                        description: Email address
                    description: Default sender email. (Other emails can be found in `sender_emails_list`)
                  sender_emails_list:
                    type: array
                    description: List of all emails from which the document can be sent
                    items:
                      required:
                        - email
                        - id
                      type: object
                      properties:
                        id:
                          type: number
                          description: Id
                        email:
                          type: string
                          description: Email address
                  cc_email:
                    type: string
                    description: By default is the logged company email. This is the email address to which a copy will be sent.
                  subject:
                    type: string
                    description: Email subject
                  body:
                    type: string
                    description: Email body
                  document_exists:
                    type: boolean
                    description: 'If the document is not a delivery note, this flag will be set to true'
                  delivery_note_exists:
                    type: string
                    description: 'If the document is a delivery note, this flag will be set to true'
                  attachment_exists:
                    type: string
                    description: 'If the document has one or more attachments, this flag will be set to true'
                  accompanying_invoice_exists:
                    type: string
                    description: 'If an accompanying invoice exists, this flag will be set to true'
              example: |-
                {
                  "data": {
                    "supplier_email": null,
                    "default_sender_email": {
                      "id": 0,
                      "email": "no-reply@fattureincloud.it"
                    },
                    "sender_emails_list": [
                      {
                        "id": 0,
                        "email": "no-reply@fattureincloud.it"n      },
                      {
                        "id": 20856,
                        "email": "info@prova.it"n      },
                      {
                        "id": 20857,
                        "email": "matteo@fattureincloud.it"n      }
                    ],
                    "cc_email": "matteo.milesi@hotmail.it",
                    "subject": "Nostra pro forma nr. 1",
                    "body": "Gentile Abece Dario,<br>per vedere la nostra pro forma di  o per scaricarne una copia in versione PDF prema sul bottone sottoastante. Cia\u00f2.<br>Prova<br><br>Ciao<br><br>{{allegati}}<br><br>Cordiali saluti,<br><b>Matteo Milesi Test<\/b>",
                    "document_exists": true,
                    "delivery_note_exists": false,
                    "attachment_exists": false,
                    "accompanying_invoice_exists": false
                  },
                }
      security:
        - OAuth2Authentication:
            - 'issued_documents.[documentType]:r'
    post:
      tags:
        - Issued documents
      summary: Schedule email
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `issued_documents.[documentType]:r`\n\nSchedule email sending of a document."
      operationId: issuedDocumentsEmail
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  required:
                    - attach_pdf
                    - body
                    - include
                    - recipient_email
                    - send_copy
                    - subject
                  type: object
                  properties:
                    sender_id:
                      type: number
                      description: Sender id. Required if `sender_email` is not specified
                    sender_email:
                      type: string
                      description: Sender email. Required if `sender_id` is not specified
                    recipient_email:
                      type: string
                      description: One or more comma separated recipient emails
                    subject:
                      type: string
                      description: Email subject
                    body:
                      type: string
                      description: Email body
                    include:
                      required:
                        - accompanying_invoice
                        - attachment
                        - delivery_note
                        - document
                      type: object
                      properties:
                        document:
                          type: boolean
                          description: 'If set to true, the email will have a button to view the document'
                        delivery_note:
                          type: boolean
                          description: 'If set to true, the email will have a button to view the delivery note'
                        attachment:
                          type: boolean
                          description: 'If set to true, the email will have a button to view the attachment'
                        accompanying_invoice:
                          type: boolean
                          description: 'If set to true, the email will have a button to view the accompanying invoice'
                    attach_pdf:
                      type: boolean
                      description: 'If set to true, documents will be sent as PDF attachments too'
                    send_copy:
                      type: boolean
                      description: 'If set to true, a copy of the email will be sent to the `cc_email` specified by `Get email data`'
        required: true
      responses:
        '200':
          description: Status 200
          content: {}
      security:
        - OAuth2Authentication:
            - 'issued_documents.[documentType]:r'
      x-codegen-request-body-name: body
  '/c/{companyId}/issued_documents/recent':
    get:
      tags:
        - Issued documents
      summary: Recently edited documents
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: reading permission on all types of documents `issued_documents.[documentType]:r` \\\n\nGet a list of the last created/edited issued documents."
      operationId: issuedDocumentsRecentsList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Results list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    description: List of documents.
                    items:
                      $ref: '#/components/schemas/IssuedDocument'
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/issued_documents/counters':
    get:
      tags:
        - Issued documents
      summary: Document counters by type
      description: "\U0001F465 Company context\n\nDocument counters by type"
      operationId: issuedDocumentsCounters
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Pre-create info.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties: {}
              example: |-
                {
                  "data": [
                    {
                      "type": "invoice",
                      "count": 0
                    },
                    {
                      "type": "credit_note",
                      "count": 0
                    },
                    {
                      "type": "receipt",
                      "count": 0
                    },
                    {
                      "type": "quote",
                      "count": 0
                    },
                    {
                      "type": "order",
                      "count": 0
                    },
                    {
                      "type": "proforma",
                      "count": 0
                    },
                    {
                      "type": "delivery_note",
                      "count": 0
                    },
                    {
                      "type": "work_report",
                      "count": 0
                    },
                    {
                      "type": "supplier_order",
                      "count": 0
                    }
                  ]
                }
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
  '/c/{companyId}/issued_documents/{documentId}/e_invoice/send':
    post:
      tags:
        - Issued e-invoices
      summary: Send the e-invoice
      description: "\U0001F465 Company context\n\nSend the e-invoice to SDI"
      operationId: issuedDocumentsSednEInvoice
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    cassa_type:
                      type: string
                      description: 'Value of TipoCassa used (optional, override the company default value).'
                    withholding_tax_causal:
                      type: string
                      description: 'Value of CausalePagamento used (optional, override the company default value).'
        required: true
      responses:
        '200':
          description: Sending info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      current_status:
                        type: string
                        description: |-
                          Current status of the e-invoice.
                          DO NOT USE THIS FOR NOW, IT WILL CHANGE.
      security:
        - OAuth2Authentication:
            - no scope required
      x-codegen-request-body-name: body
  '/c/{companyId}/received_documents':
    get:
      tags:
        - Received documents
      summary: List and search documents
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `received_documents:r` (but if the document is a `passive_delivery_note` you'll need `stock:r` scope) \\\n\U0001F50D Filtering: `id`, `type`, `category`, `description`, `entity.id`, `entity.name`, `date`, `next_due_date`, `amount_gross`, `amount_net`, `amount_vat`, `invoice_number`, `created_at`, `updated_at` \\\n↕️ Sorting: `id`, `category`, `entity.id`, `entity.name`, `date`, `next_due_date`, `amount_gross`, `amount_net`, `amount_vat`, `created_at`, `updated_at` \\\n\U0001F4C4 Paginated results \\\n\U0001F3A9 Customized responses supported\n\nGet a list of documents that match the filters."
      operationId: receivedDocumentsList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: 'filter[0][field]'
          in: query
          description: |-
            ```
            filter[1]
            filter[2]
            ...
            filter[n]
            ```
          schema:
            type: string
        - name: 'filter[0][op]'
          in: query
          schema:
            type: string
            enum:
              - '='
              - '>'
              - <
              - '>='
              - <=
              - contains
              - like
        - name: 'filter[0][value]'
          in: query
          schema:
            type: string
        - name: filter_type
          in: query
          description: Boolean operator used by the filter.
          schema:
            type: string
            default: and
            enum:
              - and
              - or
        - name: fields
          in: query
          description: List of comma-separated fields
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset
          schema:
            type: string
          example: basic
        - name: sort
          in: query
          description: List of comma-separated fields for result sorting (minus for desc sorting)
          schema:
            type: string
          example: 'name,-country'
        - name: page
          in: query
          description: Requested page
          schema:
            type: string
            default: '1'
        - name: by_id
          in: query
          description: 'If 1, return an object instead of an array'
          schema:
            type: integer
            default: 0
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - expense
              - passive_credit_note
              - passive_delivery_note
      responses:
        '200':
          description: Results list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    description: List of documents.
                    items:
                      $ref: '#/components/schemas/ReceivedDocument'
      security:
        - OAuth2Authentication:
            - 'received_documents:r'
    post:
      tags:
        - Received documents
      summary: New document
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `received_documents:a` (but if the document is a `passive_delivery_note` you'll need `stock:a` scope)\n\nCreate a new received document."
      operationId: receivedDocumentsCreate
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/ReceivedDocument'
                pending_id:
                  type: integer
                  description: Pending received document id of the document from which the new document document is created.
        required: true
      responses:
        '200':
          description: Document created.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ReceivedDocument'
      security:
        - OAuth2Authentication:
            - 'received_documents:a'
      x-codegen-request-body-name: body
  '/c/{companyId}/received_documents/{documentId}':
    get:
      tags:
        - Received documents
      summary: Get document details
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `received_documents:r` (but if the document is a `passive_delivery_note` you'll need `stock:r` scope) \\\n\U0001F3A9 Customized responses supported\n\nGet details of an existing document by its unique id."
      operationId: receivedDocumentsDetails
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of comma-separated fields
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset
          schema:
            type: string
          example: detailed
      responses:
        '200':
          description: Document details.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ReceivedDocument'
      security:
        - OAuth2Authentication:
            - 'received_documents:r'
    put:
      tags:
        - Received documents
      summary: Edit a document
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `received_documents:a` (but if the document is a `passive_delivery_note` you'll need `stock:a` scope)\n\nEdit an existing document by its unique id."
      operationId: receivedDocumentsEdit
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/ReceivedDocument'
        required: true
      responses:
        '200':
          description: Document edited.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ReceivedDocument'
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'received_documents:a'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Received documents
      summary: Remove a document
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `received_documents:a` (but if the document is a `passive_delivery_note` you'll need `stock:a` scope)\n\nDelete an existing document by its unique id."
      operationId: receivedDocumentsDelete
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document removed.
          content: {}
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'received_documents:a'
  '/c/{companyId}/received_documents/totals':
    post:
      tags:
        - Received documents
      summary: New document totals
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `received_documents:a` (but if the document is a `passive_delivery_note` you'll need `stock:a` scope)\n\nCalculate totals of the received document passed in the body."
      operationId: receivedDocumentsTotal
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/ReceivedDocument'
        required: true
      responses:
        '200':
          description: Totals.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ReceivedDocumentTotals'
              example: |-
                {
                  "data": {
                    "amount_net": 542,
                    "amount_vat": 24.5,
                    "amount_gross": 531.5,
                    "amount_withholding_tax": 31,
                    "amount_other_withholding_tax": 4,
                    "amount_due": 531.5,
                    "payments_sum": 535.5
                  }
                }
      security:
        - OAuth2Authentication:
            - 'received_documents:a'
      x-codegen-request-body-name: body
  '/c/{companyId}/received_documents/{documentId}/totals':
    post:
      tags:
        - Received documents
      summary: Get existing document totals
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `received_documents:a` (but if the document is a `passive_delivery_note` you'll need `stock:a` scope)\n\nCalculate totals of the received document indicated by the id with the changes passed in the body.\n"
      operationId: receivedDocumentsSingleTotal
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/ReceivedDocument'
        required: true
      responses:
        '200':
          description: Totals.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ReceivedDocumentTotals'
              example: |-
                {
                  "data": {
                    "amount_net": 542,
                    "amount_vat": 24.5,
                    "amount_gross": 531.5,
                    "amount_withholding_tax": 31,
                    "amount_other_withholding_tax": 4,
                    "amount_due": 531.5,
                    "payments_sum": 535.5
                  }
                }
      security:
        - OAuth2Authentication:
            - 'received_documents:a'
      x-codegen-request-body-name: body
  '/c/{companyId}/received_documents/attachment':
    post:
      tags:
        - Received documents
      summary: Upload attachment
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `received_documents:a` (but if the document is a `passive_delivery_note` you'll need `stock:a` scope)\n\nUpload an attachment and return the relative token."
      operationId: receivedDocumentsAttachment
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - attachment
                - filename
              properties:
                filename:
                  type: string
                  description: Name of the file.
                  example: attachment.pdf
                attachment:
                  type: string
                  description: 'Valid format: .png, .jpg, .gif, .pdf, .zip, .xls, .xlsx, .doc, .docx'
                  format: binary
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    required:
                      - attachment_token
                    type: object
                    properties:
                      attachment_token:
                        type: string
                        example: YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw
      security:
        - OAuth2Authentication:
            - 'received_documents:a'
  '/c/{companyId}/received_documents/{documentId}/attachment':
    delete:
      tags:
        - Received documents
      summary: Remove the attachment
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `received_documents:a` (but if the document is a `passive_delivery_note` you'll need `stock:a` scope)\n\nRemove the attachment (but not the document)"
      operationId: receivedDocumentsSingleAttachment
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: File removed.
          content: {}
      security:
        - OAuth2Authentication:
            - 'received_documents:a'
  '/c/{companyId}/received_documents/info':
    get:
      tags:
        - Received documents
      summary: Pre-create info
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `received_documents:r`\n\nGet the info needed for the document creation flow."
      operationId: receivedDocumentsInfo
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: Received document type.
          required: true
          schema:
            type: string
            default: expense
            enum:
              - expense
              - passive_credit_note
              - passive_delivery_note
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Pre-create info.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    required:
                      - categories_list
                      - countries_list
                      - currencies_list
                      - default_values
                      - items_default_values
                      - payment_accounts_list
                      - vat_types_list
                    type: object
                    properties:
                      default_values:
                        required:
                          - detailed
                        type: object
                        properties:
                          detailed:
                            type: boolean
                      items_default_values:
                        required:
                          - vat
                        type: object
                        properties:
                          vat:
                            type: integer
                            description: The id of the vat
                      countries_list:
                        type: array
                        items:
                          type: string
                      currencies_list:
                        type: array
                        items:
                          $ref: '#/components/schemas/Currency'
                      categories_list:
                        type: array
                        items:
                          type: string
                      payment_accounts_list:
                        type: array
                        items:
                          $ref: '#/components/schemas/PaymentAccount'
                      vat_types_list:
                        type: array
                        items:
                          $ref: '#/components/schemas/VatType'
              example: |-
                {
                  "data": {
                    "default_values": {
                      "detailed": false
                    },
                    "items_default_values": {
                      "vat": null
                    },
                    "countries_list": [
                      ...
                    ],
                    "currencies_list": [
                      ...
                    ],
                    "categories_list": [
                      ...
                    ],
                    "payment_accounts_list": [
                      {
                        "id": 1,
                        "name": "Banca"
                      },
                    ],
                    "vat_types_list": [
                      {
                        "id": 1,
                        "value": 22,
                        "description": "IVA Itliana"
                      },
                    ]
                  },
                }
      security:
        - OAuth2Authentication:
            - 'received_documents:r'
  '/c/{companyId}/received_documents/pending/{documentId}':
    delete:
      tags:
        - Received e-invoices
      summary: Remove a pending document
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `received_documents:a`\n\nDelete an existing pending document by its unique id."
      operationId: receivedPendingDocumentsDelete
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Document removed.
          content: {}
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'received_documents:a'
      x-private: true
  '/c/{companyId}/received_documents/pending/{documentId}/create':
    get:
      tags:
        - Received e-invoices
      summary: Get pending document create data
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `received_documents:r`\n\nGet ready-to-use data for received document creation."
      operationId: receivedPendingDocumentsCreateData
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Document details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                      properties:
                        type: object
                        properties:
                          type:
                            type: object
                            properties:
                              type:
                                type: string
                          description:
                            type: object
                            properties:
                              type:
                                type: string
                          example:
                            type: object
                            properties:
                              type:
                                type: string
                              properties:
                                type: object
                                properties:
                                  date:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                  amount_gross:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                  amount_vat:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                  amount_net:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                  currency:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                      properties:
                                        type: object
                                        properties:
                                          id:
                                            type: object
                                            properties:
                                              type:
                                                type: string
                                          exchange_rate:
                                            type: object
                                            properties:
                                              type:
                                                type: string
                                          symbol:
                                            type: object
                                            properties:
                                              type:
                                                type: string
                                  amount_withholding_tax:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                  rc_center:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                  category:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                  description:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                  tax_deductibility:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                  vat_deductibility:
                                    type: object
                                    properties:
                                      type:
                                        type: string
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'received_documents:r'
      x-private: true
  /e_invoices/preview:
    get:
      tags:
        - E-invoices
        - Issued e-invoices
        - Received e-invoices
      summary: Preview an e-invoice
      description: 'Get styled xml of an electronic invoice if **html parameter** has been set to true, otherwise return xml file.'
      operationId: einvoicePreview
      parameters:
        - name: invoice_token
          in: query
          description: '[Only if url is not specified] Permanent token of the issued_document (invoice or credit_note) to preview.'
          schema:
            type: string
        - name: url
          in: query
          description: '[Only if invoice_token is not specified] Url of a well-formed XML e-invoice.'
          schema:
            type: string
        - name: stylesheet
          in: query
          description: '[Only if not html] Stylesheet to apply on the XML.'
          schema:
            type: string
            default: standard
            enum:
              - standard
              - assosoftware
        - name: html
          in: query
          description: 'If true, returns an HTML preview.'
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: E-invoice preview.
          content:
            text/xml:
              schema:
                type: object
                description: XML preview.
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/taxes':
    get:
      tags:
        - Taxes
      summary: List and search F24
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `taxes:r` \\\n\U0001F50D Filtering: `due_date`, `status`, `amount`, `description` \\\n↕️ Sorting: `due_date`, `status`, `amount`, `description` \\\n\U0001F4C4 Paginated results \\\n\U0001F3A9 Customized responses supported\n\nGet a list of F24 that match the filters."
      operationId: taxes
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: 'filter[0][field]'
          in: query
          description: |-
            ```
            filter[1]
            filter[2]
            ...
            filter[n]
            ```
          schema:
            type: string
        - name: 'filter[0][op]'
          in: query
          schema:
            type: string
            enum:
              - '='
              - '>'
              - <
              - '>='
              - <=
              - contains
              - like
        - name: 'filter[0][value]'
          in: query
          schema:
            type: string
        - name: filter_type
          in: query
          description: Boolean operator used by the filter.
          schema:
            type: string
            default: and
            enum:
              - and
              - or
        - name: fields
          in: query
          description: List of comma-separated fields
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset
          schema:
            type: string
          example: basic
        - name: sort
          in: query
          description: List of comma-separated fields for result sorting (minus for desc sorting)
          schema:
            type: string
          example: 'name,-country'
        - name: page
          in: query
          description: Requested page
          schema:
            type: string
            default: '1'
        - name: by_id
          in: query
          description: 'If 1, return an object instead of an array'
          schema:
            type: integer
            default: 0
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Results list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    description: List of documents.
                    items:
                      $ref: '#/components/schemas/F24'
      security:
        - OAuth2Authentication:
            - 'taxes:r'
    post:
      tags:
        - Taxes
      summary: New F24
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `taxes:a`\n\nAdd new F24"
      operationId: taxesAdd
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/F24'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/F24'
      security:
        - OAuth2Authentication:
            - 'taxes:a'
      x-codegen-request-body-name: body
  '/c/{companyId}/taxes/{documentId}':
    get:
      tags:
        - Taxes
      summary: Get F24 details
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `taxes:r` \\\n\U0001F3A9 Customized responses supported\n\nGet details of an existing document by its unique id."
      operationId: taxesDetails
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of comma-separated fields.
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset.
          schema:
            type: string
          example: detailed
      responses:
        '200':
          description: Document details.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/F24'
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'taxes:r'
    put:
      tags:
        - Taxes
      summary: Edit F24
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `taxes:a`\n\nEdit an existing F24 by its unique id."
      operationId: taxesEdit
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/F24'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/F24'
      security:
        - OAuth2Authentication:
            - 'taxes:a'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Taxes
      summary: Remove a F24
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `taxes:a`\n\nDelete an existing document by its unique id."
      operationId: taxesDelete
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document removed.
          content: {}
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'taxes:a'
  '/c/{companyId}/taxes/attachment':
    post:
      tags:
        - Taxes
      summary: Upload attachment
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `taxes:a`\n\nUpload an attachment an return its relative token."
      operationId: taxesAttachment
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  required:
                    - attachment
                    - filename
                  type: object
                  properties:
                    filename:
                      type: string
                      description: Name of the file
                      example: newf24.pdf
                    attachment:
                      type: string
                      description: 'Valid format: .png, .jpg, .gif, .pdf, .zip'
                      format: binary
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    required:
                      - attachment_token
                    type: object
                    properties:
                      attachment_token:
                        type: string
                        example: YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw
      security:
        - OAuth2Authentication:
            - 'taxes:a'
      x-codegen-request-body-name: body
  '/c/{companyId}/taxes/{documentId}/attachment':
    delete:
      tags:
        - Taxes
      summary: Remove an attachment
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `taxes:a`\n\nRemove an attachment (but not the F24)"
      operationId: taxesRemoveAttachment
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File removed.
          content: {}
      security:
        - OAuth2Authentication:
            - 'taxes:a'
  '/c/{companyId}/cashbook':
    get:
      tags:
        - Cashbook
      summary: List and search cashbook entries
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `cashbook:r` \\\n\nGet a list of cashbook notes that match the filters."
      operationId: cashbookList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: date_from
          in: query
          description: Start date.
          required: true
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          description: End date.
          required: true
          schema:
            type: string
            format: date
        - name: year
          in: query
          schema:
            type: integer
        - name: type
          in: query
          description: Filter cashbook by type.
          schema:
            type: string
            enum:
              - all
              - in
              - out
        - name: payment_account_id
          in: query
          description: Filter by payment account.
          schema:
            type: integer
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Results list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    description: List of documents.
                    items:
                      $ref: '#/components/schemas/CashbookEntry'
      security:
        - OAuth2Authentication:
            - 'cashbook:r'
    post:
      tags:
        - Cashbook
      summary: New cashbook entry
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `cashbook:a`\n\nCreate a new cashbook entry. It is possible to create an entry as an income or an outcome."
      operationId: cashbookCreate
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/CashbookEntry'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CashbookEntry'
      security:
        - OAuth2Authentication:
            - 'cashbook:a'
      x-private: true
      x-codegen-request-body-name: body
  '/c/{companyId}/cashbook/{documentId}':
    get:
      tags:
        - Cashbook
      summary: Get cashbook entry details
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `cashbook:r` \\\n\U0001F3A9 Customized responses supported\n\nGet details of an existing document by its unique id."
      operationId: cashbookDetails
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of comma-separated fields.
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset.
          schema:
            type: string
          example: detailed
      responses:
        '200':
          description: Document details.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CashbookEntry'
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'cashbook:r'
      x-private: true
    put:
      tags:
        - Cashbook
      summary: Edit cashbook entry
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `cashbook:a`\n\nEdit an existing cashbook entry by its unique id."
      operationId: cashbookEdit
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/CashbookEntry'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CashbookEntry'
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'cashbook:a'
      x-private: true
      x-codegen-request-body-name: body
    delete:
      tags:
        - Cashbook
      summary: Remove a cashbook entry
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `cashbook:a`\n\nDelete an existing cashbook entry by its unique id."
      operationId: cashbookDelete
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document removed.
          content: {}
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'cashbook:a'
      x-private: true
  '/c/{companyId}/receipts':
    get:
      tags:
        - Receipts
      summary: List and search documents
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `receipts:r` \\\n\U0001F50D Filtering: `date`, `type`, `description`, `rc_center`, `created_at`, `updated_at` \\\n↕️ Sorting: `date`, `rc_center`, `created_at`, `updated_at` \\\n\U0001F4C4 Paginated results \\\n\U0001F3A9 Customized responses supported\n\nGet a list of receipt documents that match the filters."
      operationId: receipt
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: 'filter[0][field]'
          in: query
          description: |-
            ```
            filter[1]
            filter[2]
            ...
            filter[n]
            ```
          schema:
            type: string
        - name: 'filter[0][op]'
          in: query
          schema:
            type: string
            enum:
              - '='
              - '>'
              - <
              - '>='
              - <=
              - contains
              - like
        - name: 'filter[0][value]'
          in: query
          schema:
            type: string
        - name: fields
          in: query
          description: Lista of comma-separated fields
          schema:
            type: string
          example: 'id,number,series,type'
        - name: fieldset
          in: query
          schema:
            type: string
            enum:
              - basic
              - detailed
        - name: page
          in: query
          description: Requested page
          schema:
            type: number
        - name: per_page
          in: query
          description: Result per page
          schema:
            type: number
        - name: sort
          in: query
          description: List of comma-separated fields for result sorting (minus for desc sorting)
          schema:
            type: string
          example: '-date'
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Receipt'
      security:
        - OAuth2Authentication:
            - 'receipts:r'
    post:
      tags:
        - Receipts
      summary: New receipt
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `receipts:a`\n\nCreate a new receipt."
      operationId: receiptCreate
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/Receipt'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Receipt'
      security:
        - OAuth2Authentication:
            - 'receipts:a'
      x-codegen-request-body-name: body
  '/c/{companyId}/receipts/{documentId}':
    get:
      tags:
        - Receipts
      summary: Get receipt details
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `receipts:r` \\\n\U0001F3A9 Customized responses supported\n\nGet details of an existing document by its unique id."
      operationId: receiptsDetails
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of comma-separated fields.
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset.
          schema:
            type: string
          example: detailed
      responses:
        '200':
          description: Document details.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Receipt'
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'receipts:r'
    put:
      tags:
        - Receipts
      summary: Edit receipt
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `receipts:a`\n\nEdit an existing document by its unique id."
      operationId: receiptsEdit
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/Receipt'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Receipt'
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'receipts:a'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Receipts
      summary: Remove a receipt
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `receipts:a`\n\nDelete an existing document by its unique id."
      operationId: receiptsDelete
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document removed.
          content: {}
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'receipts:a'
  '/c/{companyId}/receipts/info':
    get:
      tags:
        - Receipts
      summary: Pre-create info
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `receipts:r`\n\nGet the info needed for the document creation flow."
      operationId: receiptsInfo
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Pre-create info.
          content:
            application/json:
              schema:
                required:
                  - categories_list
                  - payment_accounts_list
                  - rc_centers_list
                  - series
                  - series_list
                  - vat_types_list
                type: object
                properties:
                  series:
                    type: object
                    properties: {}
                    description: 'Next number by year, receipt type and numeration name.'
                  series_list:
                    type: array
                    description: List of series used in the past.
                    items:
                      type: string
                  rc_centers_list:
                    type: array
                    description: List of revenue centers used in the past.
                    items:
                      type: string
                  payment_accounts_list:
                    type: array
                    description: User payment accounts list.
                    items:
                      $ref: '#/components/schemas/PaymentAccount'
                  categories_list:
                    type: array
                    description: List of categories used in the past.
                    items:
                      type: string
                  vat_types_list:
                    type: array
                    description: 'List of user vat types with the default 22%, 10%, 4% and 0% vats.'
                    items:
                      $ref: '#/components/schemas/VatType'
              example: |-
                {
                  "data": {
                    "series": {
                      "2016": {
                        "sales_receipts": {
                          "": 12,
                          "A": 5,
                        },
                        "till_receipts": {
                          "": 6,
                          "A": 2
                        }
                      },
                      "2017": {
                        "sales_receipts": {
                          "": 14,
                          "A": 7,
                          "B": 1
                        },
                        "till_receipts": {
                          "": 1,
                          "A": 3
                        }
                      },
                      "2018": {
                        "sales_receipts": {
                          "": 3
                        }
                      },
                      "2019": {
                        "sales_receipts": {
                          "": 104,
                          "A": 22,
                          "AB": 26,
                        },
                        "till_receipts": {
                          "": 21,
                          "A": 24,
                          "B": 25
                        }
                      },
                      "2020": {
                        "sales_receipts": {
                          "A": 24
                        }
                      }
                    },
                    "series_list": [
                      "A",
                      "AB",
                      "B",
                    ],
                    "rc_centers_list": [
                      "Negozio Via Verdi",
                      "Negozio Via XX"
                    ],
                    "payment_accounts_list": [
                      {
                        "id": 92,
                        "name": "Banca dei topini brutti"
                      },
                      {
                        "id": 109,
                        "name": "Conto Corrente"
                      },
                      {
                        "id": 134,
                        "name": "Conto Corrente Secondario"
                      },
                      {
                        "id": 273,
                        "name": "Carta di credito"
                      },
                    ],
                    "categories_list": [
                      "Alimentari",
                      "Vendite",
                      "Vendite speciali"
                    ],
                    "vat_types_list": [
                      {
                        "id": 1363,
                        "value": 0,
                        "description": "324-Non imp.art.8 c.1 lett.c"
                      },
                      {
                        "id": 1337,
                        "value": 22,
                        "description": "Split Payment   cessione dei pagamenti ai sensi dell art. 17 ter"n      },
                      {
                        "id": 1334,
                        "value": 0,
                        "description": "Non imp. art. 17 c. 6 DPR 633\/72 e s.m.i."n      },
                      {
                        "id": 1333,
                        "value": 0,
                        "description": "Non sogg. art. 74 c. 7 e 8 DPR 633\/72"n      },
                      {
                        "id": 1332,
                        "value": 0,
                        "description": "Non imp. art. 17 c. 6 lett. A TER DPR 633\/72"
                      },
                      {
                        "id": 0,
                        "value": 22,
                        "description": ""
                      },
                      {
                        "id": 3,
                        "value": 10,
                        "description": ""
                      },
                      {
                        "id": 4,
                        "value": 4,
                        "description": ""
                      },
                      {
                        "id": 6,
                        "value": 0,
                        "description": ""
                      }
                    ]
                  }
                }
      security:
        - OAuth2Authentication:
            - 'receipts:r'
  '/c/{companyId}/receipts/monthly_totals':
    get:
      tags:
        - Receipts
      summary: Get monthly totals
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `receipts:r`\n\nGet the monthly totals by year and receipt type."
      operationId: receiptsMonthlyTotal
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Monthly totals.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: {}
              example: |-
                {
                  "data": [
                    {
                      "net": 0,
                      "gross": 0,
                      "count": 0
                    },
                    {
                      "net": 102.46,
                      "gross": 125,
                      "count": 2
                    },
                    {
                      "net": 42.62,
                      "gross": 52,
                      "count": 1
                    },
                    {
                      "net": 0,
                      "gross": 0,
                      "count": 0
                    },
                    {
                      "net": 1430.86,
                      "gross": 1744,
                      "count": 66
                    },
                    {
                      "net": 0,
                      "gross": 0,
                      "count": 5
                    },
                    {
                      "net": 0,
                      "gross": 0,
                      "count": 0
                    },
                    {
                      "net": 0,
                      "gross": 0,
                      "count": 0
                    },
                    {
                      "net": 0,
                      "gross": 0,
                      "count": 0
                    },
                    {
                      "net": 0,
                      "gross": 0,
                      "count": 0
                    },
                    {
                      "net": 0,
                      "gross": 0,
                      "count": 0
                    },
                    {
                      "net": 0,
                      "gross": 0,
                      "count": 0
                    }
                  ],
                }
      security:
        - OAuth2Authentication:
            - 'receipts:r'
  '/c/{companyId}/archive':
    get:
      tags:
        - Archive
      summary: List and search archive document
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `archive:r` \\\n\U0001F50D Filtering: `date`, `category`, `description` \\\n↕️ Sorting: `date`, `category`, `description` \\\n\U0001F4C4 Paginated results \\\n\U0001F3A9 Customized responses supported\n\nGet a list of documents in the archive that match the filters."
      operationId: archiveList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: 'filter[0][field]'
          in: query
          description: |-
            ```
            filter[1]
            filter[2]
            ...
            filter[n]
            ```
          schema:
            type: string
        - name: 'filter[0][op]'
          in: query
          schema:
            type: string
            enum:
              - '='
              - '>'
              - <
              - '>='
              - <=
              - contains
              - like
        - name: 'filter[0][value]'
          in: query
          schema:
            type: string
        - name: filter_type
          in: query
          description: Boolean operator used by the filter.
          schema:
            type: string
            default: and
            enum:
              - and
              - or
        - name: fields
          in: query
          description: List of comma-separated fields.
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset.
          schema:
            type: string
          example: basic
        - name: sort
          in: query
          description: List of comma-separated fields for result sorting (minus for desc sorting).
          schema:
            type: string
          example: 'name,-country'
        - name: page
          in: query
          description: Requested page.
          schema:
            type: string
            default: '1'
        - name: by_id
          in: query
          description: 'If 1, return an object instead of an array.'
          schema:
            type: integer
            default: 0
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Results list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    description: List of documents.
                    items:
                      $ref: '#/components/schemas/ArchiveDocument'
      security:
        - OAuth2Authentication:
            - 'archive:r'
    post:
      tags:
        - Archive
      summary: New document to be stored
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `archive:a`\n\nAdd a new document into archive"
      operationId: archiveCreateDocument
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/ArchiveDocument'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ArchiveDocument'
      security:
        - OAuth2Authentication:
            - 'archive:a'
      x-codegen-request-body-name: body
  '/c/{companyId}/archive/{documentId}':
    get:
      tags:
        - Archive
      summary: Get archive document details
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `archive:r` \\\n\U0001F3A9 Customized responses supported\n\nGet details of an existing document by its unique id."
      operationId: archiveDetails
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of comma-separated fields.
          schema:
            type: string
          example: 'id,name,code'
        - name: fieldset
          in: query
          description: Name of the fieldset.
          schema:
            type: string
          example: detailed
      responses:
        '200':
          description: Document details.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ArchiveDocument'
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'archive:r'
    put:
      tags:
        - Archive
      summary: Edit archive document
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `archive:a`\n\nEdit an existing document"
      operationId: archiveEdit
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/ArchiveDocument'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ArchiveDocument'
      security:
        - OAuth2Authentication:
            - 'archive:a'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Archive
      summary: Remove a archive document
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `archive:a`\n\nDelete an existing document by its unique id."
      operationId: archiveDelete
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document removed.
          content: {}
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'archive:a'
  '/c/{companyId}/archive/attachment':
    post:
      tags:
        - Archive
      summary: Upload attachment
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `archive:a`\n\nUpload an attachment to a document into archive section"
      operationId: archiveAttachment
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - attachment
                - filename
              properties:
                filename:
                  type: string
                  description: Name of the file.
                  example: newarchive_doc.pdf
                attachment:
                  type: string
                  description: 'Valid format: .png, .jpg, .gif, .pdf, .zip, .doc, .xls'
                  format: binary
        required: true
      responses:
        '200':
          description: Status 200
          content: {}
      security:
        - OAuth2Authentication:
            - 'archive:a'
  '/c/{companyId}/calendar':
    get:
      tags:
        - Calendar
      summary: Get deadlines
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `situation:r` or `calendar:r`\n\nGet deadlines"
      operationId: calendarDeadlines
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: date_from
          in: query
          description: 'Date from filter. Required only if `date_to` is specified too. If both are not present, the date filter will be set to the current year.'
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          description: Date to filter. Required only if `date_from` is specified too
          schema:
            type: string
        - name: type
          in: query
          description: Type filter
          required: true
          schema:
            type: string
            enum:
              - all
              - credits
              - debts
              - taxes
              - other
        - name: include_paid
          in: query
          description: Include paid deadlines
          schema:
            type: boolean
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - credits
                  - debts
                  - other
                  - taxes
                type: object
                properties:
                  credits:
                    type: array
                    description: List of income deadlines
                    items:
                      $ref: '#/components/schemas/CalendarItemCredit'
                  debts:
                    type: array
                    description: List of outgoing deadlines
                    items:
                      $ref: '#/components/schemas/CalendarItemDebt'
                  taxes:
                    type: array
                    description: List of taxes
                    items:
                      $ref: '#/components/schemas/CalendarItemTax'
                  other:
                    type: array
                    description: List of other deadlines
                    items:
                      $ref: '#/components/schemas/CalendarItemOther'
              example: |-
                {
                  "data": {
                    "credits": [
                      {
                        "date": "2017-05-08",
                        "title": "Parziale fattura nr. 5",
                        "amount": 30,
                        "status": "not paid",
                        "expired": true,
                        "entity": {
                          "id": null,
                          "name": "Mario Rossi",
                          "path": null
                        },
                        "document": {
                          "id": 8005950,
                          "type": "invoice",
                          "path": "issued_documents/8005950"n        }
                      },
                      {
                        "date": "2017-05-08",
                        "title": "Fattura nr. 5",
                        "amount": 105,
                        "status": "paid",
                        "expired": true,
                        "entity": {
                          "id": 234234,
                          "name": "Mario Rossi 2",
                          "path": "clients/234234"
                        },
                        "document": {
                          "id": 8005950,
                          "type": "invoice",
                          "path": "issued_documents/8005950"
                        }
                      },
                    ],
                    "debts": [
                      {
                        "date": "2017-02-18",
                        "title": "Parziale acquisto nr. 5",
                        "amount": 105,
                        "status": "not paid",
                        "expired": true,
                        "entity": {
                          "id": 765432,
                          "name": "Mario Rossi 3",
                          "path": "suppliers/765432"n        },
                        "document": {
                          "id": 12323554,
                          "type": "expense",
                          "path": "expenses/12323554"n        }
                      }
                    ],
                    "taxes": [
                      {
                        "date": "2017-01-31",
                        "title": "Tassa",
                        "amount": 100,
                        "status": "not paid",
                        "expired": true,
                        "document": {
                          "id": 4369,
                          "path": "taxes/4369"
                        }
                      },
                      {
                        "date": "2017-03-31",
                        "title": "ciao",
                        "amount": 23,
                        "status": "paid",
                        "expired": true,
                        "document": {
                          "id": 4378,
                          "path": "taxes/4378"n        }
                      }
                    ],
                    "other": [
                      {
                        "date": "2017-01-31",
                        "title": "Promemoria random",
                        "expired": true
                      },
                      {
                        "date": "2017-02-06",
                        "title": "Prova",
                        "expired": true
                      }
                    ]
                  }
                }
      security:
        - OAuth2Authentication:
            - 'situation:r'
            - 'calendar:r'
      x-private: true
  /info/countries:
    get:
      tags:
        - Info
      summary: Get the countries list
      description: Get the list of the countries supported by entities and documents.
      operationId: infoCountries
      responses:
        '200':
          description: Countries list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: string
      security:
        - OAuth2Authentication:
            - no scope required
  /info/settings_countries:
    get:
      tags:
        - Info
      summary: Get the settings countries list
      description: Get the list of the countries supported by the company settings.
      operationId: infoCountriesSettings
      responses:
        '200':
          description: Countries list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: string
              example: |-
                {
                  "data": [
                    "Italia",
                    "Bahamas",
                    "Burkina Faso",
                    "Cameroon",
                    "Denmark",
                    "United Arab Emirates",
                    "Germany",
                    "Japan",
                    "Haiti",
                    "India",
                    "Kenya",
                    "Mali",
                    "Norway",
                    "Czech Republic",
                    "Senegal",
                    "Taiwan",
                    "Venezuela"
                  ]
                }
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
  /info/cities:
    get:
      tags:
        - Info
      summary: Get the cities list
      description: Get the list of the Italian cities.
      operationId: infoCities
      parameters:
        - name: postal_code
          in: query
          description: Postal code for filtering.
          schema:
            type: string
        - name: city
          in: query
          description: City for filtering (ignored if postal_code is passed).
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Cities list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      required:
                        - city
                        - postal_code
                        - province
                      type: object
                      properties:
                        postal_code:
                          type: string
                        city:
                          type: string
                        province:
                          type: string
              example: |-
                {
                  "data": [
                    {
                      "postal_code": "89867",
                      "city": "Zungri",
                      "province": "VV"
                    },
                    {
                      "postal_code": "83020",
                      "city": "Aiello del Sabato",
                      "province": "AV"
                    },
                    {
                      "postal_code": "83011",
                      "city": "Altavilla Irpina",
                      "province": "AV"
                    }
                  ]
                }
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/info/vat_types':
    get:
      tags:
        - Info
      summary: Vat types list
      description: "\U0001F465 Company context\n\U0001F512 Required scope: `settings:r` \\\n\U0001F3A9 Customized responses supported\n\nGet the list of the available vat types."
      operationId: infoVatTypes
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Vat types list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VatType'
              example: |-
                {
                  "data": [
                    {
                      "id": 0,
                      "value": 22,
                      "description": ""
                    },
                    {
                      "id": 1,
                      "value": 21,
                      "description": ""
                    },
                    {
                      "id": 52,
                      "value": 0,
                      "description": "Non imp. art.9 DPR 633\/72"
                    },
                    {
                      "id": 53,
                      "value": 0,
                      "description": "Regime minimi 2015"
                    }
                  ]
                }
      security:
        - OAuth2Authentication:
            - 'settings:r'
  /info/languages:
    get:
      tags:
        - Info
      summary: Get the languages list
      description: Get the list of the supported languages.
      operationId: infoLanguages
      responses:
        '200':
          description: Languages list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DocumentLanguage'
              example:
                data:
                  - code: it
                    name: Italiano
                  - code: en
                    name: Inglese
      security:
        - OAuth2Authentication:
            - no scope required
  /info/templates:
    get:
      tags:
        - Info
      summary: Get the templates list
      description: |-
        Get the list of the available templates.        
        If a CompanyAuthentication is given, custom templates are included.
      operationId: infoTemplates
      parameters:
        - name: type
          in: query
          description: Type of the templates.
          schema:
            type: string
            default: all
            enum:
              - all
              - standard
              - delivery_note
              - accompanying_invoice
        - name: by_type
          in: query
          description: '[Only if type=all] If true, splits the list in objects, grouping templates by type.'
          schema:
            type: boolean
            default: false
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Templates list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DocumentTemplate'
              example: |-
                {
                  "data": [
                    {
                      "id": 10,
                      "name": "New Standard S1"
                    },
                    {
                      "id": 106,
                      "name": "Minimalist"
                    }
                  ]
                }
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/info/payment_methods':
    get:
      tags:
        - Info
      summary: Payment methods list
      description: "\U0001F465 Company context \\\n\U0001F3A9 Customized responses supported\n\nGet the list of the available payment methods."
      operationId: infoPaymentMethodsList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Payment methods list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentMethod'
      security:
        - OAuth2Authentication:
            - no scope required
      x-internal: false
  '/c/{companyId}/info/payment_accounts':
    get:
      tags:
        - Info
      summary: Payment accounts list
      description: "\U0001F465 Company context \\\n\U0001F3A9 Customized responses supported\n\nGet the list of the available payment accounts."
      operationId: infoPaymentAccountsList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Payment accounts list.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentAccount'
      security:
        - OAuth2Authentication:
            - no scope required
  /info/entity_types:
    get:
      tags:
        - Info
      summary: List of the entity types
      description: Get a list of the entity types.
      operationId: infoEntitiesTypes
      responses:
        '200':
          description: Entity types list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      required:
                        - description
                        - value
                      type: object
                      properties:
                        value:
                          type: string
                        description:
                          type: string
              example:
                data:
                  - description: Automatico
                  - value: company
                    description: Azienda
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
  /info/currencies:
    get:
      tags:
        - Info
      summary: Currencies list
      description: Get the currencies list.
      operationId: currenciesList
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Currency'
              example: |-
                {
                  "data": [
                    {
                      "id": "DKK",
                      "symbol": "kr.",
                      "html_symbol": "kr.",
                      "exchange_rate": 7.4606
                    },
                    {
                      "id": "USD",
                      "symbol": "$",
                      "html_symbol": "&#36;",
                      "exchange_rate": 1.067
                    }
                  ]
                }
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/info/revenue_centers':
    get:
      tags:
        - Info
      summary: List of the revenue centers
      description: "\U0001F465 Company context\n\nGet the list of the revenue centers"
      operationId: infoRevenuesCenters
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: string
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/info/cost_centers':
    get:
      tags:
        - Info
      summary: List of the cost centers
      description: "\U0001F465 Company context\n\nGet the list of the cost centers"
      operationId: infoCostCenterList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: string
      security:
        - OAuth2Authentication:
            - no scope required
  /info/measures:
    get:
      tags:
        - Info
      summary: List of the units of measure
      description: Get a list of the units of measure.
      operationId: infoMeasure
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: string
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/info/product_categories':
    get:
      tags:
        - Info
      summary: Product categories list
      description: "\U0001F465 Company context\n\nGet the product categories list"
      operationId: infoProductscategoriesList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: context
          in: query
          required: true
          schema:
            type: string
            enum:
              - products
              - issued_documents
              - expenses_documents
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: string
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/info/received_document_categories':
    get:
      tags:
        - Info
      summary: Received document categories list
      description: "\U0001F465 Company context\n\nGet the received document categories list"
      operationId: infoRecievedDocumentsList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: string
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/info/archive_categories':
    get:
      tags:
        - Info
      summary: Archive categories list
      description: "\U0001F465 Company context\n\nGet the archive categories list"
      operationId: infoArchiveCategoriesList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: string
      security:
        - OAuth2Authentication:
            - no scope required
  /info/tax_profile:
    get:
      tags:
        - Info
      summary: Tax profile info
      description: Get default tax profile info.
      operationId: infoTaxProfile
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    required:
                      - company_subtypes_list
                      - company_types_list
                      - default_enasarco_values
                      - default_values
                      - enasarco_types_list
                      - professions_list
                    type: object
                    properties:
                      default_values:
                        type: object
                        properties: {}
                        description: It contains the default values for the profile attributes
                        example:
                          enasarco: false
                          default_rivalsa: 0
                      company_types_list:
                        type: array
                        items:
                          required:
                            - id
                            - label
                          type: object
                          properties:
                            id:
                              type: string
                              example: independent_contractor
                            label:
                              type: string
                              example: Libero professionista
                      company_subtypes_list:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: artigiani
                            label:
                              type: string
                              example: Artigiani
                      regimes_list:
                        type: array
                        items:
                          required:
                            - id
                          type: object
                          properties:
                            id:
                              type: string
                              example: minimi_5
                            label:
                              type: string
                              example: Regime dei minimi - IRPEF 5%
                      enasarco_types_list:
                        type: array
                        items:
                          required:
                            - id
                            - label
                          type: object
                          properties:
                            id:
                              type: string
                              example: mono
                            label:
                              type: string
                              description: Agente monomandatorio
                      professions_list:
                        type: array
                        example:
                          - label: Agente
                            default_values:
                              rivalsa_name: Rivalsa INPS
                              default_rivalsa: 4
                              default_withholding_tax: 20
                          - label: Agente immobiliare
                            default_values:
                              rivalsa_name: Rivalsa INPS
                              default_withholding_tax: 20
                        items:
                          required:
                            - label
                          type: object
                          properties:
                            label:
                              type: string
                            default_values:
                              type: object
                              properties: {}
                      default_enasarco_values:
                        type: object
                        properties: {}
                        example:
                          default_withholding_tax: 23
                          default_withholding_tax_taxable: 50
                          default_other_withholding_tax: 8
              example:
                data:
                  default_values:
                    enasarco: false
                    default_rivalsa: 0
                  company_types_list:
                    - id: independent_contractor
                      label: Libero professionista
                    - id: independent_contractor
                      label: Libero professionista
                    - id: independent_contractor
                      label: Libero professionista
                    - id: independent_contractor
                      label: Libero professionista
                  company_subtypes_list:
                    - id: artigiani
                      label: Artigiani
                    - id: artigiani
                      label: Artigiani
                    - id: artigiani
                      label: Artigiani
                    - id: artigiani
                      label: Artigiani
                    - id: artigiani
                      label: Artigiani
                  enasarco_types_list:
                    - id: mono
                      label: Ex
                    - id: mono
                      label: nulla Excepteur pariatur aliqua deserunt
                  professions_list:
                    - label: Agente
                      default_values:
                        rivalsa_name: Rivalsa INPS
                        default_rivalsa: 4
                        default_withholding_tax: 20
                    - label: Agente immobiliare
                      default_values:
                        rivalsa_name: Rivalsa INPS
                        default_withholding_tax: 20
                  default_enasarco_values:
                    default_withholding_tax: 23
                    default_withholding_tax_taxable: 50
                    default_other_withholding_tax: 8
                  regimes_list:
                    - id: minimi_5
                      label: Regime dei minimi - IRPEF 5%
                    - id: minimi_5
                      label: Regime dei minimi - IRPEF 5%
                    - id: minimi_5
                      label: Regime dei minimi - IRPEF 5%
                    - id: minimi_5
                      label: Regime dei minimi - IRPEF 5%
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
  /info/dn_causals:
    get:
      tags:
        - Info
      summary: Get the delivery note default causals
      description: Get the delivery note default causals.
      operationId: infoDnCausals
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    example:
                      - Vendita
                      - Conto visione
                      - Conto deposito
                      - Conto vendita
                      - Tentata vendita
                      - Prestito d'uso
                      - Conto lavorazione
                      - Omaggio
                      - Riparazione
                      - Reso per accredito
                      - Reso per sostituzione
                    items:
                      type: string
              example:
                data:
                  - Vendita
                  - Conto visione
                  - Conto deposito
                  - Conto vendita
                  - Tentata vendita
                  - Prestito d'uso
                  - Conto lavorazione
                  - Omaggio
                  - Riparazione
                  - Reso per accredito
                  - Reso per sostituzione
      security:
        - OAuth2Authentication:
            - no scope required
  '/c/{companyId}/settings/tax_profile':
    get:
      tags:
        - Settings
      summary: Get company tax profile
      description: "\U0001F465 Company context\n\nGet company tax profile"
      operationId: settingsTaxProfile
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TaxProfileData'
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
      x-internal: true
    put:
      tags:
        - Settings
      summary: Set company tax profile
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `settings:a`\n\nEdit company tax profile"
      operationId: settingsTaxProfileEdit
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/TaxProfileData'
        required: true
      responses:
        '200':
          description: Successfully set the profile.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TaxProfileData'
      security:
        - OAuth2Authentication:
            - 'settings:a'
      x-private: true
      x-codegen-request-body-name: body
      x-internal: true
  '/c/{companyId}/settings/company_profile':
    get:
      tags:
        - Settings
      summary: Company profile
      description: "\U0001F465 Company context\n\nGet the company profile data like address, email and logo image of the logged company."
      operationId: settingsCompanyProfile
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyProfileData'
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
    put:
      tags:
        - Settings
      summary: Set company profile
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `settings:a`\n\nUpdate company profile data of the logged company."
      operationId: settingsCompanyProfileEdit
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/CompanyProfileData'
        required: true
      responses:
        '200':
          description: Successfully set the profile.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyProfileData'
      security:
        - OAuth2Authentication:
            - 'settings:a'
      x-private: true
      x-codegen-request-body-name: body
  '/c/{companyId}/settings/payment_methods':
    get:
      tags:
        - Settings
      summary: Get payment methods
      description: "\U0001F465 Company context \\\n\U0001F3A9 Customized responses supported\n\nGet payment methods list of the logged company."
      operationId: settingsPaymentMethodList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethod'
              example:
                data:
                  - id: 386683
                    name: PM1
                    is_default: false
                  - id: 386684
                    name: PM2
                    is_default: false
                  - id: 386686
                    name: RiBa Fineco
                    is_default: false
                    default_payment_account:
                      id: 109
                      name: Fineco
                  - id: 386688
                    name: PM3
                    is_default: true
                  - id: 386690
                    name: PM4
                    is_default: false
      security:
        - OAuth2Authentication:
            - no scope required
    post:
      tags:
        - Settings
      summary: New payment method
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `settings:a`\n\nAdd a new payment method."
      operationId: settingsPaymentMethodAdd
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/PaymentMethod'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PaymentMethod'
      security:
        - OAuth2Authentication:
            - 'settings:a'
      x-codegen-request-body-name: body
  '/c/{companyId}/settings/payment_method/{paymentMethodId}':
    get:
      tags:
        - Settings
      summary: Get payment method details
      description: "\U0001F465 Company context \\\n\U0001F3A9 Customized responses supported\n\nGet details of an existing payment method by its unique id."
      operationId: settingsPaymentMethodDetails
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: paymentMethodId
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of comma-separated fields.
          schema:
            type: string
          example: 'id,name'
        - name: fieldset
          in: query
          description: Name of the fieldset.
          schema:
            type: string
          example: detailed
      responses:
        '200':
          description: Payment method details.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PaymentMethod'
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - no scope required
    put:
      tags:
        - Settings
      summary: Edit payment method
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `settings:a`\n\nEdit payment method by its unique id."
      operationId: settingsPaymentMethodEdit
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: paymentMethodId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/PaymentMethod'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PaymentMethod'
      security:
        - OAuth2Authentication:
            - 'settings:a'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Settings
      summary: Remove a payment method
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `settings:a`\n\nDelete an existing payment method by its unique id."
      operationId: settingsPaymentMethodDelete
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: paymentMethodId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment method removed.
          content: {}
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'settings:a'
  '/c/{companyId}/settings/payment_accounts':
    get:
      tags:
        - Settings
      summary: Get payment accounts
      description: "\U0001F465 Company context \\\n\U0001F3A9 Customized responses supported\n\nGet company's payment accounts list"
      operationId: settingsPaymentAccountList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAccount'
              example: |-
                {
                  "data": [
                    {
                      "id": 21,
                      "name": "UBI - Carta Enjoy"
                    },
                    {
                      "id": 109,
                      "name": "Fineco"
                    },
                    {
                      "id": 110,
                      "name": "PayPal"
                    },
                    {
                      "id": 120,
                      "name": "Contrassegno"
                    },
                    {
                      "id": 226,
                      "name": "Prova 8"
                    },
                    {
                      "id": 273,
                      "name": "Carta di credito"
                    },
                    {
                      "id": 276,
                      "name": "Pippo54469"
                    },
                    {
                      "id": 281,
                      "name": "Cash"
                    },
                    {
                      "id": 282,
                      "name": "AirBnB"
                    },
                    {
                      "id": 283,
                      "name": "CC_non_rimborsabile"
                    },
                    {
                      "id": 286,
                      "name": "CC_arrivo"
                    },
                    {
                      "id": 287,
                      "name": "Bonifico_Bancario"
                    }
                  ]
                }
      security:
        - OAuth2Authentication:
            - no scope required
    post:
      tags:
        - Settings
      summary: New payment account
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `settings:a`\n\nAdd a new payment account"
      operationId: settingsPaymentAccountAdd
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/PaymentAccount'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PaymentAccount'
      security:
        - OAuth2Authentication:
            - 'settings:a'
      x-codegen-request-body-name: body
  '/c/{companyId}/settings/payment_accounts/{paymentAccountId}':
    get:
      tags:
        - Settings
      summary: Get payment account details
      description: "\U0001F465 Company context \\\n\U0001F3A9 Customized responses supported\n\nGet details of an existing payment account by its unique id."
      operationId: settingsPaymentAccountDetails
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: paymentAccountId
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: List of comma-separated fields.
          schema:
            type: string
          example: 'id,name'
        - name: fieldset
          in: query
          description: Name of the fieldset.
          schema:
            type: string
          example: detailed
      responses:
        '200':
          description: Payment account details.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PaymentAccount'
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - no scope required
    put:
      tags:
        - Settings
      summary: Edit payment account
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `settings:a`\n\nEdit payment account by its unique id."
      operationId: settingsPaymentAccountEdit
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: paymentAccountId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/PaymentAccount'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PaymentAccount'
      security:
        - OAuth2Authentication:
            - 'settings:a'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Settings
      summary: Remove a payment account
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `settings:a`\n\nDelete an existing payment account by its unique id."
      operationId: settingsPaymentAccountDelete
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: paymentAccountId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment account removed.
          content: {}
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - 'settings:a'
  '/c/{companyId}/settings/e_invoice':
    get:
      tags:
        - Settings
      summary: Get company electronic invoice details
      description: "\U0001F465 Company context\n\nGet electronic invoice details of the logged company"
      operationId: settingsEinvoice
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Comapany electronic invoice details.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyElectronicInvoiceData'
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
    put:
      tags:
        - Settings
      summary: Edit company electronic invoice data
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `settings:a`\n\nEdit company electronic invoice data"
      operationId: settingsEinvocieEdit
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company.
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/CompanyElectronicInvoiceData'
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyElectronicInvoiceData'
      security:
        - OAuth2Authentication:
            - 'settings:a'
      x-private: true
      x-codegen-request-body-name: body
  '/c/{companyId}/settings/notifications':
    get:
      tags:
        - Settings
      summary: Get notifications
      description: "\U0001F465 Company context\n\nGet all notifications types. \nFor each **couple person/company**\nIf single notification is enabled  \nreturn param \"enabled\"  = true\nelse  param \"enabled\" = false"
      operationId: settingsNotificationsList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Company electronic invoice details.
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    description: Notifications list
                    items:
                      type: object
                      properties: {}
                  company_name:
                    type: string
              example:
                data:
                  - type: credits
                    title: Crediti in scadenza
                    enabled: true
                  - type: debts
                    title: Debiti in scadenza
                    enabled: true
                company_name: Mario Rossi
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
    put:
      tags:
        - Settings
      summary: Post notifications
      description: "\U0001F465 Company context\n\nInsert unwanted notifications for couple person/company"
      operationId: settingsotificationsInsert
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: |-
                delete all previous data into table new_notifications_config
                than insert new data
        required: true
      responses:
        '200':
          description: Status 200
          content: {}
        '404':
          description: Status 404
          content: {}
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
      x-codegen-request-body-name: body
  '/c/{companyId}/notifications/initial_data':
    get:
      tags:
        - Notifications
      summary: initial_data
      description: "\U0001F465 Company context\n\nGet total number of notification and unread notifications"
      operationId: notificationsInitialdata
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - total: 29
                    unread: 10
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
  '/c/{companyId}/notifications':
    get:
      tags:
        - Notifications
      summary: Notifications list
      description: "\U0001F465 Company context\n\nReturn ordered and limited (15) list of available notifications for that user.\nExcluding unwanted notifications and those notification without permissions"
      operationId: notificationsList
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: number
          example: 1
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 117
                    message: La fattura numero 25 è stata scartata.
                    type: e_invoices_status
                    created: '2019-03-25 16:05:09'
                    url: /invoices
                    icon: bell
                  - id: 116
                    message: Il DDT numero  è stata scartata.
                    type: e_invoices_status
                    created: '2019-03-25 15:58:36'
                    read: 1
                    url: /invoices
                    icon: bell
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
  '/c/{companyId}/notifications/{notificationId}/read':
    put:
      tags:
        - Notifications
      summary: Set notification read/unread
      description: "\U0001F465 Company context\n\nSet single notification enabled and with permission read or unread"
      operationId: notificationsNotificationIdRead
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  read: true
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
      x-codegen-request-body-name: body
  '/c/{companyId}/notifications/read':
    put:
      tags:
        - Notifications
      summary: Set all notifications read
      description: "\U0001F465 Company context\n\nSet all notification enabled and with permission"
      operationId: notificationsRead
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: Status 200
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  read: true
      security:
        - OAuth2Authentication:
            - no scope required
      x-private: true
      x-codegen-request-body-name: body
  '/c/{companyId}/issued_documents/{document_id}/e_invoice/xml_verify':
    get:
      tags:
        - Issued e-invoices
      summary: Verify e-invoice xml
      description: "\U0001F465 Company context\n\nVerify e-invoice xml format.\nCheck if all mandatory fields are filled and if all fieldds are in right format."
      operationId: issuedDocumentEinvoiceVerifyXml
      parameters:
        - name: Authorization
          in: header
          description: Access token to authenticate the user and the company
          required: true
          schema:
            maxLength: 160
            minLength: 160
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
        '422':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                  extra:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
      security:
        - OAuth2Authentication:
            - no scope required
components:
  schemas:
    CompanyData:
      type: object
      properties:
        id:
          type: integer
          description: Company unique identifier.
          example: 12345
        name:
          type: string
          description: Company name.
          example: Rossi S.r.l.
        type:
          type: string
          description: Company type.
          enum:
            - company
            - accountant
        access_token:
          maxLength: 160
          minLength: 160
          type: string
          description: |-
            CompanyAuthentication token for this company.
            [Only if type=company]
          example: fd015011d2dbf8a9d38e810b325b11b56d02e51688e5261a245933b8e677b8b44ff5f0fe5ccaaf1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4fd81273fc1f95bf460b869015cf99acba
        permissions:
          type: object
          properties:
            fic_situation:
              $ref: '#/components/schemas/PermissionLevel'
            fic_clients:
              $ref: '#/components/schemas/PermissionLevel'
            fic_suppliers:
              $ref: '#/components/schemas/PermissionLevel'
            fic_products:
              $ref: '#/components/schemas/PermissionLevel'
            fic_issued_documents:
              $ref: '#/components/schemas/PermissionLevel'
            fic_received_documents:
              $ref: '#/components/schemas/PermissionLevel'
            fic_receipts:
              $ref: '#/components/schemas/PermissionLevel'
            fic_calendar:
              $ref: '#/components/schemas/PermissionLevel'
            fic_archive:
              $ref: '#/components/schemas/PermissionLevel'
            fic_taxes:
              $ref: '#/components/schemas/PermissionLevel'
            fic_stock:
              $ref: '#/components/schemas/PermissionLevel'
            fic_cashbook:
              $ref: '#/components/schemas/PermissionLevel'
            fic_settings:
              $ref: '#/components/schemas/PermissionLevel'
          description: |-
            Permissions on this company.
            [Only if type=company]
        controlled_companies:
          type: array
          description: |-
            List of controlled companies.
            [Only if type=accountant]
          items:
            $ref: '#/components/schemas/CompanyData'
    PermissionLevel:
      type: string
      example: write
      enum:
        - none
        - read
        - write
        - detailed
    LegalEntity:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
        code:
          type: string
          example: '123'
        name:
          type: string
          example: Rossi S.r.l.
        type:
          type: string
          default: null
          enum:
            - null
            - company
            - person
            - pa
            - condo
        first_name:
          type: string
        last_name:
          type: string
        contact_person:
          type: string
        vat_number:
          type: string
          example: IT01234567890
        tax_code:
          type: string
          example: RSSMRA44A12E890Q
        address_street:
          type: string
          example: 'Via dei tigli, 12'
        address_postal_code:
          type: string
          example: '24010'
        address_city:
          type: string
          example: Bergamo
        address_province:
          type: string
          example: BG
        address_extra:
          type: string
        country:
          type: string
          example: Italia
          default: Italia
        email:
          type: string
          example: mario@rossi.example.it
        certified_email:
          type: string
          example: mario@pec.example.it
        phone:
          type: string
        fax:
          type: string
        notes:
          type: string
        default_vat:
          $ref: '#/components/schemas/VatType'
        default_payment_terms:
          type: integer
          description: '[only for clients]'
          example: 30
        default_payment_terms_type:
          type: string
          description: '[only for clients]'
          default: standard
          enum:
            - standard
            - end_of_month
        default_payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        bank_name:
          type: string
          description: '[only for clients]'
        bank_iban:
          type: string
          description: '[only for clients]'
        bank_swift_code:
          type: string
          description: '[only for clients]'
        shipping_address:
          type: string
          description: '[only for clients]'
        e_invoice:
          type: boolean
          description: |-
            Use e-invoices for this entity
            [only for clients]
          default: false
        ei_code:
          type: string
          description: |-
            E-invoice code
            [only for clients]
    Product:
      title: Product create
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier.
        name:
          type: string
          description: Product name.
        code:
          type: string
          description: Product code.
        net_price:
          type: number
          description: 'Net sale price (used if use_gross_price is false, otherwise it''s competed automatically).'
        gross_price:
          type: number
          description: 'Gross sale price (used if use_gross_price is false, otherwise it''s competed automatically).'
        use_gross_price:
          type: boolean
          description: Determine which price to use for calculations.
        default_vat:
          $ref: '#/components/schemas/VatType'
        net_cost:
          type: number
          description: Net cost of the product (used for received documents).
        measure:
          type: string
          description: Unit of measure.
        description:
          type: string
          description: Product description.
        category:
          type: string
          description: Product category.
        notes:
          type: string
          description: Extra notes.
        in_stock:
          type: boolean
          description: Determine if the product is in stock.
        stock_initial:
          type: number
          description: Product initial stock.
        stock_current:
          type: number
          description: '[READ_ONLY] Product current stock.'
    StockMovement:
      type: object
      properties:
        date:
          type: string
          example: '2018-02-24'
        stock_in:
          type: integer
          example: 3
        stock_out:
          type: integer
          example: 7
        cost:
          type: number
          example: 12.5
        price:
          type: number
          example: 21.99
        description:
          type: string
          example: Test description
    IssuedDocumentType:
      type: string
      default: invoice
      enum:
        - invoice
        - quote
        - proforma
        - receipt
        - delivery_note
        - credit_note
        - order
        - work_report
        - supplier_order
    LanguageCode:
      type: string
      default: it
      enum:
        - it
        - en
        - de
        - fr
        - es
        - el
    Currency:
      type: object
      properties:
        id:
          type: string
          description: Currency code
          example: EUR
        symbol:
          type: string
          description: Currency symbol
          example: €
        exchange_rate:
          type: number
          description: Currency exchange rate (EUR to this)
          example: 1
    VatType:
      required:
        - value
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
        value:
          maximum: 100
          minimum: 0
          type: number
          description: Percentual value.
          example: 22
        description:
          type: string
          description: Short description.
          example: Non imponibile art. 123
        notes:
          type: string
          description: Long description and notes shown in documents.
          example: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
        e_invoice:
          type: string
          description: Usable for e-invoices.
        ei_type:
          type: integer
          description: E-invoice type (natura).
          example: 2
        ei_description:
          type: string
          description: E-invoice description.
        editable:
          type: boolean
          description: '[Read-only]'
          default: true
    PaymentMethod:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
        name:
          type: string
          description: Name of the payment method
        type:
          type: string
          description: Method type
          default: standard
          enum:
            - standard
            - riba
        default_payment_account:
          $ref: '#/components/schemas/PaymentAccount'
        details:
          maxItems: 5
          type: array
          description: Method details rows
          items:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
    PaymentAccount:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
        name:
          type: string
          description: Name of the payment account
          example: Conto Banca Intesa
        type:
          type: string
          default: standard
          enum:
            - standard
            - bank
        iban:
          type: string
        sia:
          type: string
        cuc:
          type: string
    DocumentTemplate:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier.
          example: 123
        name:
          type: string
          description: Template name
          example: Light Smoke
      example: |-
        {
            "code": "it",
            "name": "Italiano"
        }
    Filter:
      title: FilterOperator
      type: string
      enum:
        - '='
        - '>'
        - <
    EditProduct:
      title: Product edit
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier.
        name:
          type: string
          description: Product name.
        code:
          type: string
          description: Product code.
        net_price:
          type: number
          description: 'Net sale price (used if use_gross_price is false, otherwise it''s competed automatically).'
        gross_price:
          type: number
          description: 'Gross sale price (used if use_gross_price is false, otherwise it''s competed automatically).'
        use_gross_price:
          type: boolean
          description: Determine which price to use for calculations.
        default_vat:
          $ref: '#/components/schemas/VatType'
        measure:
          type: string
          description: Unit of measure.
        description:
          type: string
          description: Product description.
        category:
          type: string
          description: Product category.
        notes:
          type: string
          description: Extra notes.
        in_stock:
          type: boolean
          description: Determine if the product is in stock.
        stock_initial:
          type: number
          description: Product initial stock.
        stock_current:
          type: number
          description: '[READ_ONLY] Product current stock.'
      description: Update product
      example:
        id: 1584529
        name: Biscotti
        code: '9802324'
        net_price: 10
        gross_price: 12.2
        use_gross_price: false
        measure: pezzi
        description: Biscotti alla crema di nocciole
        category: Alimentari
        notes: ''
        in_stock: false
        stock_initial: 76
        stock_current: 12
        default_vat:
          id: 0
          value: 22
          description: ''
    CalendarItemCredit:
      required:
        - amount
        - date
        - expired
        - title
      type: object
      properties:
        date:
          type: string
          description: Incoming due date.
          format: date
        title:
          type: string
          description: Title.
        amount:
          type: number
          description: Amount.
        expired:
          type: boolean
          description: 'If true, the deadline is expired.'
        document:
          type: object
          properties:
            id:
              type: integer
              description: Document id.
            type:
              $ref: '#/components/schemas/IssuedDocumentType'
            path:
              type: string
              description: Document path.
        entity:
          type: object
          properties:
            id:
              type: integer
              description: Entity id.
            name:
              type: string
              description: Entity name.
            path:
              type: string
              description: Entity path.
          description: Client or supplier data.
    CalendarItemDebt:
      title: CalendarItemDebt
      required:
        - amount
        - date
        - expired
        - title
      type: object
      properties:
        date:
          type: string
          description: Outgoing due date.
          format: date
        title:
          type: string
          description: Title.
        amount:
          type: number
          description: Amount.
        expired:
          type: boolean
          description: 'If true, the deadline is expired.'
        document:
          type: object
          properties:
            id:
              type: integer
              description: Document id.
            type:
              type: string
              description: Document type.
            path:
              type: string
              description: Document path.
          description: Document data.
        entity:
          type: object
          properties:
            id:
              type: integer
              description: Entity id.
            name:
              type: string
              description: Entity name.
            path:
              type: string
              description: Entity path.
          description: Supplier data.
    CalendarItemTax:
      title: CalendarItemTax
      required:
        - amount
        - date
        - expired
        - title
      type: object
      properties:
        date:
          type: string
          description: Tax due date.
          format: date
        title:
          type: string
          description: Title.
        amount:
          type: number
          description: Amount.
        expired:
          type: boolean
          description: 'If true, the deadline is expired.'
        document:
          type: object
          properties:
            id:
              type: integer
              description: F24 id.
            path:
              type: string
              description: F24 path.
          description: F24 data.
    CalendarItemOther:
      title: CalendarItemOther
      required:
        - date
        - expired
        - title
      type: object
      properties:
        date:
          type: string
          description: Tax due date.
          format: date
        title:
          type: string
          description: Title.
        expired:
          type: boolean
          description: 'If true, the deadline is expired.'
    IssuedDocument:
      title: IssuedDocument
      required:
        - entity
        - items_list
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the document.
        entity:
          $ref: '#/components/schemas/LegalEntity'
        type:
          $ref: '#/components/schemas/IssuedDocumentType'
        number:
          type: integer
          description: |-
            Number of the document
            [If not specified, next number is used]
          example: 1
        numeration:
          type: string
          description: |-
            Numeration of the document
            [Not available if type=delivery_note]
          example: /A
        date:
          type: string
          description: |-
            Date of the document
            [If not specified, today date is used]
          format: date
        currency:
          $ref: '#/components/schemas/Currency'
        language:
          $ref: '#/components/schemas/DocumentLanguage'
        subject:
          type: string
        visible_subject:
          type: string
        rc_center:
          type: string
          description: 'Revenue center [or cost center if type=supplier_order].'
        notes:
          type: string
        rivalsa:
          maximum: 100
          minimum: 0
          type: number
          description: '"Rivalsa INPS" percentual value'
        cassa:
          maximum: 100
          minimum: 0
          type: number
          description: '"Cassa previdenziale" percentual value'
        withholding_tax:
          maximum: 100
          minimum: 0
          type: number
          description: Withholding tax (ritenuta d'acconto) percentual value
        withholding_tax_taxable:
          maximum: 100
          minimum: 0
          type: number
          description: Withholding tax taxable (imponibile) percentual value
        other_withholding_tax:
          maximum: 100
          minimum: 0
          type: number
          description: Other withholding tax (altra ritenuta) percentual value
        stamp_duty:
          type: number
          description: |-
            Stamp duty value
            [0 if not present]
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        use_split_payment:
          type: boolean
          default: false
        use_gross_prices:
          type: boolean
          default: false
        e_invoice:
          type: boolean
          description: Indicates if this is an e-invoice.
          default: false
        ei_data:
          type: object
          properties:
            vat_kind:
              type: string
              description: Vat kind (esigibilità IVA).
              default: null
              enum:
                - null
                - I
                - D
                - S
            original_document_type:
              type: string
              description: Type of document followed by the the current invoice.
              default: ordine
              enum:
                - ordine
                - contratto
                - convenzione
            od_number:
              type: string
              description: Original document number.
            od_date:
              type: string
              description: Original document date.
              format: date
            cig:
              type: string
              description: CIG.
            cup:
              type: string
              description: CUP.
            payment_method:
              type: string
              description: 'Payment method (see https://www.fatturapa.gov.it/export/documenti/fatturapa/v1.2.1/Rappresentazione-tabellare-fattura-ordinaria.pdf for the accepted values of ModalitaPagamento).'
            bank_name:
              type: string
              description: Bank name.
            bank_iban:
              type: string
              description: IBAN.
            bank_beneficiary:
              type: string
              description: Bank beneficiary.
          description: |-
            E-invoice data.
            [Only if e_invoice=true]
        items_list:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: integer
                description: Unique identifier of the product.
                example: 1234
              code:
                type: string
                description: Product code.
                example: '239874892374982'
              name:
                type: string
                description: Product name.
                example: Water bottle
              description:
                type: string
                description: Product description.
              qty:
                type: number
              measure:
                type: string
              net_price:
                type: number
                description: Net price.
                example: 1.23
              gross_price:
                type: number
                description: Gross price.
                example: 1.45
              vat:
                $ref: '#/components/schemas/VatType'
              not_taxable:
                type: boolean
                default: false
              apply_withholding_taxes:
                type: boolean
                description: 'Apply withholding taxes, rivalsa and cassa.'
                default: true
              discount:
                maximum: 100
                minimum: 0
                type: number
                description: Discount percentual value.
              discount_highlight:
                type: boolean
                default: false
              in_ddt:
                type: boolean
                default: true
              stock:
                type: boolean
              ei_raw:
                type: object
                properties: {}
                description: Advanced raw attributes for e-invoices.
        payments_list:
          type: array
          items:
            type: object
            properties:
              due_date:
                type: string
                description: Due date.
                format: date
                example: '2018-04-03'
              amount:
                type: number
                description: Payment amount.
                example: 1.45
              status:
                type: string
                description: Payment status.
                default: not_paid
                enum:
                  - not_paid
                  - paid
                  - reversed
              payment_account:
                $ref: '#/components/schemas/PaymentAccount'
              paid_date:
                type: string
                description: |-
                  Payment date.
                  [Only if status is paid]
                format: date
                example: '2018-04-03'
              ei_raw:
                type: object
                properties: {}
                description: Advanced raw attributes for e-invoices.
        template:
          $ref: '#/components/schemas/DocumentTemplate'
        delivery_note_template:
          $ref: '#/components/schemas/DocumentTemplate'
        acc_inv_template:
          $ref: '#/components/schemas/DocumentTemplate'
        h_margins:
          type: integer
          description: Horizontal margins.
        show_payments:
          type: boolean
          description: Shows the expiration dates of the payments on the document.
        show_payment_method:
          type: boolean
          description: Show the payment method details on the document.
        show_totals:
          type: string
          description: Totals mode.
          default: all
          enum:
            - none
            - nets
            - all
        v_margins:
          type: integer
          description: Vertical margins.
        show_paypal_button:
          type: boolean
          default: false
        show_notification_button:
          type: boolean
          default: false
        delivery_note:
          type: boolean
          description: Attach a delivery note.
          default: false
        accompanying_invoice:
          type: boolean
          description: Attach an accompanying invoice.
          default: false
        dn_number:
          type: integer
          description: Number (for the attached delivery note).
        dn_date:
          type: string
          description: Date (for the attached delivery note).
          format: date
        dn_ai_packages_number:
          type: string
          description: Number of packages (for the attached delivery note).
        dn_ai_weight:
          type: string
          description: Weight (for the attached delivery note).
        dn_ai_causal:
          type: string
          description: Causal (for the attached delivery note).
        dn_ai_destination:
          type: string
          description: Destination (for the attached delivery note).
        dn_ai_transporter:
          type: string
          description: Transporter (for the attached delivery note).
        dn_ai_notes:
          type: string
          description: Notes (for the attached delivery note).
        refers_to:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier of the linked document (can be null if the document has been deleted or other reasons).
            date:
              type: string
              description: Date of the linked document.
              format: date
            number:
              type: integer
              description: Number of the linked document.
            numeration:
              type: string
              description: Numeration of the linked document.
            description:
              type: string
              description: Description to show.
          description: Link to another document (e.g. the original proforma or the quote from which this has been created).
        is_marked:
          type: boolean
          description: This is true if the document is marked.
        amount_net:
          type: number
          description: '[Read-only] Total net amount (competenze).'
        amount_vat:
          type: number
          description: '[Read-only] Total vat amount (IVA).'
        amount_gross:
          type: number
          description: '[Read-only] Total gross amount (totale documento).'
        amount_rivalsa:
          type: number
          description: '[Read-only] Rivalsa amount.'
        amount_cassa:
          type: number
          description: '[Read-only] Cassa amount.'
        amount_withholding_tax:
          type: number
          description: '[Read-only] Withholding tax amount (ritenuta d''acconto).'
        amount_other_withholding_tax:
          type: number
          description: '[Read-only] Other withholding tax amount (altra ritenuta).'
        extra_data:
          type: object
          properties:
            ts_communication:
              type: boolean
            ts_flag_tipo_spesa:
              type: number
              description: 1 => TK (Ticket di pronto soccorso); 2 => SR (Visita in intramoenia)
            ts_pagamento_tracciato:
              type: boolean
            ts_tipo_spesa:
              type: string
              description: 'Can be [ ''TK'', ''FC'', ''FV'', ''SV'', ''SP'', ''AD'', ''AS'', ''SR'', ''CT'', ''PI'', ''IC'', ''AA'' ]. Refer to the technical specifications to learn more.'
          description: |-
            Extra data.
            TS fields follow the technical specifications provided by "Sistema Tessera Sanitaria".
        seen_date:
          type: string
          description: Date when the client/supplier has seen the document.
          format: date
        next_due_date:
          type: string
          description: Date of the next not paid payment.
          format: date
        url:
          type: string
          description: Public url of the document PDF file.
        attachment_url:
          type: string
          description: '[Read only] Public url of the attached file. Authomatically set if a valid attachment token is passed via POST /issued_documents or PUT /issued_documents/{documentId}.'
        attachment_token:
          type: string
          description: '[Write only] Attachment token returned by POST /issued_documents/attachment. Used to attach the file already uploaded.'
        ei_raw:
          type: object
          properties: {}
          description: Advanced raw attributes for e-invoices.
    ReceivedDocument:
      title: ReceivedDocument
      required:
        - entity
      type: object
      properties:
        id:
          type: integer
        type:
          $ref: '#/components/schemas/ReceivedDocumentType'
        entity:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        date:
          type: string
        category:
          type: string
        description:
          type: string
        amount_net:
          type: number
        amount_vat:
          type: number
        amount_withholding_tax:
          type: number
        amount_other_withholding_tax:
          type: number
        amount_gross:
          type: number
          description: '[Read-only]'
        amortization:
          type: number
        rc_center:
          type: string
        invoice_number:
          type: string
        is_marked:
          type: boolean
        is_detailed:
          type: boolean
        e_invoice:
          type: boolean
          description: '[Read-only]'
        next_due_date:
          type: string
          description: '[Read-only]'
          format: date
        currency:
          $ref: '#/components/schemas/Currency'
        tax_deductibility:
          maximum: 100
          minimum: 0
          type: number
        vat_deductibility:
          maximum: 100
          minimum: 0
          type: number
        items_list:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              product_id:
                type: integer
              code:
                type: string
              name:
                type: string
              measure:
                type: string
              net_price:
                type: number
              category:
                type: string
              qty:
                type: number
              vat:
                $ref: '#/components/schemas/VatType'
              stock:
                type: number
        payments_list:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              amount:
                type: number
              due_date:
                type: string
              paid_date:
                type: string
              payment_terms:
                type: object
                properties:
                  days:
                    type: number
                  type:
                    type: string
              status:
                type: string
              payment_account:
                $ref: '#/components/schemas/PaymentAccount'
        attachment_url:
          type: string
          description: '[Read-only]'
        attachment_preview_url:
          type: string
          description: '[Read-only]'
    IssuedDocumentTotals:
      title: IssuedDocumentTotals
      required:
        - amount_due
        - amount_gross
        - amount_net
        - amount_vat
        - is_enasarco_maximal_exceeded
        - payments_sum
        - vat_list
      type: object
      properties:
        amount_net:
          type: number
        amount_rivalsa:
          type: number
        amount_net_with_rivalsa:
          type: number
        amount_cassa:
          type: number
        taxable_amount:
          type: number
        not_taxable_amount:
          type: number
        vat_list:
          required:
            - vat_item
          type: object
          properties:
            vat_item:
              required:
                - net
                - vat
              type: object
              properties:
                net:
                  type: number
                vat:
                  type: number
        amount_vat:
          type: number
        amount_gross:
          type: number
        taxable_amount_withholding_tax:
          type: number
        amount_withholding_tax:
          type: number
        taxable_amount_other_withholding_tax:
          type: number
        amount_other_withholding_tax:
          type: number
        stamp_duty:
          type: number
        amount_due:
          type: number
        is_enasarco_maximal_exceeded:
          type: boolean
        payments_sum:
          type: number
      example: |-
        {
            "amount_net": 30,
            "amount_rivalsa": 1.5,
            "amount_net_with_rivalsa": 31.5,
            "amount_cassa": 1.58,
            "taxable_amount": 33.08,
            "not_taxable_amount": 0.00,
            "vat_list": {
              "10": {
                "net": 10,
                "vat": 1
              },
              "20": {
                "net": 23.08,
                "vat": 4.62
              }
            },
            "amount_vat": 5.62,
            "amount_gross": 36.41,
            "taxable_amount_withholding_tax": 15.75,
            "amount_withholding_tax": 0.79,
            "taxable_amount_other_withholding_tax": 30,
            "amount_other_withholding_tax": 1.5,
            "amount_due": 36.41,
            "is_enasarco_maximal_exceeded": false,
            "payments_sum": 36.41
          }
    ReceivedDocumentTotals:
      title: ReceivedDocumentTotals
      required:
        - amount_due
        - amount_gross
        - amount_net
        - amount_other_withholding_tax
        - amount_vat
        - amount_withholding_tax
        - payments_sum
      type: object
      properties:
        amount_net:
          type: number
        amount_vat:
          type: number
        amount_gross:
          type: number
        amount_withholding_tax:
          type: number
        amount_other_withholding_tax:
          type: number
        amount_due:
          type: number
        payments_sum:
          type: number
    F24:
      title: F24
      required:
        - amount
        - description
        - due_date
        - id
      type: object
      properties:
        id:
          type: string
          description: Unique F24 identifier.
        due_date:
          type: string
          format: date
          example: '2018-02-12'
        status:
          type: string
          enum:
            - paid
            - not_paid
            - reversed
        payment_account:
          $ref: '#/components/schemas/PaymentAccount'
        amount:
          type: number
          description: Taxes amount.
          example: 300
        attachment_url:
          type: string
          description: '[Read-only] Absolute url of the attached file. Authomatically set if a valid attachment token is passed via POST /taxes or PUT /taxes/{documentId}.'
        attachment_token:
          type: string
          description: '[Write-only] Attachment token returned by POST /taxes/attachment. Used to attach the file already uploaded.'
        description:
          type: string
          description: Name or brief description.
    CashbookEntry:
      title: CashbookEntry
      required:
        - account_in
        - account_out
        - amount_in
        - amount_out
        - date
        - description
        - id
        - kind
      type: object
      properties:
        id:
          type: string
          description: id of the entry
        date:
          type: string
          format: date
        amount_in:
          type: number
          description: Incoming amount
        account_in:
          $ref: '#/components/schemas/PaymentAccount'
        amount_out:
          type: number
          description: Outgoing amount
        account_out:
          $ref: '#/components/schemas/PaymentAccount'
        description:
          type: string
        kind:
          type: string
          enum:
            - cashbook
            - invoice
            - expense
            - tax
            - receipt
        type:
          type: string
          enum:
            - in
            - out
    Receipt:
      title: Receipt
      required:
        - date
        - payment_account
        - type
      type: object
      properties:
        date:
          type: string
        number:
          type: number
        numeration:
          type: string
          description: If it's null or empty string use the default numeration.
        use_gross_prices:
          type: boolean
          default: false
        type:
          $ref: '#/components/schemas/ReceiptType'
        description:
          type: string
        rc_center:
          type: string
        payment_account:
          required:
            - id
          type: object
          properties:
            id:
              type: number
        items_list:
          type: array
          items:
            type: object
            properties:
              amount_net:
                type: number
              amount_gross:
                type: number
              category:
                type: string
              vat:
                type: object
                properties:
                  id:
                    type: number
    ArchiveDocument:
      title: ArchiveDocument
      required:
        - attachment_url
        - id
        - type
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/ArchiveDocumentType'
        attachment_url:
          type: string
          description: '[Read-only] Absolute url of the attached file. Authomatically set if a valid attachment token is passed via POST /archive or PUT /archive/{documentId}.'
        attachment_token:
          type: string
          description: '[Write-only] Attachment token returned by POST /archive/attachment. Used to attach the file already uploaded.'
        description:
          type: string
    DocumentLanguage:
      title: DocumentLanguage
      required:
        - code
        - name
      type: object
      properties:
        code:
          type: string
          description: Language code.
        name:
          type: string
          description: Language extended name.
    TaxProfileData:
      title: TaxProfileData
      required:
        - cassa_name
        - company_type
        - contribution_percentage
        - default_cassa
        - default_other_withholding_tax
        - default_rivalsa
        - default_withholding_tax
        - default_withholding_tax_taxable
        - enasarco
        - enasarco_type
        - regime
        - rivalsa_name
      type: object
      properties:
        company_type:
          type: string
          enum:
            - independent_contractor
            - individual
            - partnership
            - corporation
        profession:
          type: string
          description: Profession name (one of the /info/tax_profile professions).
        company_subtype:
          type: string
          description: '[Only if company_type is individual]'
          enum:
            - artigiani
            - commercianti
        regime:
          type: string
          description: '[Only if company_type is independent_contractor or individual]'
          enum:
            - ordinario
            - minimi_5
            - nip_10
            - forfettario_15
        rivalsa_name:
          type: string
        default_rivalsa:
          maximum: 100
          minimum: 0
          type: number
        cassa_name:
          type: string
        default_cassa:
          maximum: 100
          minimum: 0
          type: number
        default_withholding_tax:
          maximum: 100
          minimum: 0
          type: number
        default_withholding_tax_taxable:
          maximum: 100
          minimum: 0
          type: number
        default_other_withholding_tax:
          maximum: 100
          minimum: 0
          type: number
        enasarco:
          type: boolean
          description: '[Only if company_type is independent_contractor or corporation]'
        enasarco_type:
          type: string
          description: '[Only if enasarco is true]'
          enum:
            - mono
            - pluri
        contribution_percentage:
          maximum: 100
          minimum: 0
          type: number
          description: '[Only if company_type is independent_contractor or individual]'
    CompanyProfileData:
      title: CompanyProfileData
      required:
        - address_city
        - address_extra
        - address_postal_code
        - address_province
        - address_street
        - country
        - fax
        - mobile_phone
        - name
        - paypal_email
        - phone
        - subtitle_1
        - subtitle_2
        - tax_code
        - vat_number
        - visible_email
        - website
      type: object
      properties:
        name:
          type: string
          description: Company name
        subtitle_1:
          type: string
        subtitle_2:
          type: string
        address_street:
          type: string
        address_postal_code:
          type: number
        address_city:
          type: string
        address_province:
          type: string
        address_extra:
          type: string
          description: Address additional notes
        country:
          type: string
        tax_code:
          type: string
        vat_number:
          type: string
        phone:
          type: string
        fax:
          type: string
        mobile_phone:
          type: string
        website:
          type: string
        visible_email:
          type: string
        paypal_email:
          type: string
    CompanyElectronicInvoiceData:
      title: CompanyElectronicInvoiceData
      type: object
      properties:
        name:
          type: string
          description: Company name (read only)
        vat_number:
          type: string
          description: Company vat number (read only)
        tax_code:
          type: string
          description: Company tax code (read only)
        ei_type:
          type: string
          description: Company type
          enum:
            - person
            - company
        ei_regime:
          type: string
          description: 'Company tax regime (see http://www.fatturapa.gov.it/export/fatturazione/sdi/fatturapa/v1.2.1/Rappresentazione_tabellare_del_tracciato_FatturaPA_versione_1.2.1.pdf for available values)'
          default: RF01
        ei_cassa_type:
          type: string
          description: 'Company cash type, can be null (see http://www.fatturapa.gov.it/export/fatturazione/sdi/fatturapa/v1.2.1/Rappresentazione_tabellare_del_tracciato_FatturaPA_versione_1.2.1.pdf for available values)'
          default: null
        ei_withholding_tax_casual:
          type: string
          description: 'Company casual withholding identified with a capital letter, from A to Z, can be null.'
          default: null
        ei_sending_counter:
          minimum: 1
          type: integer
          description: Incremental number
        ei_title:
          type: string
          description: Person title (only if `ei_type = person`)
        ei_first_name:
          type: string
          description: Person first name (only if `ei_type = person`)
        ei_last_name:
          type: string
          description: Person last name (only if `ei_type = person`)
        ei_rea:
          type: string
          description: REA (only if `ei_type = company`)
        ei_rea_province:
          type: string
          description: REA province  (only if `ei_type = company`)
        ei_share_capital:
          type: number
          description: Company authorized capital (only if `ei_type = company`)
        ei_sole_shareholder:
          type: boolean
          description: Set to true if the company has a sole shareholder  (only if `ei_type = company`)
        ei_closeout:
          type: boolean
          description: Set to true if the company is on closeout (only if `ei_type = company`)
    ReceivedDocumentType:
      title: ReceivedDocumentType
      type: string
      default: expense
      enum:
        - expense
        - passive_credit_note
        - passive_delivery_note
    ReceiptType:
      title: ReceiptType
      type: string
      enum:
        - till_receipt
        - sales_receipt
    ArchiveDocumentType:
      title: ArchiveDocumentType
      type: string
  parameters:
    QueryFilterName:
      name: 'filter[0][field]'
      in: query
      description: |-
        ```
        filter[1]
        filter[2]
        ...
        filter[n]
        ```
      schema:
        type: string
    QueryFilterOperator:
      name: 'filter[0][op]'
      in: query
      schema:
        type: string
        enum:
          - '='
          - '>'
          - <
          - '>='
          - <=
          - contains
          - like
    QueryFilterValue:
      name: 'filter[0][value]'
      in: query
      schema:
        type: string
    PathParameterEntityRole:
      name: entityRole
      in: path
      required: true
      schema:
        type: string
        enum:
          - clients
          - suppliers
    HeaderAuthorization:
      name: Authorization
      in: header
      description: Access token to authenticate the user and the company
      required: true
      schema:
        maxLength: 160
        minLength: 160
        type: string
    HeaderUserAuthorization:
      name: Authorization
      in: header
      description: Access token to authenticate the user
      required: true
      schema:
        maxLength: 160
        minLength: 160
        type: string
  securitySchemes:
    OAuth2Authentication:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://api-v2.fattureincloud.it/oauth/authorize'
          tokenUrl: 'https://api-v2.fattureincloud.it/oauth/token'
          scopes:
            'situation:r': ''
            'entity.clients:r': ''
            'entity.clients:a': ''
            'entity.suppliers:r': ''
            'entity.suppliers:a': ''
            'products:r': ''
            'products:a': ''
            'stock:r': ''
            'stock:a': ''
            'issued_documents.invoices:r': ''
            'issued_documents.invoices:a': ''
            'issued_documents.credit_notes:r': ''
            'issued_documents.credit_notes:a': ''
            'issued_documents.quotes:r': ''
            'issued_documents.quotes:a': ''
            'issued_documents.proformas:r': ''
            'issued_documents.proformas:a': ''
            'issued_documents.receipts:r': ''
            'issued_documents.receipts:a': ''
            'issued_documents.delivery_notes:r': ''
            'issued_documents.delivery_notes:a': ''
            'issued_documents.orders:r': ''
            'issued_documents.orders:a': ''
            'issued_documents.work_reports:r': ''
            'issued_documents.work_reports:a': ''
            'issued_documents.supplier_orders:r': ''
            'issued_documents.supplier_orders:a': ''
            'received_documents:r': ''
            'received_documents:a': ''
            'receipts:r': ''
            'receipts:a': ''
            'calendar:r': ''
            'calendar:a': ''
            'archive:r': ''
            'archive:a': ''
            'taxes:r': ''
            'taxes:a': ''
            'emails:r': ''
            'cashbook:r': ''
            'cashbook:a': ''
            'settings:r': ''
            'settings:a': ''
            'issued_documents.[documentType]:r': ''
            'issued_documents.[documentType]:a': ''
            no scope required: ''

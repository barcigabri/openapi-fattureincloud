openapi: 3.1.0
info:
  title: Fatture in Cloud API v2 - API Reference
  description: "## Request informations\nIn every request description you will be able to find some additional informations about context, permissions and supported functionality:\n\n| Parameter | Description |\n|-----------|-------------|\n| \U0001F465 Context | Indicate the subject of the request. Can be `company`, `user` or `accountant`.  |\n| \U0001F512 Required scope | If present, indicates the required scope to fulfill the request. |\n| \U0001F50D Filtering | If present, indicates which fields support the filtering feature. |\n| ↕️ Sorting | If present, indicates which fields support the sorting feature. |\n| \U0001F4C4 Paginated results | If present, indicate that the results are paginated. |\n| \U0001F3A9 Customized responses supported | If present, indicate that you can use `field` or `fieldset` to customize the response body. |\n\nFor example the request `GET /entities/{entityRole}` have tis informations: \\\n\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:r` or `entity.suppliers:r` (depending on `entityRole`) \\\n\U0001F50D Filtering: `id`, `name` \\\n↕️ Sorting: `id`, `name` \\\n\U0001F4C4 Paginated results \\\n\U0001F3A9 Customized responses supported\n\nKeep in mind that if you are making **company realted requests**, you will need to specify the company id in the requests:\n```\nGET /c/{companyId}/issued_documents\n```"
  contact:
    name: Fatture in Cloud
    url: 'https://www.fattureincloud.it'
    email: info@fattureincloud.it
  license:
    name: ''
    url: 'https://www.fattureincloud.it'
  version: v1.0
servers:
  - url: 'https://api-v2.fattureincloud.it'
tags: []
paths:
  /user/info:
    get:
      tags:
        - User
      summary: Get user info
      responses:
        '200':
          $ref: '#/components/responses/UserInfoResponse'
        '401':
          description: Unauthorized.
      operationId: userInfo
      description: "Makes possible to retrieve the current user's info.\n\n\U0001F464 Person context\n\nGet user email, name and id."
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  /user/companies:
    get:
      summary: userCompanies
      tags:
        - User
      responses:
        '200':
          $ref: '#/components/responses/UserCompaniesResponse'
        '401':
          description: Unauthorized
      operationId: userCompanies
      description: "\U0001F464 Person context\n\nGet a list of the controlled companies and their CompanyAuthentication tokens."
      security:
        - OAuth2AuthenticationCodeFlow: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  '/c/{companyId}/company/info':
    parameters:
      - $ref: '#/components/parameters/CompanyId'
    get:
      summary: Your GET endpoint
      tags:
        - Company
      responses:
        '200':
          $ref: '#/components/responses/CompanyInfoResponse'
        '401':
          description: Unauthorized.
      operationId: companyInfo
      description: 'Get company info like email, license expire date and access info for each document and section'
      security:
        - OAuth2AuthenticationCodeFlow: []
  '/c/{companyId}/entities/clients':
    parameters:
      - $ref: '#/components/parameters/CompanyId'
    get:
      summary: List clients
      tags:
        - Clients
      responses:
        '200':
          $ref: '#/components/responses/ListCompaniesResponse'
        '401':
          description: Unauthorized
      operationId: listClients
      description: "\U0001F465 Company context\n\U0001F512 Required scope: entity.clients:r\n\U0001F50D Filtering: id, code, name, type, vat_number, tax_code, address_street, address_postal_code, address_city, address_province, country, email, certified_email, phone, fax, notes, imported, atoka_show, e_invoice, ei_code, created_at, updated_at\n↕️ Sorting: code, name, type, vat_number, tax_code, address_street, address_postal_code, address_city, address_province, country, email, certified_email, phone, fax, notes, e_invoice, ei_code, created_at, updated_at\n\U0001F4C4 Paginated results\n\U0001F3A9 Customized responses supported\n\nGet a list of clients that match the filters."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.clients:r'
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/FieldSet'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/ById'
    post:
      summary: ''
      operationId: createClient
      responses:
        '200':
          $ref: '#/components/responses/CreateCompanyResponse'
      description: "\U0001F465 Company context \\\n\U0001F512 Required scope: `entity.clients:a`\n\nCreate a new client."
      security:
        - OAuth2AuthenticationCodeFlow:
            - 'entity.clients:a'
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/requests/CreateClientsRequest.yaml
            examples:
              example-1:
                value:
                  data:
                    id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
                    default_vat:
                      id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
                    default_payment_terms: 30
                    default_payment_terms_type: standard
                    default_payment_method:
                      id: 0
                      name: string
                      type: standard
                      default_payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      details:
                        - title: string
                          description: string
                    bank_name: string
                    bank_iban: string
                    bank_swift_code: string
                    shipping_address: string
                    e_invoice: false
                    ei_code: string
        description: The client to create
      tags:
        - Clients
components:
  schemas: {}
  securitySchemes:
    OAuth2AuthenticationCodeFlow:
      type: oauth2
      flows:
        authorizationCode:
          tokenUrl: 'https://api-v2.fattureincloud.it/oauth/token'
          refreshUrl: ''
          scopes:
            'entity.clients:r': ''
            'entity.clients:a': ''
          authorizationUrl: 'https://api-v2.fattureincloud.it/oauth/authorize'
  parameters:
    Authorization:
      name: Authorization
      in: header
      description: Access token to authenticate the user
      required: true
      schema:
        maxLength: 160
        minLength: 160
        type: string
    CompanyId:
      name: CompanyId
      in: path
      required: true
      schema:
        type: string
        example: '12345'
      description: The Referred Company Id.
    FieldSet:
      name: fieldset
      in: query
      required: false
      schema:
        type: string
      description: Name of the fieldset
    Sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
      description: List of comma-separated fields for result sorting (minus for desc sorting)
    Fields:
      name: fields
      in: query
      required: false
      schema:
        type: string
      description: List of comma-separated fields.
    Page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 1
      description: Requested page
    ById:
      name: by_id
      in: query
      required: false
      schema:
        type: integer
        default: 0
      description: 'If 1, return an object instead of an array'
  responses:
    UserInfoResponse:
      description: User info.
      content:
        application/json:
          schema:
            $ref: ./models/responses/UserInfoResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 12345
                  name: Mario Rossi
                  first_name: Mario
                  last_name: Rossi
                  email: mario.rossi@example.it
    UserCompaniesResponse:
      description: User Companies.
      content:
        application/json:
          schema:
            $ref: ./models/responses/UserCompaniesResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 12345
                  name: Rossi S.r.l.
                  type: company
                  access_token: fd015011d2dbf8a9d38e810b325b11b56d02e51688e5261a245933b8e677b8b44ff5f0fe5ccaaf1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4fd81273fc1f95bf460b869015cf99acba
                  permissions:
                    fic_situation: write
                    fic_clients: write
                    fic_suppliers: write
                    fic_products: write
                    fic_issued_documents: write
                    fic_received_documents: write
                    fic_receipts: write
                    fic_calendar: write
                    fic_archive: write
                    fic_taxes: write
                    fic_stock: write
                    fic_cashbook: write
                    fic_settings: write
                  controlled_companies:
                    - id: 12345
                      name: Rossi S.r.l.
                      type: company
                      access_token: fd015011d2dbf8a9d38e810b325b11b56d02e51688e5261a245933b8e677b8b44ff5f0fe5ccaaf1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4fd81273fc1f95bf460b869015cf99acba
                      permissions:
                        fic_situation: write
                        fic_clients: write
                        fic_suppliers: write
                        fic_products: write
                        fic_issued_documents: write
                        fic_received_documents: write
                        fic_receipts: write
                        fic_calendar: write
                        fic_archive: write
                        fic_taxes: write
                        fic_stock: write
                        fic_cashbook: write
                        fic_settings: write
                      controlled_companies: []
    CompanyInfoResponse:
      description: Company info.
      content:
        application/json:
          schema:
            $ref: ./models/responses/CompanyInfoResponse.yaml
          examples:
            example-1:
              value:
                data:
                  data:
                    id: 12345
                    name: Mario Rossi S.r.l.
                    email: mario@rossi-example.it
                    type: company
                    fic: true
                    fic_plan: trial
                    fic_license_expire: '2019-08-24'
                    use_fic: true
                    fic_need_setup: true
                    dic: true
                    dic_plan: trial
                    dic_license_expire: '2019-08-24'
                    use_dic: true
                    dic_need_setup: true
                    access_info:
                      role: master
                      permissions:
                        fic_situation: write
                        fic_clients: write
                        fic_suppliers: write
                        fic_products: write
                        fic_issued_documents: write
                        fic_received_documents: write
                        fic_receipts: write
                        fic_calendar: write
                        fic_archive: write
                        fic_taxes: write
                        fic_stock: write
                        fic_cashbook: write
                        fic_settings: write
                    plan_info:
                      limits:
                        clients: 0
                        suppliers: 0
                        products: 0
                        documents: 0
                      functions:
                        example_function: true
    CreateCompanyResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/CreateClientsResponse.yaml
          examples:
            example-1:
              value:
                data:
                  id: 0
                  code: '123'
                  name: Rossi S.r.l.
                  type: null
                  first_name: string
                  last_name: string
                  contact_person: string
                  vat_number: IT01234567890
                  tax_code: RSSMRA44A12E890Q
                  address_street: 'Via dei tigli, 12'
                  address_postal_code: '24010'
                  address_city: Bergamo
                  address_province: BG
                  address_extra: string
                  country: Italia
                  email: mario.rossi@example.it
                  certified_email: mario.rossi@pec.example.it
                  phone: string
                  fax: string
                  notes: string
                  default_vat:
                    id: 0
                    value: 22
                    description: Non imponibile art. 123
                    notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                    e_invoice: string
                    ei_type: 2
                    ei_description: string
                    editable: true
                  default_payment_terms: 30
                  default_payment_terms_type: standard
                  default_payment_method:
                    id: 0
                    name: string
                    type: standard
                    default_payment_account:
                      id: 0
                      name: Conto Banca di Paperopoli
                      type: standard
                      iban: string
                      sia: string
                      cuc: string
                    details:
                      - title: string
                        description: string
                  bank_name: string
                  bank_iban: string
                  bank_swift_code: string
                  shipping_address: string
                  e_invoice: false
                  ei_code: string
    ListCompaniesResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/responses/ListClientsResponse.yaml
          examples:
            example-1:
              value:
                current_page: 1
                first_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                from: 1
                last_page: 1
                last_page_url: 'http://api-v2.fattureincloud.it/c/11111/path?fieldset=basic&page=1'
                next_page_url: null
                path: 'http://api-v2.fattureincloud.it/c/11111/path'
                per_page: 50
                prev_page_url: null
                to: 1
                total: 1
                data:
                  - id: 0
                    code: '123'
                    name: Rossi S.r.l.
                    type: null
                    first_name: string
                    last_name: string
                    contact_person: string
                    vat_number: IT01234567890
                    tax_code: RSSMRA44A12E890Q
                    address_street: 'Via dei tigli, 12'
                    address_postal_code: '24010'
                    address_city: Bergamo
                    address_province: BG
                    address_extra: string
                    country: Italia
                    email: mario.rossi@example.it
                    certified_email: mario.rossi@pec.example.it
                    phone: string
                    fax: string
                    notes: string
                    default_vat:
                      id: 0
                      value: 22
                      description: Non imponibile art. 123
                      notes: 'IVA non imponibile ai sensi dell''articolo 123, comma 2'
                      e_invoice: string
                      ei_type: 2
                      ei_description: string
                      editable: true
                    default_payment_terms: 30
                    default_payment_terms_type: standard
                    default_payment_method:
                      id: 0
                      name: string
                      type: standard
                      default_payment_account:
                        id: 0
                        name: Conto Banca di Paperopoli
                        type: standard
                        iban: string
                        sia: string
                        cuc: string
                      details:
                        - title: string
                          description: string
                    bank_name: string
                    bank_iban: string
                    bank_swift_code: string
                    shipping_address: string
                    e_invoice: false
                    ei_code: string
security:
  - OAuth2AuthenticationCodeFlow: []
